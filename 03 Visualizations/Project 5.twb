<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00018000000000000001'>
        <calculation class='tableau' formula='0.00018000000000000001' />
        <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
      </column>
      <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='12.0'>
        <calculation class='tableau' formula='12.0' />
        <range granularity='0.5' max='12.0' min='6.0' />
      </column>
      <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6.0'>
        <calculation class='tableau' formula='6.0' />
        <range granularity='0.5' max='6.0' min='0.0' />
      </column>
      <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6.0000000000000008e-05'>
        <calculation class='tableau' formula='6.0000000000000008e-05' />
        <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
      </column>
      <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
        <calculation class='tableau' formula='0.089999999999999997' />
        <range granularity='0.01' max='0.10000000000000001' min='0.0' />
      </column>
      <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
        <calculation class='tableau' formula='0.13' />
        <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
      </column>
    </datasource>
    <datasource caption='data.world connector' inline='true' name='federated.1arkmi71ov62uk16x1bno06a2zqz' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data.world connector' name='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;jlee/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmpsZWUiLCJpc3MiOiJhZ2VudDpqbGVlOjphYTAxYzZmMi1hMTBhLTRhYzQtOTU3Yi1lZmQwNDM4OTI0YzAiLCJpYXQiOjE0ODQ2OTcyMjcsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.gnpazqWHViw7QcLMWccGADp4i8rmzRFwx7tp3OknW0T4q9JhJFKP46h-mQJL1GKku9rnHN8dXJGQ_WbFPfJiLw&quot;}' connectionName='data.world connector' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[globalshipments].[v_10]' />
              <expression op='[census-pop-sex].[v_2]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt' name='globalshipments' table='[globalshipments]' type='table' />
          <relation connection='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt' name='census-pop-sex' table='[censuspopsex]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (census-pop-sex)]' value='[census-pop-sex].[v_0]' />
          <map key='[v_0]' value='[globalshipments].[v_0]' />
          <map key='[v_1 (census-pop-sex)]' value='[census-pop-sex].[v_1]' />
          <map key='[v_10]' value='[globalshipments].[v_10]' />
          <map key='[v_11]' value='[globalshipments].[v_11]' />
          <map key='[v_12]' value='[globalshipments].[v_12]' />
          <map key='[v_13]' value='[globalshipments].[v_13]' />
          <map key='[v_14]' value='[globalshipments].[v_14]' />
          <map key='[v_15]' value='[globalshipments].[v_15]' />
          <map key='[v_16]' value='[globalshipments].[v_16]' />
          <map key='[v_17]' value='[globalshipments].[v_17]' />
          <map key='[v_18]' value='[globalshipments].[v_18]' />
          <map key='[v_19]' value='[globalshipments].[v_19]' />
          <map key='[v_1]' value='[globalshipments].[v_1]' />
          <map key='[v_2 (census-pop-sex)]' value='[census-pop-sex].[v_2]' />
          <map key='[v_20]' value='[globalshipments].[v_20]' />
          <map key='[v_21]' value='[globalshipments].[v_21]' />
          <map key='[v_22]' value='[globalshipments].[v_22]' />
          <map key='[v_23]' value='[globalshipments].[v_23]' />
          <map key='[v_2]' value='[globalshipments].[v_2]' />
          <map key='[v_3 (census-pop-sex)]' value='[census-pop-sex].[v_3]' />
          <map key='[v_3]' value='[globalshipments].[v_3]' />
          <map key='[v_4 (census-pop-sex)]' value='[census-pop-sex].[v_4]' />
          <map key='[v_4]' value='[globalshipments].[v_4]' />
          <map key='[v_5 (census-pop-sex)]' value='[census-pop-sex].[v_5]' />
          <map key='[v_5]' value='[globalshipments].[v_5]' />
          <map key='[v_6]' value='[globalshipments].[v_6]' />
          <map key='[v_7]' value='[globalshipments].[v_7]' />
          <map key='[v_8]' value='[globalshipments].[v_8]' />
          <map key='[v_9]' value='[globalshipments].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <caption>Row ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <caption>Order ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <caption>Order Date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <caption>Ship Date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <caption>Ship Mode</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <caption>Customer ID</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <caption>Customer Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <caption>Segment</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <caption>Postal Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <caption>Country</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_13</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_13]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <caption>Market</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_14</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_14]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <caption>Product ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_15</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_15]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <caption>Category</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_16</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_16]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <caption>Sub-Category</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_17</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_17]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <caption>Product Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_18</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_18]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <caption>Sales</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_19</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_19]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <caption>Quantity</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_20</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_20]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <caption>Discount</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_21</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_21]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <caption>Profit</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_22</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_22]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <caption>Shipping Cost</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_23</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_23]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <caption>Order Priority</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <caption>Country</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>25</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>26</ordinal>
            <caption>AreaName</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>27</ordinal>
            <caption>population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>male</remote-alias>
            <ordinal>28</ordinal>
            <caption>male</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>female</remote-alias>
            <ordinal>29</ordinal>
            <caption>female</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
      </column>
      <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_46795279869964289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_21])/SUM([v_18])' />
      </column>
      <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
      </column>
      <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='Row ID' datatype='integer' name='[v_0]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[v_1 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
      <column caption='Market' datatype='string' name='[v_13]' role='dimension' type='nominal' />
      <column caption='Product ID' datatype='integer' name='[v_14]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[v_15]' role='dimension' type='nominal' />
      <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[v_17]' role='dimension' type='nominal' />
      <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
      <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
      <column caption='Order ID' datatype='integer' name='[v_1]' role='measure' type='quantitative' />
      <column caption='AreaName' datatype='string' name='[v_2 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[v_20]' role='measure' type='quantitative' />
      <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
      <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
      <column caption='Order Priority' datatype='string' name='[v_23]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[v_2]' role='dimension' type='ordinal' />
      <column caption='population' datatype='integer' name='[v_3 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Ship Date' datatype='date' name='[v_3]' role='dimension' type='ordinal' />
      <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Customer ID' datatype='real' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Customer Name' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
      <column caption='Postal Code' datatype='integer' name='[v_8]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[v_9]' role='dimension' type='nominal' />
      <group name='[Five Highest Sub-Categories]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_16]' member='&quot;Bookcases&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Chairs&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Copiers&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Phones&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Storage&quot;' />
        </groupfilter>
      </group>
      <group name='[Two Highest Shipping Segments]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_7]' member='&quot;Consumer&quot;' />
          <groupfilter function='member' level='[v_7]' member='&quot;Corporate&quot;' />
        </groupfilter>
      </group>
      <group name='[Two Least Used Shipping Mode]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_4]' member='&quot;First Class&quot;' />
          <groupfilter function='member' level='[v_4]' member='&quot;Same Day&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/Jackie/Documents/My Tableau Repository/Datasources/federated.1arkmi71ov62uk16x1bno06a2zqz_1ub4yfa1mb4hoj1gsdcn709srt76.tde' schema='Extract' tablename='Extract' update-time='04/15/2017 03:06:02 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (census-pop-sex)]' value='[Extract].[v_0]' />
            <map key='[v_0]' value='[Extract].[v_01]' />
            <map key='[v_1 (census-pop-sex)]' value='[Extract].[v_1]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_11]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_13]' value='[Extract].[v_13]' />
            <map key='[v_14]' value='[Extract].[v_14]' />
            <map key='[v_15]' value='[Extract].[v_15]' />
            <map key='[v_16]' value='[Extract].[v_16]' />
            <map key='[v_17]' value='[Extract].[v_17]' />
            <map key='[v_18]' value='[Extract].[v_18]' />
            <map key='[v_19]' value='[Extract].[v_19]' />
            <map key='[v_1]' value='[Extract].[v_110]' />
            <map key='[v_2 (census-pop-sex)]' value='[Extract].[v_2]' />
            <map key='[v_20]' value='[Extract].[v_20]' />
            <map key='[v_21]' value='[Extract].[v_21]' />
            <map key='[v_22]' value='[Extract].[v_22]' />
            <map key='[v_23]' value='[Extract].[v_23]' />
            <map key='[v_2]' value='[Extract].[v_24]' />
            <map key='[v_3 (census-pop-sex)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (census-pop-sex)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5 (census-pop-sex)]' value='[Extract].[v_5]' />
            <map key='[v_5]' value='[Extract].[v_51]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51290' timestamp-start='2017-04-15 03:06:02.131' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33777</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1265260644.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24668.758900370442</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>51288</statistic>
                <statistic aggregation='Stdev' datatype='real'>14819.236702394193</statistic>
                <statistic aggregation='StdevP' datatype='real'>14819.09223652428</statistic>
                <statistic aggregation='Var' datatype='real'>219609776.44158715</statistic>
                <statistic aggregation='VarP' datatype='real'>219605494.71461421</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>42475975596876.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>2</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>3</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1102</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;_iauliai&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zulia&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>165</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>5</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Canada&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>6</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USCA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_14</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_14</remote-alias>
              <ordinal>7</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2834</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>236756858.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4616.0432442971342</statistic>
                <statistic aggregation='Min' datatype='integer'>2000</statistic>
                <statistic aggregation='Max' datatype='integer'>6634</statistic>
                <statistic aggregation='Stdev' datatype='real'>1147.3996515016145</statistic>
                <statistic aggregation='StdevP' datatype='real'>1147.3884660342303</statistic>
                <statistic aggregation='Var' datatype='real'>1316525.9602660264</statistic>
                <statistic aggregation='VarP' datatype='real'>1316500.2919883842</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1160403194888.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_15</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_15</remote-alias>
              <ordinal>8</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_16</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_16]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_16</remote-alias>
              <ordinal>9</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_17</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_17]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_17</remote-alias>
              <ordinal>10</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3787</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#10 Gummed Flap White Envelopes, 100/Box&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_18</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_18]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_18</remote-alias>
              <ordinal>11</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16687</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>22638.48</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_19</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_19]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_19</remote-alias>
              <ordinal>12</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>169429.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.3033534802105673</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>14</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.1927757255287301</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1927543491745309</statistic>
                <statistic aggregation='Var' datatype='real'>4.8082653824680497</statistic>
                <statistic aggregation='VarP' datatype='real'>4.8081716358238209</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>806295.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_110</remote-name>
              <remote-type>20</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_110</remote-alias>
              <ordinal>13</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23269</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>201202103041133</statistic>
                <statistic aggregation='Max' datatype='integer'>2015021880140042240</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>14</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_20</remote-alias>
              <ordinal>15</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_21]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>16</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10320</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>8300.0799999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_22</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_22]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_22</remote-alias>
              <ordinal>17</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13472</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>878.38</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_23</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_23]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_23</remote-alias>
              <ordinal>18</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_24</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_24</remote-alias>
              <ordinal>19</ordinal>
              <family>globalshipments</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1430</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-07-08#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_3 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>20</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>579679</statistic>
                <statistic aggregation='Max' datatype='integer'>38421464</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>21</ordinal>
              <family>globalshipments</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1464</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-03#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-07#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_4 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>22</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>295561</statistic>
                <statistic aggregation='Max' datatype='integer'>19087135</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>23</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>24</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>284118</statistic>
                <statistic aggregation='Max' datatype='integer'>19334329</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_51</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_51</remote-alias>
              <ordinal>25</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15089</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>218801408.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>26</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>796</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>27</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>28</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>632</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1040</statistic>
                <statistic aggregation='Max' datatype='integer'>99301</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>29</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3649</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aachen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwolle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.378676' group-percentage='0.110294' measure-ordering='alphabetic' measure-percentage='0.334559' parameter-percentage='0.176471' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00018000000000000001'>
          <calculation class='tableau' formula='0.00018000000000000001' />
          <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
        </column>
        <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='12.0'>
          <calculation class='tableau' formula='12.0' />
          <range granularity='0.5' max='12.0' min='6.0' />
        </column>
        <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6.0'>
          <calculation class='tableau' formula='6.0' />
          <range granularity='0.5' max='6.0' min='0.0' />
        </column>
        <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6.0000000000000008e-05'>
          <calculation class='tableau' formula='6.0000000000000008e-05' />
          <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
        </column>
        <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
          <calculation class='tableau' formula='0.089999999999999997' />
          <range granularity='0.01' max='0.10000000000000001' min='0.0' />
        </column>
        <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
          <calculation class='tableau' formula='0.13' />
          <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Crosstab + KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279863955456]' derivation='User' name='[usr:Calculation_46795279863955456:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
            </column>
            <column-instance column='[Two Least Used Shipping Mode]' derivation='InOut' name='[io:Two Least Used Shipping Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279863955456]' derivation='User' name='[usr:Calculation_46795279863955456:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]'>
            <groupfilter function='member' level='[io:Two Least Used Shipping Mode:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_46795279869964289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_21])/SUM([v_18])' />
            </column>
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279869964289]' derivation='User' name='[usr:Calculation_46795279869964289:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3 w/ Set and Parameters'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
              <calculation class='tableau' formula='0.089999999999999997' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
            <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
              <calculation class='tableau' formula='0.13' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Five Highest Sub-Categories]' derivation='InOut' name='[io:Five Highest Sub-Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]'>
            <groupfilter function='member' level='[io:Five Highest Sub-Categories:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI w/ Two Highest Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[Two Highest Shipping Segments]' derivation='InOut' name='[io:Two Highest Shipping Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]'>
            <groupfilter function='member' level='[io:Two Highest Shipping Segments:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Sales Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00018000000000000001'>
              <calculation class='tableau' formula='0.00018000000000000001' />
              <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
            </column>
            <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6.0000000000000008e-05'>
              <calculation class='tableau' formula='6.0000000000000008e-05' />
              <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Sales per person (copy)]' derivation='User' name='[usr:KPI - Sales per person (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]' />
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-7576056.0056048259' min='-14871981.943447307' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='6544013.2543693203' min='2491489.4633023124' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Shipping Costs Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]' />
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Central US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Eastern US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Southern US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Western US&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-6276191.6467133826' min='-14964330.029719662' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='7107994.7567524761' min='2279878.0261297375' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Shipping Costs Map w/ Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='12.0'>
              <calculation class='tableau' formula='12.0' />
              <range granularity='0.5' max='12.0' min='6.0' />
            </column>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6.0'>
              <calculation class='tableau' formula='6.0' />
              <range granularity='0.5' max='6.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Highest Shipping Segments]' derivation='InOut' name='[io:Two Highest Shipping Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - AVG Shipping Cost (copy)]' derivation='User' name='[usr:KPI - AVG Shipping Cost (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]'>
            <groupfilter function='level-members' level='[io:Two Highest Shipping Segments:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-6276191.6467133826' min='-14964330.029719662' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='7107994.7567524761' min='2279878.0261297375' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
              <calculation class='tableau' formula='0.089999999999999997' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
            <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
              <calculation class='tableau' formula='0.13' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Five Highest Sub-Categories]' derivation='InOut' name='[io:Five Highest Sub-Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]'>
            <groupfilter function='level-members' level='[io:Five Highest Sub-Categories:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-22170906.555965275' min='-71639794.07609421' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='20516614.029882006' min='-11893614.795813307' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Two Highest Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Two Least Used Shipping Modes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Crosstab + KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Two Highest Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Corporate&quot;</value>
                <value>70386.390000000014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Consumer&quot;</value>
                <value>114143.09390000007</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI w/ Two Highest Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_1 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_13:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_23:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Region Shipping Costs Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Region Shipping Costs Map w/ Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI Low (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Two Least Used Shipping Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Same Day&quot;</value>
                <value>619054.5700000003</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;First Class&quot;</value>
                <value>1704045.5900000429</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='color' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Region Sales Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI - Sales per person Low to High (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[attr:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Five Highest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Storage&quot;</value>
                <value>1056414.5200000007</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Phones&quot;</value>
                <value>1599679.5600000042</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Copiers&quot;</value>
                <value>1393871.2000000014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chairs&quot;</value>
                <value>1392548.9700000007</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bookcases&quot;</value>
                <value>1375712.3300000022</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Crosstab + KPI 3 w/ Set and Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crosstab + KPI' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOy9V3BcV5rn+bvpvYH3HiAAAqAnJVK+pKoulVG5rq6Zrumd6Z2d6Yjd7diI
      ieiO2aeOfpmNnd6Z3Z7enWkz5aurSqUiRYmk6D0B0MB7m/DITCTS+8x77z5AVEsC5BMJCcjf
      C5Ewx1yec+453/m+/yfIsiyTI8ceRbHTDciRYyfJTYAce5rcBMixp8lNgBxZQxIT3L52iZGp
      OfqHRwCYm5/FG0m98ztiMkr3g16C6076hife8/eupRmc/mhG26TKaGk5cnwIwaVh+ma8fLtZ
      yxtv/opH97s5dfAgoizy6i9v0dr+BCda8rh57jXSTx6ifzmOY/gRor6Ahnw1l27e4OmvfZfL
      j3pof/pFDjVXf+Y25d4AObKGoaiFJ1qLuXTpOvaKeupKLSwsL+P1hzhy5DnmF8cAicLGo8z6
      0hgIIBpK0ab89M4s8eJzp3CMDeMXVCwvL2ekTbk3QI6sEV134Vhep629A606hVktkJZUyIo4
      l2/f5vkXXkCpNdNQWYbOakVDHKdzEcFYxMFKFSOTs5x66hn6H/VQXV6WkTYJuXuAHDtNLOQj
      LumwW/VZrzs3AXLsaXJnAECWJT5sHZBlGVmWSafT7JblQpZldklXPpTH/3cfhPIv/uIv/iJ7
      zfl8cffC69x60IesgITShDKdIJ1O4/OHmBzpJa4yYzNoeOu3v6RvfImlhRHKqupY96yj12lZ
      c3vQaLWsr3lQafWolF+M9WRmsJM3L19HoS9EJcUQUZFORPAFw0TCIQwGPc5VF3qDibWZXv7+
      56/jWg9RU1HIui+IgIxSoSCZSqNSKXe6Ox9IIuLjFz/7JYtrYWrKC/EGwmhVAmvrftRK8HgD
      e/sQHPB5MZtLULhdxIwa/sOP3qCh3IzSVo4m4sCetlBhriSEhT/43tc4+9o/4lyY4vSZ16lt
      amDO4ea5k0e4fOcRf/CHf0RDWd5Od+ljIhCMpLGZVVw7f47loAK7EdzeNQwaaNrfztDgJM2H
      T3EgP8SJZ19hefAqPX1Kbt64S01DPSWFeZiKmzjRVrPTnfkQZOLxECa7nVd/8WNW/HEKjDYq
      mpsJrM4STyb2+BZIpePQ0SPolRIiEs+++B0OHWxjZX4YW3ElOpMRpVpHxLNEV9d94qLMyOgw
      Ko0WpT4fi1JiNSJQaYPZ6dWd7s3HRkJPa5WNB91dLLpDJJMB8vMqaD3QzuF9dcSiSSSNngK7
      BWSBkf5uPBGZyZFRLCYN+9sPcOniHVoaK3e6Kx+KJMO+1gP03esmHg1TWFSKJMhYbWbSMtjM
      ur19CA4FgxjNZtKxCLJKTSotkI758UdSlBXZWPEEqakoJRL0seYNYbdbUQoS7nU/eXY76x4v
      JaVFOFdXKausQa9V73SXPhaxcJAVl4fyigpcy0vozFYMOi0IoEZC0OpZWZgnv7gCvUpkaXWN
      otIyEmEfoVgKRcJH5/Q6f/B7z+10Vz4USUyzuLiI0VaAQZnGtR6kqMCOxxukwG7G6Qn80wRI
      p9Mkk8mdbnOOLwBiOo2gUKJQCDvdlM/MO2cAQRBQKPb2jijHx0Oh0ex0EzLGllsg75oTQWcm
      HlyjsKwGlQDRsI9wSkWR3bwT7dwdyDLzM6P440o62pqR0kkG+weoamwh4JpH0tioqyzG6fRQ
      Vl6y063ddhLREP2Do7QeOMjS9AgFFQ0U2i1ZbcNmK5As8dbZ02iKGtElXRw+KdDV1UNDTSFX
      bw/y0u+9RHBpGklfRp42xsTcMshw9KmnGLrfRUXrYQ7t++xOSp8X1v0R9Fo1Bn1mVj2FWsdM
      10VK6xqJzN1nfDnA6PAkMbWMMiQivHSUN68+4H/7t/8qI/V9GmRZZtHtp6rYvq31+FZ96FQJ
      3jzza+y2OobnbvP73/j6ttb5fjbteZKxAPMrTsaHRhFR4PGs4XEv0D81T9vx4/Tc7WLdF6C7
      8ybDDgdGrURlpZXe7mH84RgPHz7Mage2G38oSiyR+uhf/DgIAupUCpc/hZQWIQnRYAClIoYY
      iSAow5TVtFJWsb0D76OQZZmVtcC216MzpLg/vMiRg+2U7WvDbNJue53vZ9MECK07eeGbP+TF
      U61gzCca9KPWmSgtKmFpuJfKhkrC4QRFRQWUlZZSUlpJcXEpFh1ERCguKsh6J7aT+spC8m3G
      jJQlSyJjU1Poi/MYvtdNTGNClpOYCisxmFQojAUsjPQxMTrG+PJaRur8NCgUCp7Ign2/r3cY
      rVZFUtQydOW3CIrsb68/0gz6+MeCIGx8LQhs+AMICMIWvysIfPFtA9vH4+fp8/qx59vfeZbw
      T895LyLLEhtjKrv939P3ADly5OyeOfY0W/oC3b9+EVVxE0f214Escn9oihMdzdlu266k69Yl
      Vr0xXv7GK+hUAr13bqEtqmFq7AGikEd9hZHBnn4OvvANOhrKd7q5GSHmW+FnZ+7wb//4D0CW
      eXj9MnMxHXWlIsPja7z05RfpvvwGBU1HeOZYR1bbtmkCyFKK2dU1hPU4q+P3CSqsVBg13FgY
      pnc+TIk+ii+mpLLAyMyCiyPPvcT8SDe2qja++cLJrDY+G3QPz1FWYKWqJAOWGVnCteTGZK1E
      pRSI+NcYmVjikNnK8vwsKDy88s0/wbPkoax454wJoijx+u0hvvv8gYyUpzYVYCnYcBORxCT3
      RvpoqD3E/LiTjvpK7ly8StPxV3Ct9Gekvk/Cpi1Q2LvMrGOeibFJopKF773yFWLxGL71IF/7
      +vOklXlUl1jxhuErzz3J1NgwgYTMqtOV9cZng+Ot1VQW2zJSlgyc+srXKNDMM7LixzE6gaCT
      edh9n8L9p6gu0hHwu4iqDOSbs28SfIxCIfCtZ9szVp5KrUFWbPjlJ5IpKmpbqND62f/81wn6
      A2gNVqK+NSKhYMbq/LhsOgRHfG7ighkh5sUTg8a6MlyLCzgW5kCdR4lZxhlTUFtqw6DTEYjG
      mJ6aoqK2icbqiqx34IuELMsM99xjJSxgiMTpePE5DHKSWCrNaN8dJEMZrbVVyBoj9h2cAJnG
      u+TgWtcjCksKENPFVJemmF4L0VBoYXwpxMsvPMGdS29RfeAENWWFWW1bzgqUY0+TswLl2NNs
      OQHSqSRpUdz4IEsEQ+FstmlXI0sSqVT67a9FwqEgaVFElje+n04lCIXDSLv4xfz4GciSRDAU
      QpJlIuEwybefSzbZwhlO5rc/+Vs05R08dXgfkWiIe48Gefb4MVKJIP6EisoCI1OORfa1tjIx
      PExz235GBwdpPnCIhYkhSmpaKd9mR6pskUqLKBQCyoy4isv0dl5maCnNv/zB14kGPFy/fpuI
      aOFgpYa7I0FeOFXBw+5u9j/3TdprdybiSpZlkikRrWY7ImZl+h9cp3cmTFuekbmQE4utFPfU
      EgqrlR/+8NtZ9STY1MN0MsJaKEZ6egrRM03Z/sM4x/u5ZyggT1ijs2eItoYGjEYLb1y4zKpz
      FbPNwujEIGNz07gXF/nKK4W7ZgIMTq1QnG+moigTliCBA0dPMhffcBjUm+0kwwEk1Fwd9VJj
      MVJYWI5z1UO7UpeB+j4dkiRzqXucbz7Ttg2lC3QcPslM8C4hnYHvvfAKb97sQm/VM7uyjgRk
      M8x+kyrE+tI4PtGOVRElqa/gq186xsKyk1QyzMqqC5VWS2lxGfXVZUREAUPKw+LiOqJajU5n
      pMxuZ8UHB1trs9iN7aOs0IrFmKHBKMv03L7O5Qc92NUGfOEgq+s+dBqZk8c7WF1dRUrEiKrB
      WFhJZb41M/V+QhQKgX3VRdtTuCzTd/cGl7seUG8t5GbnXRpb2hFFL9b8AvY3NWxPvR/AJ7IC
      SZKEILzXYUkURRQKJbIkoVAqkEQRQaHYs05dHxfH1AI1jZVIooRCoXzHsVCWZSRJQqn8/MqN
      ZAxZJi2KqFQqxHQahVK1ycFyu8mZQXPsaXJm0Bx7mk1nAFmW6Om+w+SSh5rKDQXe4f77iKkU
      sWicG7fuUlPfgHILRYDVhUmUBhvqL4hCWraYmxnj8pVrRNIK5sa7WHWnqSgvYm56mCvXuykt
      LeLKpfMEExKB5XHuPJyitr76C6M090HMDg9y5U4nldWlXH7zNCpTKTaTmsvnfkfXwwGK8s2c
      e+syOr2WO9euMuhYpbWpbmetQCG3g7GVCN986QA3L5xl3iNhMcSQJYHJ8WHmQxpSr/2cYEpL
      XZEZhzeBVZNicSnAkYP11Gj1/ObCJVqPPsOJ9qYsdmV7GJtzkW81fCYxgOq6ZuSAl1nfOoOD
      Ab7ytY0Is8GBBwhJFSP9I6RFDRUl5eiUxUzN3MIbTFKWn321ZABRkugcdPD0wfrPVE5eSRUl
      s738+hfnKG2qwWBQIShUvPTyt3n1zOs4x4YprW6itLSK6q/lc/ZqZ9aDqTYtMbIsoVSpUSDj
      8QdZWRgjLkHY78FSUMnxEwcISyaKDQJjM8u88NJLqLDT3tSA2+VkcXERQatlbGImy13ZHkry
      zJgNn9UvR6ZnwsmR1hJKqqrpH+4lnU4RT6opLy1CMGg4cewgFy+d4dHtW9R0HKU0b2cGP4BC
      EGio+Ow+OcO9d5ArjlFVaKSlqY47DzoRRZG1+WHK6tupO3KSSn2CK513GX7wgENHs+9NvGkL
      pDXYCLlmmXMGMKoE7MUVNDU1UFRcgtWWjz2vAH0ySEhj5VB7E6WlpahUAvmFdmx5eeTZzPj8
      YRqb9lFWlJ/1DmUavVaN+jMKwEqpKILeTmVFJe6JHvQlVcwPDdGwr4wxh4v2/S3c7+6kpe0Y
      8eAyy2tBqmtr0eyQ8KwgCBmY9DA5OcW6c5VjJ0/QffU6zQfaGOsdRjDZOdTegm/VQVf/OCef
      eBpZCY111Vl/A+SsQDuALMukUmk0mi+GlGKmkKU0aUn4zAtKJslNgBx7mi3NDLIsv8cZK51O
      faRzViqVIe2cPYYkSe9cfm08YxlJ2t1r0kZ/NwJkJFHa0bZsOgOkExF+8uMfseKNUmzV4QnG
      me95gCK/GOfiEkaDjmAwSCwWZ3nFhdVmYXXRwdmL96gothCMpDEZd+4A93kn6l/lP//9bzh1
      4jCBtQV+8+tzSFotNy5dZGh4keWFWbpvX8dQVEW+NTN6RDtNZG2B/+Nvfs6zTx1HliVuXLvE
      zbfu4Ao4uHuvB63BwrkzrxKXVFSWZVcScpMZNOCepaT5BF99Yh8//umvUSNRVlzMzLU3UQpK
      eh6IDE3O8XsvnuDmtascPfUUbl+cWCTAmTNvIMkK/vjf/E+od4FyMEDXkIOyQivVJZ89+YUs
      ibx17jpVjbWkJQnX3AiSUc3qxDDNR4/DwiwzoSCr/gDxHVwYRVHi9ZtDfPdLmYkJNhRU0ty2
      ES0oCAqaG+twuCIooikq8vUsTzkwGyxE/LGM1PdJ2LQFMtpKmR3s5lZXD5IAEikUAgiSmlhS
      QpYVPPXlr7G2Mo/eoCcaSZJKiqQkEJMKEtLn54CTCZ5sr83I4H9MdX0tq7MOFqZmkUzFqPRa
      4qkIQ/0DjK1GENBwcF81gR2MwVAqFRkb/ADhdTfDI8OMORaYn3Hwk1/9hobKEurbDuMNxbCW
      lZJXWsKiaypjdX5ctjgEy0RCIZKSgEYhkhAVmPUaUCjwev3k5dmQZAE5nSAUjWO1Wgn4fegM
      ZkjFEBVarBZjTh3uQ0gkk0wMTNB8eD9ejxOzJZ9ULAQqPXqNgMcboKSkOEMxCDtPKhbF4w8g
      pCN4IlZK8yVSEhj1OsLxNMUFVtwuF2ZbAUZ9dmOhc1agHHua3bHE5MjxKdliAsjMz04wMDr5
      iQqKRaNIqQjLLvem8iLhXEzxYxKRIAtLGxpK6WSEa1cusR6McP/2DfpHJgh4nFy6cp1oMvvx
      sdvJ9OT021/JTI/1c793BL/bweUbXaTFNF23rjO14Mx6uzaZQSPeJc5cuU9bSwMD3XfoHZ0n
      FXRy+fo1VBoNVy+eI5hWMNrbzbwryvryGA97hnjjd2cpLC3CE0gx8egGrmCCSCSJ07nA3/6X
      /4qtrJrSoi9KGtF/YsUTQJbJUHyszMjAfR5NLNDR3Mjw7UuYGtoZejDA/vZm7l28RUl5DVpx
      lYWIgsrCnXlekiwzvejJmBk27J7n705f4tknjiGJad64fBGvYxHH2jr7a4sZn/FSWVbG/YfX
      ad+fucP3x2GLBBkhiioaKM834wyksRGgZ9JBa3srPf19lLUcYrTnNo8GJlmcG+HR8BJf//rL
      dHQcpr7cwuLSFEthLUfbKnHMLTM3v8y+/Qc40FKX1Y5lilRKRMzYZY3A/vZD6E0b2WZq2g8x
      N3Af16oP18occUkgGl2hbznF0X2fzRPzMyFDPFNJQQBTUTXNjaUbHyQJKRRHqYxQXV1Bf38f
      0Uicq7ff4tQz38hYnR+Xzc5wRhvjPTeZWg2hVcTwJ2Sa6yopLCxEgYLiklJMOgNajYK8okqK
      LRJTCz40soe02ohGn0faPUtIoWd25BEacxHVNhWukILy0i/eG8Bm1mcu/aks03P3Fr0TUwSX
      /FjKipgcm6XteBszk1MYjToCgRBiKklecQXWTMUif0IEQaA4P3PJKrxLDq7dvQdKJdNjHgSN
      n4hoorayjCWXn472OsbHl1DrtO/EoGSLLa1A7//WVvG9H2Q8eieRxhafc3HC/0Q4FMZo2thi
      7JVnlI5FSKsNaN93VbSTfc6ZQXPsaT6WGVSW5Q9c8XN8Mt7/LGVZRn7P9/fms96pMbbJtJGK
      BfnpP/wEY9k+fv/bLyGm0iT8bua8SZrrKzbkOt7OE7bxj4woyqhUSiRZRkBGlECtyr7Exece
      WaLz4lXmfau8/J0fIvrnePNyF1V1raQ886ynlNSU5jEzNc3zL3+LigzJsn++kBl4eIuldRVH
      Gy1c6Brl6VNPMNTzgLi2kB984/mdjQkW00nsVa3k4eO102dwLizR3tGB1qDntd9cIyFosFgL
      mBmaZF9bHQVmAzdv93HwyD4crig2IcTKepw//Xf/K7pdMAP6hxcoKrBQVpKBwSgoOPbcE8z/
      6lcgQDrmZ825iMVWTHWRlanOBSyqJM51D4FUmp0SmxdFiXO3hnnlhe3J1tLafoTpO124F6OY
      dQa0ejtl+SZuOta3pb4PY8stkNezyvSKh3Q4CHoDSoWAb22JVW+UYELAOfaAwvoSZpxhluZn
      IRXAH1Hww3/2XVZXF8m3mUjtrJt3xjjYVpWZwc9GvPWvfv5rjn75W2iSURZnVzj5yg+I+pco
      r9tPWX4aV1TF9756Epfbk5E6Pw1KpWLbBj8yJGIxAqEg+fvaOHm4jge9t6luPUqRKCJmeRe0
      6RAspZMM9veRX1FPsVVLf/8ItQ1NKBUiDscs9uIKdEiYzCbC8TRieB1XIEFFRTkFBXn43CvM
      LK9z7EgHyl3wBsgksizR+/A+/kgCInDkuSP0d9+lcf9hZidHMOeXUVVkpmd4mqeffgqdend5
      1gIgy4z1PWLJF6KhoZapqVlOnDjOwMNu7KWNtLfUZLU5OStQjj1Nzhkux55msy6QJOJZcxOJ
      xknGwiTedsqSpPe6BIQDAR6/OtLpNO9/jaw7l/EEIsiSiNvlfOdqXZZE1r1bH3ZkKUUgENko
      P7zhg5Mjx3ayyRUiEfbyd//tpwyNjmM1awmEEgz09bO2MsXl7jEsWnAsOlmdn0dMhxkYnuDy
      uYsUVtZi1spcu3wFndHE//N//RX1bceYe3SdgTkXZpORnvudqAxGbt+7jc2SRzQUZM21wqOe
      fhbm5hBUMqdPX0Wh0eNankElSNx7MEBlVSWqXRIckuPzxZajqrb1IIdqCpicnWO0v5/B8Wkk
      QUFxaQmP7l4nKilZnJvjratdNO/bh81WSIHNxMiDW5gqm7h25Tr1LU3UlOWxuBrkG994mcTC
      KLKtnFs3byAg0z84zMjQAA/6ekgkfITjIR49HCMvv4zRvrvMLCywuLxAb+clZjw5d+oc28Om
      CSAolMyPP2LYnaC5qgiTvQCLQUZUGVldcGAuqeBQ2z7Mdjul+Rp6h6bQqkMsOt2UlFUx0t2J
      pbyBkrIqDDoNhw408vMf/YTVaBrHYDf5+eWYTFZ8qzNMzq9gz7NTXl5JVWUlVrMJv8cBqjzs
      VisrK8tY7Pm7JsA+x+ePj7YCva0RpFAoNhJkKBTv3NQ9vsZ//FkQhLcTZrw3QYb89t+JoohC
      qUTgcbINxabb4nc7he0FB7EcO0vODJpjT5M7WebY02yhDBfl7OnXCETiOJfWKKt4l1KXnObh
      6AzlRfnMT04gq03otduRSnN3IssSt69f5s7NO5Q3taGR4pw/fY5AWqK36yb3e0YwaSUuXbtF
      SUU1Rp1mp5ucEbyr05w9fwm9JR+7xcjdm5foHZ4H0c2VG4+oqK6i68pFzOV1GDTZvf3eIk1q
      FJc/wcECC32PJpmZ7CMkaqnK1zIfkGmuKOXSG330DM7x5a++xKOuuzz9yh+yv/KLF+31cRiY
      WqbIbqK04LNnbBQEBc88/yJnfv06Vr0Kx8BtPLLAPpONwy//HqffusXq1DQlJVUYdDuXJlWU
      JK4/muSl480ZKc9SUEGxsYeZ5SXqKoqYmBonHVOSCts51FLH8MA0KmUEVyhJgTG7itlbboFi
      4SCRSAwxESaltlNhhmV/hG9882WiQS8rrgjPHD/E4tQMakUK53ooq43OJg0VBRnV6PSvTmGp
      aEQhpZEFFY2t+xnrv8tY3yPaD5+g9cmnqdAF6PyEqhyZRCEIHG2pylh5oihT19xOxOslEY+h
      NhZRVaij4+TTLC4sgspIXoGdndAE3jQBVFoj3/z2t2ltbubQySdprS9EX1rPcyefwG7U0by/
      jZPHW/CnJVoPNFNW00xj+e5Iir0VRr0WjTpz2zx/VMNTp9q5f/kOeXWH8cz1U992HFVhFfsq
      iwisLdG/GOH4DgbFC4KA3WzIWHn+lUW6BseoqyvlXtccTZU2xLxahIifiDKPg635TEy6mR0f
      2uRRsN3krEA7RDqdRqXaW+cnSUwjK5SfKy/h3ATIsaf54AQZ0seJaJERRTHDTdqbyG8nythI
      kLFLoonexVbj5N3jTJLEHXF+3GQGTcVD/N3f/T0zjgUqa2qYGJ0gLz+fidEh1EYLId86kViC
      laV5JODB4BQGRZwVT5g8mzUXB/wRhNcX+A//7Vc89+RRQOaNH/13ArKRkUf3uHK9m8WFJR7e
      vYG2oJJCm2mnm5sRXNOzXLhymWXfGg3VtazPjvK3P71MgSHJ+QvniaaVPOq8yfj0FC3NLVlt
      26Y3QNDtoKLlKEIyzM0LZ7hw4U1+9JMfMzbv5NzZN/j//vpvuHPtEiOTs5y/dpu0x8lgbx//
      /We/IJHefStX15CDeac3I2XJksibb9ykuaWetCixMNSHV1+EEpGCAjMhfwq1EMUZDJLcQYF5
      UZT47bX+jJVXXF+FMhWlorwVSUzy6rVe2uryKSovZ2VmlbySSmwqmfVo9vu8aQKY8yuY6e9k
      cc2LSmfCnFdEQ3Ula+4VVHo1jYeOcvxQM67lFeLJFDIiY1PT2C1G5Kyf4befTCfIaDvYhnth
      EcfYOAmDnWq7krm5GVY8YQqtcUJpFbVlhUSj2c+W8hilUsHvf+lgxsrrPP8ajqQOxCjT4zMc
      O9DI4vIc/cMTNO6vZnWih5DagqzJviDwlgky0qk0aUlCq1aTSCTQaLUk4nE0Wh0gE/K5uXz5
      KmXNRzl5oIl0KgVK5dtSKLk90EchSRLjQ1Ps62hCwcZeOJGIo1CqUSsFYokkBr1+1zxLUUyT
      SqURIx6WQ2aaaixIkowkpkkk0+j1OhLxOCqNNuspVD+VFej90oc5cnxR+VSG6Nygz7Fb2HQG
      ENMJllY2EhU4pmZ5fKz1uVfwBnZuX7ob8XtW+d2Zs/iDQc6dPc2Se52pgR7Onr9EPJUzL2eD
      TVugeMjDuauP0MgBRifX+c7Lx+l8NM6+hnK6ukc5+dwzLMz0oi/Zx9efe2LXmz2XnD7MRh1W
      c+ZzH587fRadTc+0Y54Dp15mebwHUUjyzJPPUVKYn3vTZoEtL8ISIR+RtIkDjQ0EQ0HS8XVm
      l3189WsvMf2wD31pBwnXFKndZ/TZhFqlRLFNIZlqnRYScWobWwjODeHyeHjh+EnuXH6LZXd0
      W+rM8V42TQClWse+1lYsSj8BKY4CAaMlj/qGWmx5NtpOHkP0jGAuaEC9B8JpigssmLcpUUVl
      aQErHj8ldhsBt4eTJ15kZHiQuFaPzb5z7tB7iZwvUI49zR5Yw3Pk+GC2NIO+20lJoVCAIGy6
      mJdlOXdI+xRsvHCFD1DDEIDdqYTxeR0vm5zhktEA97ofMT49hmNonKQUxWTNIxIOo1SpCQcD
      CAo1k4MDWOw2ItEEWo36c9m5zwsh9xx/86MzHDvQyKs//RlzvjD76moYuHWV6w8HsZmMnDv9
      Kq5oiok7t3k0OEZDSwtq5e54QbumZzl36SKBVIqqkhLeevVXDC2uYxEiXL0+TEtrLWPd1+hb
      jlJfUZTVtm16A0hiirU1H5KQQhmOMzs9y+qcg4lFL5b8AuJBLxqDHYsgMTTShWyq4XuvvIxq
      l47/riEHZYXWz+QPZCyooqrOTtS7SPWT3yG4NghAICmh1ShZdS1x9KUf4JjuIhhTgi7FqidC
      XZklU934RIiixOmbA/z+lw5lpLzi+hoqZodQKvXISMQFNbKYpriumbL5dWIBFwNLPvIrit6j
      M5UNPmSJEZAFSKWTyKg4+eQJUpEQ1vwKUskUyVSSxoZWpiZnSe5CL9DHZMIZLhkNs+xcwR+X
      WRnqIeDz4nG7qW2opdJqwrPiZ3aol3A4wZNfOogkpjCbds4KtOEMl5nBDzBy7ypTMRONVWV4
      3F7aO1oR1jy4vF6Wl1dZW/NiNWgZHXdkrM6Py+YEGWKaQDC8MRNlGUGQUSoVKFUaUmkRz8oi
      lpIqVFKKVCxEMKmgvqZi11+IfRZC624mHAvkl1WR9jmxFJczOzLCvuZaHCt+DhIC6PAAAB/y
      SURBVHS0Mjk8SEltE8G1BUSVmfrqnUqQlHm8Hhezc4vYTWrWIzaKzGHiChM2ncyS00Ntwz7y
      LAZCsSQWY+YvHD+MnBk0x55md5yycuT4lGyaAJKUJhh6rxx5PBpkxeVizR/JWsN2JzJe9ypj
      k7MbuYElkcnRUULRJEtzMyysuIkEfQwNDRGJJ3a6sRnF5XS987UsS6yteYiG1hkaHiEcT+Nb
      W9uRs+QmK1AyEuDKtQeUFegJxpQcaa3kwsXzGEua2NfYwPDDCUyl9Ui+RVxhgUPN5fQOT/PS
      V76MQbP7ZD58oSg6jRq9NgOKZbKMa9HD5OQdTMX/GsE5yPRqgtGhC7iTQZRhicYaK6K1nLod
      DImUZRm3N0RxfmasUGH3PP/vz87yl3/2pwBMPrrH1furNJdq0VZWIibCnP31jzj+/f+F1uLM
      iZB9HLbYAsnIYorFpRjhNR937tyl7eBBiEUIet04Xevc67zH8PgCCZ+TqYUlpofvM+MOZrXh
      2cLpCRGKxDNTmCCQTHkQbS2UWzSkEzHajh5Blw4jRUKgCFPR2EZyaZKR+dXM1PkpkGWZ2aXM
      5ew1FVXTtn9DaU5MRXnj5hBmVYiq9haC7kXmV4IcO3kIeQeMiZuWbIVChd1uR6exIIgJBIWW
      Bz2DNDa2olXIBBMpigryKTAZMGkFXF4PJlse+t2Y0hNoqS3OWFmyJNH5aISisgoe3uyisK6C
      i7/+JQ0NLeilERCM+LwuXKEoNVm2hrwbhULBkwdqM1aed8nB6NAw90qqEKJK/vhffZ/xoWFi
      vlU8awGq61N0d/WhrDfQWvpUVt99H2kFkmUZZBDedgneKkkG7L6r++1mzeWhoLjgneQhj0Vx
      HjtD7MbnmYr4CUtG7OaN7eTjBCuKHexrzgyaY0+TM4Pm2NNszg8QjzA8tcDB9uwqdO1FFsfG
      udfXQ/OBDiaHR1HprJRrUkzHBb71ta9izHKyiJ1CTMV4663TlFQc4ejhzOQk+LhsngCpGJPj
      U/R03iCltVJiMSMm1skvqSYlyYyPDPLl7/yQfRWFWW3oTtE3tkhxvoWyos+eIOP9lNTVUeec
      IiXo+NKTh+l1hJkYuIcnqSCeFHdsAoiixPnOUb75dFtW6nM6JpiZlyisyr4QwJZbIElMkxZF
      5EiMYnMST8LA9RudhPwu1BoFa/7dmxDj/bQ1llGcb96Wsi/+7hf0L0cpslm43j3Oc6daUUga
      dGoDyVj2VdIeo1AIfPnEvqzVZ7EXYCLG4NRo1up8zKZDsCxvKD6nU0lkhQqtSokob5jwFIJM
      IplCp9ejzGVu/8wkkwmSyRRanQ4QUKuUJOMxEikZk2n3KMN9JLJMJBxCodFn5sLxE5CzAuXY
      0+SW8Rx7ms3KcKkEnrV15qamEXPvhm1GZmpqnGAkxtXzbzA2t0pP123eut6NuAdezJ7lSV77
      3Wk8vnXOnfkNE3MrWW/D5pjgiJ9L599g1pPAPz/Ko6FFkv5Fzl++hFKj5urFywhKJVfPn0Oh
      s3H3xlsEEgoqSrMby5ktFpw+ZBl027A3DXtdnH7jTWyFdTTUVNHdfY1jx04xOvSIgopGzLqd
      cS6UJJnh2VWK87bn8P8OSi0GRYTJ5XWOHOig6/4d2lqzY3l6zJZboPmZKay2fGKpNI7JfmZd
      bo4cP8KUY554MoHX70erU9I72E8iESYU3zmLxXajVGxWcMgUt86fR6vTML+8wunzr/P8i98i
      FlxjLRxFEHc2zFSVhYB8tQLGh6dQqc04RkaQyK4nKGxxD6BUa/n69/8ly8uzBBMiZRWV1FTV
      UGDPJx5JI4XjCCKkJQXVFaWEvQIqefceJcqLbNtW9tf+xf+I17PI4mqQ1RktE5PjJNaXsarz
      MGTZGvJuFAqBlpqSba9nfnKcoFpHviKKw+PHXFq27XW+n5wVKMeeZvcu3TlyfAwyMgGkd1J8
      5vgoZFl+z7N67BL8rm/sqWf5uP/vfy7ZYktluKGhMR497KWiqpxkWgZZJBqJ4VtbZs4dxmYy
      vPMfFQ6FGO4dxGjPQxLTKFUqUqkUSuXecOT6RMgSnRevcbv7JhVNHST9K/zqH08Tlo3oUx7O
      Xx1ELbm49NZlrCXVG8951yHT/+AW9/vmsWuDnDl/DZu9gItvvYZjNUBTfW1WA2I2K8OlU5z/
      7c85/NV/wU//4R9ISHoqis2se7zk5VlwxjUsllqpLMtnecXJ8moIm83GyJlXqSjOQ2srZc2b
      4NtffSqL3dg+uofmKCu0UlVi/+yFCQoOnzqM43fzqJQC3tVZXvz+P2fiygWuTElU5BVQVlbL
      2oXLJHfwJZBpZbj3s7/jKDN3Orl+pQ9zsZ15xwwNdU/j9ziRgGwunVtugToOn2B+fIA1n4/C
      QjsqdQHPPnWCgvxySsvLSUT9TE3N4A9EKKuvw6CR8fl8tB09ybmf/ohDJ45ksQvbyxPtNZkZ
      /GyoIfzi57+i49QLyCE/SYWO0aFBfDERq0XP6Pgo66EEX3r+JAtOT0bq/DRkWhnuPcgQ9K7j
      dLsoLMyntqYKl9/DsmsCT9CXdSmAzcpw6RThaJxELEwylSIYkygusKPXKpFkBfOLC+RZjaz7
      ItTWVjM3O0NeURkWvYJ1t4fzXT38m3/+/R0Nc/u8IssSYyNDhGIpEr4Eh589xuTQIHX72rGZ
      NYRDYcLrbmbWgxzu6NidcdayjGN8FFcwQlNzM1PDwzQfPopnbgRNXjWVxZnLyfxxyKgZVEyn
      kFBkPddrjhyfltw9QI49zWZlODFNKLS1ApzH631HvSvs95LKpfL8ZMgyrmUH044FZCASXGds
      bIxlp4vVpXkWVlykUzEmRkaJJ3eve8ljkokoo2PjxJMpZqYm8QbCH/1HGWazMlzUz+Xrfbzy
      1ae4duUqFfUt6HU65FScSCiAz2Rmen6VcquevNJSBvv6OHD0GBOjI+itJeRr48w643zlpVO7
      IqAjGI6jUSsz5gwXCofp7byBpfh/xiCKBDzLPBiYpK25ivHuIfJKzWCwUVbXwE4JpMuyzJov
      TNE2O8PduHiDmJBkfHQMVyBFvnGY7//Bd7a1zvfzARdhAsuTvQjWcu7fvMhg3wR9XQ+IrjkZ
      n5pgcXWV1cUF3E43HvcC129cZ82vZ2VmjtXVZTqvXSS4S14OK2sBghlUhjMpVaz6kiBJmOxF
      pOJhXvzKSwRW5ig9cogVlw+9IsLAbPZdgx8jyTJjc66P/sXPiMGoIuDzIelUiMkIUWX2F8xN
      E0ChULE8M8BCSMHcZB8FVTWsu6ZwBVMYLVaKCu0oYiFURgvxSABBpcNms1FZWUZRSQHedT8F
      BXlsU2rdrNNcW5yxlVCWRManprGUFTDc9RBPMERUU0ixLkHP5DzRtWWOtdbimF/BYtRmpM5P
      g1Kh4NnDDdtej1avR6FQYtYZUKsUWPSmba/z/XzoIViSJARBAUggbKjBbVxZ83byaBlJ4j2J
      pGVZYiMJ3C6ZARnm8eN2O9coKi3awu4tI0nyRnLC3Y4sI8kbfd0Ya9kfNzkrUI49zR5YZnLk
      +GA2TYB0IsLp02dJJyK8+tobPI5L8q8t4vbvTgn0HHuXzcpwiTiTD7vpqy7mUd8UDdX3uNM9
      wFNPHsYfnGRkqJ+ShjbwLBMVjPzhD7+PereceHPsObZMkNF6aD/nXr9OR2MpE6OTkI7gDQQJ
      RgIceuYlUhEvI5PzCGoF6Zx0RI4vMJsOwWIyjsvtwRcKYVTriETXcfmi7GtqIJ1MojdbiARD
      JPxu3BEFp548jDL3BsjxBSVnBcqxp8lZgXLsaT71BEjE44jS1to1iXhiT8W1fhZEUUR+W3xY
      kmRgQ5x4t/HuPsmy9IFjJ9tsiglOhNf58z//S5443sq/+7P/wLHDTYxPL2E163G53PhDcRRS
      ks7LFxEMdibGxykstDM7NYkvkkaO+fnFz89y8MRBlLnb4Pch8+jORS53TXCwrYmwz8nrb15g
      ZmQBx+IEdy91okTk2uXTJM3FlOVvnyZRNnFNz/LW1cvMuVdorKnjxvXLXP3dFfxeJ10DIxQU
      FvKL//IfMTcdp8CYXT2kTWZQWZJpr7Ry8co9ahuamBod5dLNe/iee5rxWS8WwqiNBiwaNa6l
      ee5ef4ugmGZu3INJlcTnX8Wkz25Uz3bSOeSgvNBKdUlm+nTw2CnmEw8BMFry0QspSg+0oPHN
      E1aaqG+spHvQRG3x9gtTfRCiKHH25hDf+dKBjJRXVFdB6tZl6uteQkCgsjif+boUhaWFeB2L
      RKISz7z0JOIOWBS32AIJlDe3Mz7toLZAz9j0DGUl+aAw8OUXv8zJI404AzI2k5apqUnyiwtR
      KqCmpgm73YpGiLPidma9I9vFyfbajA1+ZOi9d4d7nfcY6Bmg5+Eteh0+Umtz/ObCdQxigl/9
      +lco9Xqi8Qx5oH4KlEpFxgY/wL1zv2NZMpCIehkdHOMXr53BqkgjikniwTABr4eb125z52EP
      2Z4CH2kFkkQRBOEd56yuKxfIbz5OU2UBsryxb323BIokiSAocjHBH8Hk6CwNrXV7ygqRCDhZ
      CZmprdjQAJVlGUmSdlRCJ2cGzbGn2UsLUI4cm9giQUac+w8eIqUT3Ot+yMc1VgWW5plxfbiz
      XCoeIRxNEvD6sr7X+7wgi2m6HvYAkE7GuHDmdRZWA4w8vM+Fmw+Zm+zld6fPEoold7il24Qs
      MzzwiPMXrxOL+jj/u9+w7A4SC60zOOrIenM2WYFSsQjn/vFVbFYdr/7mEnplkr7ROU4d2U93
      zziH99fQN7rAE8f3c/dOF6de/Ardty5RpNPxaDXAsUPHMCtkQMSsTDC6EqG1xsLDsXlKzSom
      F0QS/jme+r2XWZ0You7wUxxpq896xz8uM0sebGY9+dZMaNfLDDy4R4/Dy5PHjrA00UPVoSfp
      v3ERZzLKMyefp6DERsH0JA7nGh215Rmo85MjSTK944scba3KeNkyMvcejVOgSvLqb9yU7avH
      qFdy461LiKYaOlprM17nh7GlM9zBo/s489oVDrbX4l51kwy58YQSpBIhfNEYiUSAOccCamL0
      dN7DVn+C1vpynvnyN/EuzeKYm2dmdo40EAmvcf1mNzo5hdVWxvGnnqKj4zCH2uuRFeDx7ZwC
      2sfBbNSiVWcmU4skpujrG8a/vIgnEEGSQWPQoUjHMNgKcPTdIBhLkYyLRHcwTSoCFNi2KTxR
      ljHoNFjzdDgDcaqKjLx+4QxTAT9T42MksmwK3XQRJssyGr0VY56FhspKUKRBZaCspIhYMkW+
      3U5KlCkqyiOWkDhw4iR+xwBoLJRWVGDSqUhG1hH1NsryzcTSCp48tp9QTKJlfzPTYwPUVNmZ
      d/pBTGMvLqeiuCCrnf4kGPVaNBmaAIJCyaFjxykpL2ZlYJT8plbuXrxA0xPPI4RXiKssaBJh
      ZoNR9u/fj82wM7oQgiBgM+u3q3T87mXcgRTfeOk4924/4NizX+Lrzz1FUWERhQWWbar3A1qT
      swLtDPF4HJ1up4RPcjwmNwFy7Gk+0gwqS9I7Fpt0Ov1OIgMpN28+FRvJRN7+sEVSiJ1KFLHd
      yO9yftuqj7K8M0lWtkiQ4ec//ef/yqGOJv7P//T35NlVWPOLWHOu0d15E7RWUtF1Fv0i6nSU
      WEoknYgQjCRQKmTWPR40OmMuSOZdBF1z/N//8FtOdDTy6x//DIfHT3NDHTdunOfWzftoDGZe
      /+VPKGk5RPdvf8G1/lFqG5oxaHaHyPDa0jhvvnWFcCxJWUkhv331R3QNLqLwLnH9QT82q52r
      Z88z6VykpaExq23bIkGGiDEV4HbnA0RBi2PGwZprBX/SSMy1yuLyGSrL6rDYjVwfnkMrQX2V
      hZt9MzxzYB+BoBtb9XN86WR2zVnbxf2hOUo/Y4IMU2EVtY2FRP1L1D/zXQKuIQDi/lXW19ZQ
      6k0cPtFCLCmy4Angje2srpIoSpy5Ocj3vnQwI+UVlteRdr9OsK4dWRIRUmr064u4StrQaZQo
      tQb2NRezGMy+GNiWZtDa/e3cu9fLvjIropgmlRQxGM2oTWaOHD5ILBYnnRZBkIkkYoyMT6HT
      CKTSWl586WlSsd3jz34iAwkyYgEfM45ZnCERx/07+L3rrC4t44+rOXKoDffqAjMzM8wuzmPS
      5tFUU0U4uLPOcJka/ACeFSdtz30Z39o8bref1o4OwnoLDZXFFJn0jD7s5s274zQ1ZP7e4aPY
      nCBDFInH4yTTaZSCAkEArVbNqnMNq82CTqMhlUqDGOetS5dICmZefPoIaUGD1WREr1cTT4DR
      oMl6Zz6vRAM+Fp1uLAVFiMF1DHmFzI6M0tLWyOKql5qqChYXFlGZrFiUEr6ISF1dxa5xKIwF
      /ThWnBTadCy6NRSY46jNdswqkSWXn+qqMhYWFjGYbVSWFWe1bZ/BCiSTSqZQqtTvkUbMkeOL
      RM4MmmNPs0WCjBQLCwvIUhrH/CJr7mU+ye10Ohl/J4lGjvcj41qc42H/CBIQ8CzT2dnJ5Owc
      UjrBqnONVCLEw3udhOOpnW7s9iDLzE8P0zMwwsryPJ2dnSy7faSTUVZ2IDHgFgkygvzNf/xr
      /vTP/oS/+quf8T/84ZcJeL30Dk3Ssr8Nx9QopqI6LKk1ArKJYgsseZO0VFjoGnSQR5iRmI2v
      H6tkYHyBb77yDTRf4C2SxxdGr1Nj1GfAQiHLhPxJPFN3Wa5tpFBvxm5S0Ts8y/rsCLOrCvIN
      ETRFFTsqLy/JMosuX+Yi4d6HSmdksfsC1hd/gCq6zvScmynnGG6piO9/K7tuMZutQLLM4QPV
      nD1zjfa2JpaX5nFMTVNRUUHfw0ek9UUsTfRz+fYDxsaGmXZMse4P0tk/yhP77MzMhzhw+AhO
      l5u50Ueshr/YqX784RjxRIb6IAj4/XOk7W2UWzTojBacK4s80VHHneEVYsFl5txB9EKQ+xOL
      manz0yDLuNZD21O2IKBOJnH6kuh1BpZcafZXq+lbceFdWSK5085wUjqFKGgJpeI0VJRhtpqx
      Wq3kFxYjSWmKSsvQqcCiVmIrqqDQZsG1FqWhyEb3+CLPv3iK3rsDaNRRUpLM/oPHMGm+uHE3
      eVYjBl1mLFqyJHHx0nXUKgHf0hqGwjzcgRQH9jdzsL0JjVrNvnIrvaPTNLd3UGjJhAv2J0cQ
      BMqLtkeRQpYleu53E1YJVJaWodCbaKiro6OlEYVSR2VlUVbvQD71Ifj9fyYIIMsbD+/dP8sl
      ytgan9eHLc++ZYKMx89xt/J4fHwe+pizAuXY03xx9yY5cmSATWeAVDzEP/76DK1N1fz8l69j
      MoLZXsS7E/itzk6C1oxW/U/OWsmAkyV3HJvV8J4K5hxTxJVmTNrd4diVWWSunH0NWWPmzbNn
      iEk6Fsf7eDgySW1tHSrl7lufZFni9o3LXDt3AUmr5Nb166hUam5dOI/bn6CmpiKr7dlkBhWT
      SVzjgzzsr2BiZpWSAi3zs3NMu6NUmJSsRGX2FZhg3kH/2Bzt+8oZmVzl5ecOMbMY4le/GSUv
      vwhNeo2gL8ihg0eoOVmT1U5lkvtD85QVWqj8jP5AW7E01suaQkt8ehx7XTsDww8pNKkwWwpR
      7mCSPFGUePPWMN96oSPjZQuCgmeefxHXaoz2fU0M3r7GkqsMpa6c8clpnn7uBNlcKrd0htt3
      sJ0Lb9ygvb6YWCxKWXU18bUljPZiwqsLeDw+LPZSdOkIYcGKMh5gYc1LLBZnX8sJFOkwCpOZ
      Aw0lOL3BT3SR9nnjeFsVFcXbYxGZW/Qg+Z0ojVXsL9aRpzXx3DNfQU+KRVf2s6Y/RqEQeOX5
      9m0r37swTGF9E2lRwXd/8H0iSYGjx2tRKhRbGAW2l80JMlIJvF4/oVgMrUKNoJQR5Djjs04a
      KguYWfbSXF+LApnB4Un2tzQwPDbDiePtBH0rvPpGP9/9/a9y+ewvaTv6NG3VpShsRRjVu+91
      ngmikQDRSJLb12/z9Fe+yvL0AK6YkpeePr5rci2/n6V5JyXVJbinRrk7OsMzzz5Lf/c1mjue
      oqasMKttyagVSJbSJNOg1ahyMa85vhDkzKA59jSb9iWyLJNIbCS4iCcSJBIxPu4UkSWRRHKX
      KpptA2I6TTAYJJVOEwoGSCRTJBMxQuHoLlbOk0km4gSCYWQgmUwgShLht/ufbbZIkOHlf//3
      f8mxoy38+b//K0qLDOj0enr6hjFoFPQOjmM1qOh60E+e2UA4KeFdWyMSDuBamcXhDFFRkt19
      3HaSTKWRYVtiHsY7L3NzYBqrXkdf9yN6JnpxjAzQPzxOZV0zBm1m9Ig+KbIsE0+mUau2wR4j
      Q9+dbjrvvo6lqp3f/PivkdWF3Lt4nZHpeTo6WrJ6EN40AdKJKOsLk8ws+dGb7SjlMJ41FyPz
      LgKuJWacXlYc4xTn67l94yFRvZ3hhz0M9XRTXlPGzHKY1sbqLHZhe+mbXALAYsz8eSYSiRJw
      uVDa8gm4HdQ2HiEV0NDRWgdKI1bLzpyhJEnmcvc4TdVFmS9cgFTMy4xXicI1hTq/BDQ20hEf
      8yt+Tp46nNXb2U11CYKCqpaDrK6v01BiRac3UFpWhjLoxmTNR/I50ShM9A7PUV5bycCD24RF
      gfrmw+yrrUKryW6Km+3maEsVFdvkGJZIJwhE/MxNDtA7s0YskSAtz3DzwSPMeTvjCAcbMcFf
      f7ptW8qWZZlX37yIWSNTdeAEJRYNGp0RU4GCfa0VWb0DgI95CN5IZCCjUAhIsoxSISCKG4kN
      JFFCsQtvLLOCLCNKMsp3Pb+NpCO853t7ATGdRqFUkW3/uJwVKMeeZm8tMzlyvI9NEyCdjHH9
      xi3EZJwr125vTpAhi6w417LTur2CLHLv+jkuXrmBc3aS375+evfGBG9BMh7hzOnf0T88mfW6
      N9nZ0vEod86fp6jIwoWL99ASYmTWzRPH2njQ+Yjyqlpu3L7FH/3hP2PgQRctx55h4N5VBFsB
      HVWFPBxc4l//yR+h2SV72DGHk3yrkaI88zbWoqC+cT+Xrr3F7UCK50+00Du1yDPtddtY5wcj
      ShL3Bhw8cyg7iUvCPjdOf5Lo6BgH25qyUudjtnSG6zjcwtnfXeVgSxWzC16e7qhkfGKJZ559
      EYVg5uDhY5iVCRRqgfHpcfTFNZi0AisuN37nDMHU7jlWlBZYMW+DCfTdyMgoBCVmvZFIMg1I
      CDt4FaYQBJqqsneXk4hHKSmtRq3Ofvz4pjeASmvg4PGnKa5fx643oVJGGZn2cOrJoxgMRlQ6
      AyZHCF9KhdVeSGVDK2qFgJIkAbcL8YARg2r3eHFtX6KIdyGJDA0OItnL+NL/3965/TR5xnH8
      0wMtPdAWoVCtHCZ2AgI6dOlENBlmuqiJ25U7JLvb9bJd737ZsizZ3f6ALZnR7YJFo+g8NCpC
      nIhV1hYqIEeptKXQQvv2fZ9doFkyYHGmb3HYzx/wvKfnyfs8v8P3W+Pm0o0HHDtxQv3rroFG
      o8FVlj+jitKKrWR7/VR51Am9/huFKFCBV5qNsVEvUOAFea4FoCjysiDumggyhSK4F2DZKR2W
      jTMUIZ4mwjb2T/lZYhUhkOW/n389NiMrzgDpZIxvv/+Bk8cOkiquw6RN4DDq6OoNcOTQAQxa
      GSmrMBeNUu6uZikeAaOZK13XOfLuAaR0kiVhZKvLmfes3v+NaxcvMzI+Sn1DI8FBP80t7Tzs
      7WFBq+X9jz/CVrw+xXBqIoTCTz+eQizEqN3exNBkkKbdXgL93ehsVXz43tG8FsOteMNClqly
      FOG7fZ8iJcxobIrNZW6WpDSnT59hfnIE76HDDAX6ECWVPAkP8WbHO0yP9HH+sgmHLs5V/yO+
      +vILyHuDW+7p8Y+wxWlXpSdYq6SYno0ih8MkkxbGIlMIvZGstEhkNoXNnV/HxGfIssIF3wBH
      31bnUJpMxkgkUxhk+OSDk5zq7KK+/hALTx4js8qkVJFVt0DVO/byeCSErliPqdhK9eZyZCUL
      OgNuTxPbKopJSFoyGYldO+sI3r2PwWQiOZdgIBTGYto4BXHe5lpVJj9AIg0tDXWUmCw4zXri
      yXka9tShMwjKSvMQfVoDnU6r2uTnqQ2vx+0g8zhK59nzVDrLCIV8jMZm1r8YTigKUlZGkSW0
      +iIWEglMFgvpxSRGUwkaFAxFemLxOYrNZrJLKXRGM3qtBkURSOlF0BuwWS0vhfLXy0w2s0Qk
      GsfpdJKYfUKR1Y6STiJ0Bhw2NRNv64kgtTDPwmKW8k02ZmYiOCtdzMcj6IttWPPsjVwIgxZ4
      pSmEQQu80qziEplh+NE4rjI7WZ0Vu3VtXfzI1CSW0grMGzBaoRbpZILpaIqaKheytMS1K1fx
      NDYTenAXjFba2/YxNjrBds/GcNlcDSEUBgbDWHQyDwJh6nftIT4SImMuZV+renpEq7GyJzgZ
      47tvvqbUbmJyJo3P10VallmUIRz6kz9udTMel4hPBjnzywUcm0q42HUJZ/V2SjbQ4fcZ05EE
      AoHRkItFLhjo7+F2cIyWeg+jgZuMJgTDgxN0dOynp7efckcRZ691423NnUvjf0URgpGxWUr/
      IXOZKwb9t/ntxj0OH9wPiSlm4hlCMxHa9rRiypEU/fOyikEGHDzQzmXfTe7fuk4slWVqeIqr
      5zoZn5wlLSkEA/e45x+lo83LXCSKLjNLcDya1xvPF7Kcy8SUhsbmNzBZlz+yklJIzi9gNKaJ
      TgTZ0bqXmm2NVLrsObreCyKWxQBUGVrJcuV3H9m5KHOLEv7BBG95d9He5OHMz50ry+9VZsUC
      0OqN1L7eQmtzE96ONsqtRl5rbMBu1tPS3MCilGVz5RZqt5jwD4fR6GUw2HCuUwO32rhdDuy5
      KogTgr7ubsKhEOd+7SK7qYJ0KoqtopaJOOxt2MZDfx/DQ2ECE+vXc6HVathR51JncI2OTz/7
      nOPHD2NmibrdOxFSmjt3+rFXO/OeOfoLcPb+tyINEeUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3 w/ Set and Parameters' width='192'>
      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
      a5YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI w/ Two Highest Segments' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Five Highest' width='192'>
      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
      /h/3E20nCfyXJwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Region Sales Map' width='192'>
      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
      SYliJwtws1WFmARhGLLR66HQSG8C5XzPY3V9jXbcopCSPMuJ45DpG29RRDOstfeQZpk+ScYg
      rqcnOUkTXdbQ9yfuADaHsiHLMpSg8idoz7VJPi/LJpZHmrqxK00yt0sUka/9IZrI9JkEqkyE
      dNHCHAaIUlUuwsagTxyGtYMm7PpD1SmYSpGlee3U+SbEnI0zkjRlauchnjx8L8nadWT7Ljbi
      a+TrCbNb5/nyjns5ff5Dfv4LX2S67ZG3Y6YX21xe3UDlIVt3H+Ln79rGe5fWWbx3bqQPpRQb
      S9f5gz/8DnsOH2Df1i1koU+2sUprap4rZ65xz4P3snH9HMXMDhZCwa2NAdcuneKZp5/j1e++
      zEMP38ObJ0/w3W9+4ydnB5BSslIWaLIRspCS5ZVlfcpKph1E2+fa+L/3N2HbUbLn/j7LK6ul
      B1LH3EzNTlc7hswL4igeOegZdLnCrCx7ru/VxanKZl4+G/g+gywl8sPKiWbGOU6Mcq+b0ODB
      YEAURWX5k7AiLNcRZnYDU/nObtcwiqbsKXMGgX0UrECfPWyuhX499MTNffj3AbOOLtELIbhw
      +gSrcpb790X849/8JnvnZpnduY2tMubmco/HX3icr/67r/OVX/wMv/2HfwZ0uHtvh6ef+jQv
      vfhdHnn0Po5fvMFiWPzk7ACe5zE1NcX6+nrtehgEbFvcWjPTKaWQX/onqLBDLgumZkrTWGli
      M2UzQJcsTLNUI3BQTxSXSlXeXqVGbfhSyiqGHaUoVEGArv+ZydHDnpscUU27TlEUpGlaxffI
      otBnFJfOOU9pH4bRAWShdDn4QI0UFssaypMA6NMJBFlWHr5X/pNVzcby+6yKzLau4IptTQ62
      cbpVkz/Bhl0HDnDsj77J6tpO7t42R3d+K7sWF+mKgK1b23zvhy/z8CP346HINzK23rOV7dum
      AY94KuWPX/wWjz79HG++9cZPzg4AmuOaOPS/KDCTv7q+ps/Xag3nKs0zLTNbC9mOWpVcameE
      2YtrnDZpaY1oR3Et28vu20UGewcYlyY4yFI8Mcw2k1Jqju7pSnhZkVc1UaNSxBsHRuk1UDcW
      1EW/cYTsGhPMuQU22M/YB2O4bY6zDv154SdmBwDIN67xyntrnH3n2/z8L32FU6+fZu/BXczO
      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
      mab54sI4vPgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Region Shipping Costs Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region Shipping Costs Map w/ Parameter' width='192'>
      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
      v70K/x8Fuu1dWad+uQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Two Highest Segments' width='192'>
      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
      Qmv/D/w95S6MZyArAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Two Least Used Shipping Modes' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
