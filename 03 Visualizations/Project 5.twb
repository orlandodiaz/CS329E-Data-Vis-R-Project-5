<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
        <calculation class='tableau' formula='0.00020000000000000001' />
        <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
      </column>
      <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='8.0'>
        <calculation class='tableau' formula='8.0' />
        <range granularity='0.5' max='12.0' min='6.0' />
      </column>
      <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range granularity='0.5' max='6.0' min='0.0' />
      </column>
      <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
        <calculation class='tableau' formula='2.0000000000000002e-05' />
        <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
      </column>
      <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
        <calculation class='tableau' formula='0.089999999999999997' />
        <range granularity='0.01' max='0.10000000000000001' min='0.0' />
      </column>
      <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
        <calculation class='tableau' formula='0.13' />
        <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
      </column>
    </datasource>
    <datasource caption='data.world connector' inline='true' name='federated.1arkmi71ov62uk16x1bno06a2zqz' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data.world connector' name='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;jlee/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmpsZWUiLCJpc3MiOiJhZ2VudDpqbGVlOjphYTAxYzZmMi1hMTBhLTRhYzQtOTU3Yi1lZmQwNDM4OTI0YzAiLCJpYXQiOjE0ODQ2OTcyMjcsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.gnpazqWHViw7QcLMWccGADp4i8rmzRFwx7tp3OknW0T4q9JhJFKP46h-mQJL1GKku9rnHN8dXJGQ_WbFPfJiLw&quot;}' connectionName='data.world connector' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[globalshipments].[v_10]' />
              <expression op='[census-pop-sex].[v_2]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt' name='globalshipments' table='[globalshipments]' type='table' />
          <relation connection='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt' name='census-pop-sex' table='[censuspopsex]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (census-pop-sex)]' value='[census-pop-sex].[v_0]' />
          <map key='[v_0]' value='[globalshipments].[v_0]' />
          <map key='[v_1 (census-pop-sex)]' value='[census-pop-sex].[v_1]' />
          <map key='[v_10]' value='[globalshipments].[v_10]' />
          <map key='[v_11]' value='[globalshipments].[v_11]' />
          <map key='[v_12]' value='[globalshipments].[v_12]' />
          <map key='[v_13]' value='[globalshipments].[v_13]' />
          <map key='[v_14]' value='[globalshipments].[v_14]' />
          <map key='[v_15]' value='[globalshipments].[v_15]' />
          <map key='[v_16]' value='[globalshipments].[v_16]' />
          <map key='[v_17]' value='[globalshipments].[v_17]' />
          <map key='[v_18]' value='[globalshipments].[v_18]' />
          <map key='[v_19]' value='[globalshipments].[v_19]' />
          <map key='[v_1]' value='[globalshipments].[v_1]' />
          <map key='[v_2 (census-pop-sex)]' value='[census-pop-sex].[v_2]' />
          <map key='[v_20]' value='[globalshipments].[v_20]' />
          <map key='[v_21]' value='[globalshipments].[v_21]' />
          <map key='[v_22]' value='[globalshipments].[v_22]' />
          <map key='[v_23]' value='[globalshipments].[v_23]' />
          <map key='[v_2]' value='[globalshipments].[v_2]' />
          <map key='[v_3 (census-pop-sex)]' value='[census-pop-sex].[v_3]' />
          <map key='[v_3]' value='[globalshipments].[v_3]' />
          <map key='[v_4 (census-pop-sex)]' value='[census-pop-sex].[v_4]' />
          <map key='[v_4]' value='[globalshipments].[v_4]' />
          <map key='[v_5 (census-pop-sex)]' value='[census-pop-sex].[v_5]' />
          <map key='[v_5]' value='[globalshipments].[v_5]' />
          <map key='[v_6]' value='[globalshipments].[v_6]' />
          <map key='[v_7]' value='[globalshipments].[v_7]' />
          <map key='[v_8]' value='[globalshipments].[v_8]' />
          <map key='[v_9]' value='[globalshipments].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <caption>Row ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <caption>Order ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <caption>Order Date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <caption>Ship Date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <caption>Ship Mode</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <caption>Customer ID</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <caption>Customer Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <caption>Segment</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <caption>Postal Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <caption>Country</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_13</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_13]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <caption>Market</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_14</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_14]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <caption>Product ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_15</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_15]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <caption>Category</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_16</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_16]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <caption>Sub-Category</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_17</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_17]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <caption>Product Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_18</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_18]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <caption>Sales</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_19</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_19]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <caption>Quantity</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_20</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_20]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <caption>Discount</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_21</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_21]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <caption>Profit</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_22</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_22]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <caption>Shipping Cost</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_23</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_23]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <caption>Order Priority</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <caption>Country</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>25</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>26</ordinal>
            <caption>AreaName</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>27</ordinal>
            <caption>population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>male</remote-alias>
            <ordinal>28</ordinal>
            <caption>male</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>female</remote-alias>
            <ordinal>29</ordinal>
            <caption>female</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
      </column>
      <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_46795279869964289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_21])/SUM([v_18])' />
      </column>
      <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
      </column>
      <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='Row ID' datatype='integer' name='[v_0]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[v_1 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
      <column caption='Market' datatype='string' name='[v_13]' role='dimension' type='nominal' />
      <column caption='Product ID' datatype='integer' name='[v_14]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[v_15]' role='dimension' type='nominal' />
      <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[v_17]' role='dimension' type='nominal' />
      <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
      <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
      <column caption='Order ID' datatype='integer' name='[v_1]' role='measure' type='quantitative' />
      <column caption='AreaName' datatype='string' name='[v_2 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[v_20]' role='measure' type='quantitative' />
      <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
      <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
      <column caption='Order Priority' datatype='string' name='[v_23]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[v_2]' role='dimension' type='ordinal' />
      <column caption='population' datatype='integer' name='[v_3 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Ship Date' datatype='date' name='[v_3]' role='dimension' type='ordinal' />
      <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Customer ID' datatype='real' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Customer Name' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
      <column caption='Postal Code' datatype='integer' name='[v_8]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[v_9]' role='dimension' type='nominal' />
      <group name='[Five Highest Sub-Categories]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_16]' member='&quot;Bookcases&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Chairs&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Copiers&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Phones&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Storage&quot;' />
        </groupfilter>
      </group>
      <group name='[Two Highest Shipping Segments]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_7]' member='&quot;Consumer&quot;' />
          <groupfilter function='member' level='[v_7]' member='&quot;Corporate&quot;' />
        </groupfilter>
      </group>
      <group name='[Two Least Used Shipping Mode]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_4]' member='&quot;First Class&quot;' />
          <groupfilter function='member' level='[v_4]' member='&quot;Same Day&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/Jackie/Documents/My Tableau Repository/Datasources/federated.1arkmi71ov62uk16x1bno06a2zqz_1ub4yfa1mb4hoj1gsdcn709srt76.tde' schema='Extract' tablename='Extract' update-time='04/15/2017 03:06:02 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (census-pop-sex)]' value='[Extract].[v_0]' />
            <map key='[v_0]' value='[Extract].[v_01]' />
            <map key='[v_1 (census-pop-sex)]' value='[Extract].[v_1]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_11]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_13]' value='[Extract].[v_13]' />
            <map key='[v_14]' value='[Extract].[v_14]' />
            <map key='[v_15]' value='[Extract].[v_15]' />
            <map key='[v_16]' value='[Extract].[v_16]' />
            <map key='[v_17]' value='[Extract].[v_17]' />
            <map key='[v_18]' value='[Extract].[v_18]' />
            <map key='[v_19]' value='[Extract].[v_19]' />
            <map key='[v_1]' value='[Extract].[v_110]' />
            <map key='[v_2 (census-pop-sex)]' value='[Extract].[v_2]' />
            <map key='[v_20]' value='[Extract].[v_20]' />
            <map key='[v_21]' value='[Extract].[v_21]' />
            <map key='[v_22]' value='[Extract].[v_22]' />
            <map key='[v_23]' value='[Extract].[v_23]' />
            <map key='[v_2]' value='[Extract].[v_24]' />
            <map key='[v_3 (census-pop-sex)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (census-pop-sex)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5 (census-pop-sex)]' value='[Extract].[v_5]' />
            <map key='[v_5]' value='[Extract].[v_51]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51290' timestamp-start='2017-04-15 03:06:02.131' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33777</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1265260644.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24668.758900370442</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>51288</statistic>
                <statistic aggregation='Stdev' datatype='real'>14819.236702394193</statistic>
                <statistic aggregation='StdevP' datatype='real'>14819.09223652428</statistic>
                <statistic aggregation='Var' datatype='real'>219609776.44158715</statistic>
                <statistic aggregation='VarP' datatype='real'>219605494.71461421</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>42475975596876.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>2</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>3</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1102</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;_iauliai&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zulia&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>165</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>5</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Canada&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>6</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USCA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_14</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_14</remote-alias>
              <ordinal>7</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2834</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>236756858.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4616.0432442971342</statistic>
                <statistic aggregation='Min' datatype='integer'>2000</statistic>
                <statistic aggregation='Max' datatype='integer'>6634</statistic>
                <statistic aggregation='Stdev' datatype='real'>1147.3996515016145</statistic>
                <statistic aggregation='StdevP' datatype='real'>1147.3884660342303</statistic>
                <statistic aggregation='Var' datatype='real'>1316525.9602660264</statistic>
                <statistic aggregation='VarP' datatype='real'>1316500.2919883842</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1160403194888.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_15</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_15</remote-alias>
              <ordinal>8</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_16</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_16]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_16</remote-alias>
              <ordinal>9</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_17</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_17]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_17</remote-alias>
              <ordinal>10</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3787</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#10 Gummed Flap White Envelopes, 100/Box&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_18</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_18]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_18</remote-alias>
              <ordinal>11</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16687</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>22638.48</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_19</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_19]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_19</remote-alias>
              <ordinal>12</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>169429.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.3033534802105673</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>14</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.1927757255287301</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1927543491745309</statistic>
                <statistic aggregation='Var' datatype='real'>4.8082653824680497</statistic>
                <statistic aggregation='VarP' datatype='real'>4.8081716358238209</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>806295.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_110</remote-name>
              <remote-type>20</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_110</remote-alias>
              <ordinal>13</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23269</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>201202103041133</statistic>
                <statistic aggregation='Max' datatype='integer'>2015021880140042240</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>14</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_20</remote-alias>
              <ordinal>15</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_21]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>16</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10320</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>8300.0799999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_22</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_22]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_22</remote-alias>
              <ordinal>17</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13472</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>878.38</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_23</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_23]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_23</remote-alias>
              <ordinal>18</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_24</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_24</remote-alias>
              <ordinal>19</ordinal>
              <family>globalshipments</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1430</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-07-08#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_3 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>20</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>579679</statistic>
                <statistic aggregation='Max' datatype='integer'>38421464</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>21</ordinal>
              <family>globalshipments</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1464</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-03#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-07#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_4 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>22</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>295561</statistic>
                <statistic aggregation='Max' datatype='integer'>19087135</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>23</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>24</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>284118</statistic>
                <statistic aggregation='Max' datatype='integer'>19334329</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_51</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_51</remote-alias>
              <ordinal>25</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15089</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>218801408.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>26</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>796</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>27</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>28</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>632</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1040</statistic>
                <statistic aggregation='Max' datatype='integer'>99301</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>29</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3649</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aachen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwolle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.378676' group-percentage='0.110294' measure-ordering='alphabetic' measure-percentage='0.334559' parameter-percentage='0.176471' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
          <calculation class='tableau' formula='0.00020000000000000001' />
          <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
        </column>
        <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='8.0'>
          <calculation class='tableau' formula='8.0' />
          <range granularity='0.5' max='12.0' min='6.0' />
        </column>
        <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range granularity='0.5' max='6.0' min='0.0' />
        </column>
        <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
          <calculation class='tableau' formula='2.0000000000000002e-05' />
          <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
        </column>
        <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
          <calculation class='tableau' formula='0.089999999999999997' />
          <range granularity='0.01' max='0.10000000000000001' min='0.0' />
        </column>
        <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
          <calculation class='tableau' formula='0.13' />
          <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Crosstab + KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279863955456]' derivation='User' name='[usr:Calculation_46795279863955456:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
              <calculation class='tableau' formula='0.00020000000000000001' />
              <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
            </column>
            <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
              <calculation class='tableau' formula='2.0000000000000002e-05' />
              <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Least Used Shipping Mode]' derivation='InOut' name='[io:Two Least Used Shipping Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - Sales per person (copy)]' derivation='User' name='[usr:KPI - Sales per person (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]'>
            <groupfilter function='member' level='[io:Two Least Used Shipping Mode:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_46795279869964289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_21])/SUM([v_18])' />
            </column>
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279869964289]' derivation='User' name='[usr:Calculation_46795279869964289:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3 w/ Set and Parameters'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
              <calculation class='tableau' formula='0.089999999999999997' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
            <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
              <calculation class='tableau' formula='0.13' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Five Highest Sub-Categories]' derivation='InOut' name='[io:Five Highest Sub-Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]'>
            <groupfilter function='member' level='[io:Five Highest Sub-Categories:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI w/ Two Highest Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='8.0'>
              <calculation class='tableau' formula='8.0' />
              <range granularity='0.5' max='12.0' min='6.0' />
            </column>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.5' max='6.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Highest Shipping Segments]' derivation='InOut' name='[io:Two Highest Shipping Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - AVG Shipping Cost (copy)]' derivation='User' name='[usr:KPI - AVG Shipping Cost (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]'>
            <groupfilter function='member' level='[io:Two Highest Shipping Segments:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Sales Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
              <calculation class='tableau' formula='0.00020000000000000001' />
              <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
            </column>
            <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
              <calculation class='tableau' formula='2.0000000000000002e-05' />
              <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Sales per person (copy)]' derivation='User' name='[usr:KPI - Sales per person (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]' />
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-7576056.0056048259' min='-14871981.943447307' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='6544013.2543693203' min='2491489.4633023124' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Shipping Costs Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]' />
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Central US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Eastern US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Southern US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Western US&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-6276191.6467133826' min='-14964330.029719662' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='7107994.7567524761' min='2279878.0261297375' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Shipping Costs Map w/ Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='8.0'>
              <calculation class='tableau' formula='8.0' />
              <range granularity='0.5' max='12.0' min='6.0' />
            </column>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.5' max='6.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Highest Shipping Segments]' derivation='InOut' name='[io:Two Highest Shipping Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - AVG Shipping Cost (copy)]' derivation='User' name='[usr:KPI - AVG Shipping Cost (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]'>
            <groupfilter function='level-members' level='[io:Two Highest Shipping Segments:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-6276191.6467133826' min='-14964330.029719662' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='7107994.7567524761' min='2279878.0261297375' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
              <calculation class='tableau' formula='0.089999999999999997' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
            <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
              <calculation class='tableau' formula='0.13' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Five Highest Sub-Categories]' derivation='InOut' name='[io:Five Highest Sub-Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]'>
            <groupfilter function='level-members' level='[io:Five Highest Sub-Categories:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-22170906.555965275' min='-71639794.07609421' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='20516614.029882006' min='-11893614.795813307' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Two Highest Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Two Least Used Shipping Modes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Crosstab + KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Two Highest Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Corporate&quot;</value>
                <value>70386.390000000014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Consumer&quot;</value>
                <value>114143.09390000007</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Crosstab + KPI w/ Two Highest Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' type='color' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI Low (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_1 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_13:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_23:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Region Shipping Costs Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Region Shipping Costs Map w/ Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI Low (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Two Least Used Shipping Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Same Day&quot;</value>
                <value>619054.5700000003</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;First Class&quot;</value>
                <value>1704045.5900000429</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' type='color' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI - Sales per person Low to High (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Region Sales Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI - Sales per person Low to High (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[attr:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Five Highest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Storage&quot;</value>
                <value>1056414.5200000007</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Phones&quot;</value>
                <value>1599679.5600000042</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Copiers&quot;</value>
                <value>1393871.2000000014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chairs&quot;</value>
                <value>1392548.9700000007</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bookcases&quot;</value>
                <value>1375712.3300000022</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 3 w/ Set and Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crosstab + KPI' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3 w/ Set and Parameters' width='192'>
      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
      a5YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI w/ Two Highest Segments' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Five Highest' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAYPElEQVR4nO2d2XNb133Hv/de7DtAbFzARaQokRRlyXviVE7G7bROmy7JpOOXznTykj8k
      f0JfMtPndvLQmTST1JPFcexR3DqyZEcSZYmrRAEESIAAsQN37wMJiIlJ4lwQBCjd32esEU2d
      H87Bufd7lt85v3M4Xdd1EIRJ4QddAIIYJCQAwtSQAAhTQwIwKdmtJ3j/l7/GXlU8+I2GL774
      sv3vuqbg5kcf4OH604P/11AoFAdQ0rPFMugCEIPhN79+HxPzbyD9ZAXSyDC2ktv44Gc/wecP
      r+Ff/vkfsXTzfaihOcSH/Pjlz36CEtz49JM7+Nf3/hZ3bt/Hm2//Be7c/Bj+iWnw5SzKmgtT
      UQcePU5jZv4a7HIF17/2Fqw8N+iveiLUA5iUd7/9D3h693/x2d2HKJRL2ErnMHLhJQSVGj65
      +Tssb+QQCYfhcvDIlppYW13Bm6++it3NFUg2K+5//n+IXryK3aePUNM9CFsb+HIjib/6zj/h
      8ec3sZIun/uXH6AewLQ8WVuGJTiMV67O4Y+3/oDJ2ZfBN7chORN4+5vfgvpmBf/98/9B7eIC
      PA4b5hYW4GjUMDL1Egqry1hYvIJbH3+EquDChJ9DQwvg9QszGPK7MRr2IXjt+qC/IhMcrQMQ
      3SCLddz6w21MXF7EWDT47B90FUtLD3F5YQGW56AH6JsAdF2HpmkQBKEf2REEEzQHIEwNCYAw
      NSQAwtSQAAhTQwIgTE0X6wA6NlceAb44fEIdq+tbmL86h4f37iOcuAg0drFbUjA+HEEo7EN6
      u4iJ8ZHel5wgekAXblAdOxtfYrPhRj39EO6hYfisHDyjF5BeXQEnaAjwHNJNQKrv4fW3vgmP
      XWi7QXmeOh3i/NBFD8DBF/CBa6iw2VyYiDhw50Eac7FxqJoGntegaBwEzgK304GGKMHrcO1b
      chw47vwvjhDmwbgAdBVPUrtQRGBmdgbrT7bwjRtvYO3BfYxduAQ0dpErK7iUiCAY9iOdzoEL
      uAHsC4B6AOI8QSvBhKmh5pgwNSQAwtSQAAhTQwIgTA0JgDA1JADC1JAACFNDAiBMDQmAMDUk
      AMLUkAAIU0MCIEwNCYAwNT07Ge7PN5XSvn/ieaCrkMh7n/4efOQiFqaG8NsPP8brr1zDF/eW
      EIiMA80c9soKEsPDiA57sLXTxOWL470vOUH0gK5CIuu7STzI6vArOaRrKobsNsQvXkZq+RE4
      CxDkgY2SiGIhj7/7zrfB61o7HoB6BuDRo0f48MMPmdLGYjF873vfQyaTwU9/+lMmG4fDgR/8
      4AenKaJp6CIiDKjVaqhWVLjsQC2/g0B8GOmtLdQlFZzUgKTo8Dj8GJsdw+NUFrPjMei6Do7j
      KCAGwO3bt/HvP7+D4Mh0x7Rc6n2899572NzcxL/9528wfOm1jjbpz3+BH/7wh70o6gtPV0Mg
      iXdjMgaMJeYxfWkBVrsd6c3HuHBtEbpYQbmhIeT3wOlyolKu9L7U54gf//jH+Ml//Qwcg7C/
      8fp1/OhHPwIAeMOjCI1d6mhT2v6s/bMrEGWyyT34Xcc0xD7GBcDxGE08G9NbnU4AQGLqoDVz
      2eE7dFiwz+87VQHPO6lUCpaLfw13MH5iOl3Xsb7+8z6VimCF3KCEqSEBEKaGBECYGhIAYWpI
      AISpIQEQpoYEQJgaEgBhakgAhKkhARCmhgRAmBoSAGFqSACEqTmlAHSoqgYAUFUVuq5D1zWo
      mtaDohHE2dNVPMAXNz+AGJxF3NZAMrkJf3wMuVwODmcQEHdRrWqIxuKIx+zI1+24MjvR+5IT
      RA/oKij+8sJlLG1riA3HsLaZAidLuPrKG9haWQHvDGM8CKyWalj9QxLf/+677d5B0zRoL1jv
      oKoqc1pN0yDLsqE60HUdsiwbykcHIMsyc3oz00VIpIbVlTU83tWQW68gEBlBMODF3c8+hcMV
      BGq72KqoiMeGsfhWHHeW1vDq4sUXNiTSyPfheR5Wq9XQRYEcx8FqtRrKhwNgtVqZ05uZLiLC
      BFx981u4+me/jo9N7j8kXYcGQDh4yJGTA6UIYqD07Fwgi+XgozgOL1YbT7zIkBuUMDUkAMLU
      kAAIU0MCIEwNCYAwNSQAwtSQAAhTQwIgTA0JgDA1JADC1JAACFNDAiBMDQmAMDVdCaBZr6Ja
      FyE2qniS3IKma0htPkalIaJSLGArk0OjXoem66hUXuwbYojnm65CItfv3UbFMwlLZQdej4Db
      O2nYPEE8/eN9cHoDFoXDlsMLr0uGM3QBXm/vC04QvaALAXC4MDuNpW0NnN2GybEIfvXJMt68
      cQWpSgWcxYOQoGOj3EA6U8C7l1+hkMgDKCTy/NFFSKSK9Y0kciUNk2EvPvnjCr725gK+/PxT
      +CPj4MQc1vMKJkaGMXx9Fiur61icm6GQSFBI5Hmkq5DIK69+HVcAQNdxGQDPcbjxduwgwYX9
      ZAf3AS/OhXpSUII4C04XEslx7Vk0XYBNPI+QG5QwNT0Lij9LmpKMQrHaMZ3baYff6+pDiYgX
      hedCAIqiolhtdEzH8Tz85HIlDEBDIMLUkAAIU3PsEEjX9fbfHMeRl4d4ITlWAKqq4qOPPsLK
      ygreeecdXLp0qZ/lIoi+cOwQSBAE6LqOGzduwO/397NMBNE3TuwB9vb2UK1WYbVaEY/TKbfE
      i8exPQDP83C73djZ2UEoRNsZiBeTYwVw69YtqKqKkZGRF24DG0G0OFYAr732GhKJBGKxmKGt
      uATxPHHiOoAsy1hfX0e5XD4mhf4n7tLDfwjieeDYSfDS0hISiQTW1tYQDAaPTPPl/S+Qz1dw
      4dIM1lZWEYgkgEYOhbKKxEgcsbgXqWwTcxfHz+wLEMRpOFYAyWQSS0tLuHbtGra2to6cCNfL
      RWR3i+BtDsy//AZSy4/AWey4MARsZHO49/ARvvP3325HhAHoKiKMuUc5iDrrJ0Z6u1ZUnNEe
      0qiNju7q2YwcK4B33nkHtVoNTqfz2OgiWbfg+sIUUrsNpJJJ1CUVnNSAKOvwOP1IzCWwkdzB
      pYk4dF2HoihdDY9YbXT0f/hlND/DQ0S9C5suymVWjhWA0+mE0+k80fill65iO1/G198axU7y
      KXxTi4BYRbmhIeT3wOF0oFp5to2Z5/muPEqsIYQc193nnwaj4Y2CIBiyAQfDNhyMhWqamVNt
      h3Z5A7jgDQAARiem9n/ptOPgVwAAr4/2JxPnF9oNSpgaEgBhakgAhKl5LkIiCeIwu8UKVO1k
      LxcHIBrydfwsEgDx3FEo16EoJ2/PYRUADYEIU9P3HkBWVMiy0jGd1WqB1UK+bOJs6bsAKrUm
      tvOljuliQz4M+T19KBFhZmgIRJgaEgBhakgAhKkhARCmhgRAmJpTC0BVVejYP8B2f9+6BpWC
      MYjnhFO5QR/e/QzlJjCViOD+yhPYnQFA3EWtoiEaG0YsZkO+4cDi7ESvyksQPeVUAkhtpWFz
      urG0LOLqq29ga2UFvDOCiaCO1VINq7eS+P533/2TS/JUje2ECU3V2he9sZ5KoWta3y+Ho0vy
      BgBjtBtLHZxKAMPRYexVyvAPBXDvs09hd4fA1XeRLiuIx0ew+I1hfP5gDa9cufjskjyebXWX
      F/h2KKYgsz18juf7fjkcXZI3ABgPamapg1MJ4Mqrr0FRVFgsFqiKAl4Q9gPTAQgHDzkSO/kz
      CGKQnHIrBAeLZf8jhIO/wXGgHTzE8wK5QQlTQwIgTA0JgDA1JADC1JAACFNDAiBMDQmAMDUk
      AMLUkAAIU0MCIEwNCYAwNSQAwtSQAAhTc2oB5At5qJqG5ON1VOoiKnu7SKZ3UK/Voen6CTdM
      EsTgOdV26NreNn778S28sXARJdiRvHsfnN6AVeWQsXvhcUpwh6fh63xG6blA13WsPt3pmM5m
      tWByJNyHEhFnzakEcOfWbbjtAlLbe7h47TpSpRI4ixshHtioNJHZzuNv5l55rkIiFbVzuCLH
      qYbLBlBIZM84LyGRb7z9l0ilniIYCOD+558iEJ0AmjmsF2RMjI5g+PosVlY3sDg381yERLLe
      rHg45JBCIgfAeQmJtDscmJ6ZBQDceDty8Nv9y/K4g0Iuzh19yTZBnAd6djo0x6hKgjhP0A0x
      RE8QJRmPt3Y7pvO47BiLhfpQIjZIAETP0BjmUCxp+skLKwBJVrCezHZM53bZMR4f6kOJiPPI
      CysAYN8d2DHN+WqQiD5DWyEIU0MCIEwNCYAwNSQAwtSQAAhTQwIgTA0JgDA1JADC1JAACFNz
      qpXgXCaFjeQ25q/MYe3BEiLjs0Ajj1xZRiIWQWDIi53sHkZH4r0qL0F0RWa3hKYofeX3pxKA
      0+NHyJbE3S/uIjE7j/T6GjhBg4/nsLxRh7ZcwsL1tw6uT6U9B8TgECUZDfGrEWKnEsB2cgN1
      exSTrib0VjwAx4Hn9nf9qSoHHXpbAKqq9i0kUlEYbQ5CDo1wOOSQQiL3Ocv6PuJDmJIdzue4
      BvhUAlB0HXJ9D47paTx+tIRIYhZcM4dsScHsZBRD0SCSySyGvIl2AfoVEqmDLUCnFXIIUEjk
      adAYO/jD9d01XYREHhewdSoBXF641v45/LW3Dn6KYPJQmqmpxGmyIIgzhbxAhKl5oeMBCKDe
      lFCtNzum87gccDlsfSjR+YIE8ILTaErYLVY7prMIgikFQEMgwtSQAAhTQwIgTA0JgDA1JADC
      1JAXiPgK1XoTqexex3QhnxvR0HNy9v0xkACIr6DrgMawt+G0p7zpuo7MbqljOovAn5nQSADE
      QClW6h3T2K2W50cAj5a+wG5JwcRIHNG4H5vpImanx3udDUH0hJ5PghuyjjGPgLWtNH71wU1M
      TNBmOOL80nMBiJKIalOCy2rH1FgY2/nOYzyCGBQ9HwLNTIwhV1YwFw3B4/chn+18ZjxBDIqe
      CyAcTyB8KAQ4Eou0L8njOA7Y/68j3EGqVpAKk81BorO3eVY2QRCw/Lv/gGCzn2ykAzeuX2jb
      PPnsF8h8ebNjXhNDdui6Dp7nsf3w9yhnVjoXsJZ7FtzDWt+H68HAMzocRGS07thtnpWN4zjw
      DHaH8+E4bv/PUen0PgXrtm6JPCqyqS2OI1AUBRbLV3XarQ1wdHRQL21OKl83Nqqq7j/4IyLJ
      jrPpV323wjuNlK2bfDrZAN09176uBJ/0oMrl8pEhiSfZVCqVI+Nrj6vAVoyoJH31dIDjbDRN
      Q7PZNGSjqiokSUKj0TCUj6IoqNVqR9oc9/K16u4oelnfqqqiUqkwf5/TPFcjNsB+PVSrVUPv
      giRJ+/Xarx7gOKrVKjY3NyGKImZmZuBjuFVb13U8fPgQoigiGo1idHS0o02tVsOdO3cQi8Xg
      crmQSLB5p1ZWViDLMqxWK2ZnZ5ls1tfXIYoiAGB+fp7J5unTp6hUKlBVFVevXmWyyWQyyOfz
      kCQJL7/8MpNNuVxGMpmEKIqYnZ2Fx+PpaKOqKtbW1tBoNHDt2rWO6QGgUCggnU5DkiTMz8/D
      4XB0tBFFsV13Y2NjiEQiHW0A4NGjRxBFEX6/H5OTk0w2S0tLCAaDg18Ic7lcsFgsiMVicDqd
      zHY2mw2RSITpAQKA2+3GxMQExsfHDd1o6XA4EIvFDAWlh8Nh7O3twev1Mtt4PB5YLBZDNj6f
      D6IoYmiI/Yonj8cDQRAwPj7O9FICz3qg6elp5nz8fj8KhQJisRjTIQCtdtjhcCAejzM/VwCw
      2+0IBoOGbCKRCIrF4uA3wzUaDdTrdeTz+SOHDCfZ5fN57O113rPSolqtYnl5GdVq5wipFuVy
      GalUytBRHvl8HrVazVDZFEVBMpk8djhzHKlUCvl8njl9vV5HvV5HoVBAs9k5VLJFNps19H1K
      pRJUVcWTJ0+wurrKdOJGoVCArusolUqGGqlGo4G9vT1D9dDKY+ACcDgc8Hg80HUdbreb2c7j
      8aDZbDK3foqiIBKJQBRFQ4d0jYyMwOPxGDrKZGhoCJIkMX8fRVFgt9sxOjoKm409LLHV8vn9
      fmYbp9MJu90ORVGYe1yO4zA5OWm4dwKAQCDANJThOA7hcBi1Wg2yLB853zgOr9eLarWKaDTK
      bBMKhVCr1QYvgFKpBJ7nYbPZDL2YmqZhZmYGhUKBKf3m5ibS6TQEQTDUVRYKBdRqNUOtS7lc
      hsfjQanEtgjY+v6SJBnuaSRJwvb2NrONJEkQBAE8z0NRFCYbTdNQr9exs7PDnE+z2YSqqrBY
      LAiHw0wteqseqtWqocawUCggHA4zpweAXC6HSCQyeAG43W7Isox4PG5onG2xWPDkyRPmLz49
      PY35+Xn4/f4jPS1H0Ww24XK5oGmaoQp2OByw2WwIBoNM6XmeRy6XQ6lUMjTM8Pv9cLlchlpm
      YF8EzWYTyWSSqdHheR4Oh8PQS9nKx8hQpuUFcjqdhhpDjuMgy7IhG6vVikajMXgBWCwWcByH
      dDpt6MjAvb09Q5M/YH/inEgkmHsATdOQyWQQjUaRyWSY82k0GtjZ2TH0MkciEcRiMdjtHRbU
      DiHLMgRBMPSSWa1WOJ1OuN1uTE5OMtlqmoZSqcTkoTtsEw6HmU+B03UdqVQK9XodHMcxN1Ll
      cpm5oTkMz/MoFAqDF4Aoiu3xtZFJsCAIx/p+e4XL5cLk5CSKxaLhHoDV+9Eil8tBlmUEAgFm
      m2azCZvNhmKxaMjGYrFAEIS2q7YTPM/DYrEYErTdbm+vU7AyNjaGYDAISZKYG6mWKI3UNbDf
      8Pp8vsELoDX21zTNUOsnCAIKhcKRC1S9JJfLged5QxUsyzISiQRcLhdT+maziVKphGq1yvxS
      AvsT2kqlwjwP0HW9Pe7neZ55Enx4OwFr+lqtBlVV4fP5mOw4joOqqpBlGRzHMXvqWh5EI71N
      sVhErVbD6Ojo4AUgyzJcLheq1aqhCaDL5YLD4WDuKk+D0bVCu92OtbU1Q58/PDyMhYUFQy0m
      z/MQBAFOpxPxONsdDK3GxojTgeM4Qz1Ga8gkiiK2t7eZ87HZbJiamkIoFGJeoxBFEV6vF7Va
      jdmtm81mEQwGsbW1NXgBCIKAvb09jIyMMLcw9Xq97T4NhUJnVrZKpYJwOGx4nN3qLVh7DZ7n
      kc1mkclkDAm62WzC4XAwH53eOpm5Wq2iWq0yDzlFUTRUB4IgIBgMwmq1tt2aLJRKJZRKJUiS
      hHq9c6QYAASDQciyDLvdzux1Gx4eBrDvRBi4ADRNQygUQjqdZm4p6vU6JEk6dlNZr7Bare0x
      M2telUoF+XwexWKR2cZut2NmZgYul4t5u0WrJY9EIoYmgQ6Ho10u1iGaLMtoNpuGvEButxuq
      qmJiYoK5Hlr1HAgEDDVsPp8PqVSKeZ7m9XoRj8cxMjIyeAG0ZuNGegCn0wme59tbi8+K1rqB
      oijMPnCv1wufz4dAIGBopdVms+23SAbmGplMBoIgGFqj4HkeXq8Xoigy9xwulwtOpxPZbJY5
      n3K5DEEQDK3qtnr0YDBo6LkWi0Xouo5cLsds02LgAgD2N1vV63XmHsDtdqNcLsNutzMvhHWD
      2+1uT05Zx6TAs/WDs5ygt1Znd3Z2MDU1xWynaRokSUI0GmV+yXieh6qqTJsOW9jtdoiiaGjo
      2C2JRAJer9fQiniLgW+Ga730xWIRIyMjzHYcx6FcLkNRFOaVRqPEYjHEYjHDdsFgEBsbG4Ze
      mG7wer1dL4LxPM88ZNB1HZVKBeVymXmHZsurc9bD1AcPHmB3d9eQoA8z8B5A13UkEglMTk4a
      8oC0fMysizn9JJvNYm5uztDQpF9wHAdN0wy/mKOjo4auNuI4DpFIBPF4/Eyfz/z8PK5evYpC
      ocC8teMwAxeAxWJBLpdDNps19FAkSYLNZsPKysq5uoFS13WEQiEsLy931XucNc1mE6Ojo/D7
      /cwvTDKZhKqqWFxcZM7HarUik8kwb7foluXlZSwtLSEcDhvaSNhi4EMgSZIQiUTAcVz7pWZh
      amoK6XQaMzMzZ1xCY7T29LRcm90s058l6XQaqqrC4/EgEokwLT42Gg3s7u6i2Wwamm/4fL52
      kI/RlVpWZmZm2mXq5vK9gQvAbrcjlUoBAC5cuMBkc+/ePXAcB6fTCY/Hc+6GQLIso1ardTUp
      O2ui0ShkWQbP88xu0MuXLxvOp7Xm0HLXnhVGXNRHMfCQyGKxiEwmA0VRMDc3x/RlVFVFoVBA
      NpvF9PS0IQ/NWfPn1XnexNkvCoUCVFVFIBBob3g8jwy8B2hFW4VCIWYlC4KASCRieA94Pziv
      D7rfrKysQJIkJBIJTExMnNt6GXgP0Ooic7kcwuHwmbvNiP6gKEq7NzzPPcDABUAQg+T/Aaln
      EqyjSwQEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Region Sales Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nNy9WbBkx3mg9+VZq+rut+/tRu/dABrdDTSWRmPjgoUShxRFSeRIMxrLMfZM
      SE922Hpw2E9yxHjCYfvFDi8xYTvC1iz2eCakEUeiNq6gSIIkSOw7egPQjd7Xu1fV2TL9kCdP
      5ck6Vd3QQuHy7+i4954lM0/m///57ylWVlZUGIaMAikl3W6XVqtFEAQjn7Oh2+0SRRFpmgKg
      lEIpVf0uhEAIUV1L8wypJACBF+B7Xu0ZIUT1rgH7unut6Z49Ds/zRo69n/RRgPA8QNXuhX6A
      7/mN7Tb1dztgvmnUeIUQSCnHjvl2wJ5v05eUes49z6vN7ahx2G3leY7vD89FEASEYYjv+2RZ
      RpIk1b0oioiiqLGPJElI07S2fu7a32rtmsZ6KwjCMKTdbo99KAxDer0eQRAQBMEtO/B9Hykl
      eZ5XiFwURTXJ7oS3PI+NpFfd832/ccHc383f9oQZsK+ZSbPba1pwIQTtVptur0eWpgRhANaz
      nuc3LvqtJt3t12YCRVEMLaq96PYzo+bE7cduH6AoCoQQtXlQStW+xX7ebc/cl1IOrYW9lmZ8
      URQRhmE1brMGWZYxMTHRyEiDIKjwxe7P87yKUIHqG27F/MYxQXust8VWzAf1er0aIo97Pooi
      4jiufpoJtj/QhjiIUEpRyKL2jJmIpndcRG667y6YPTluP+b3KAyZ6HSQxaDfwPcJHOS3J1NK
      ect5Mc8aZDbvjHpv1A54q35sQmvimjYxuOvifpcN5p2mncNmNkaiyLJsqN9+v984frNr2P02
      EXwTodrj/ihrAdweAQC0222EEHS73dt6XghBq9WiKAqyLKsGbj7SpdDA9zW1K1X7ABdh7Alw
      OZKBUeLRqHG6f4dhSFCKOwIBUjUi6ridadRzRVHUxmh2O/Oc208T0xjVl43MZs7cNsZ9uw32
      OGwODAPEt+fZrEUURZWIpMq1tPtJ05T19fXG/uwxu997O0R/O0TiEvptE4AQgsnJSXzfv21O
      J4QgjuPaBNo7iI3kQgg86tzIFWmaOFkTsrsijwF7J7kV5xVCMNHpEPkBAoFUin6WDiGD/Y49
      Vrd9mxvbY7Z3OXdn+ihgkM3+OU5/GgdN89nEie3n3Tm1RR+3zzzPkVIipazwwTCeW43ldsD+
      5qa1gAHBfiTNynD1jzIo8+ztEE7g+yg14PLjOGzTM+a6jUhuGy7x3WpMYRjSabehkBSyIC1K
      zqbkEDGMmxfD3Zp2JlseH7Wj2cRr9+syEbcPezcdR/QuuO25hOTqceaZJEkqxI/jeKgt00aa
      phRFQZqm1W5hpAyAQur5zosCBZWRpGlu7J/ueEZ9m1mPj2xasLfsW4EQgiAIiKKoUXl0IQxC
      OvGwQn67/bkLbS+4uwC3Eifc/ltxC1VIsjSll/TpJX1tvXKI4KO0fbtc2eWwo+bSfsb9/VZ9
      fBQYtfMaMHPSbreZmpqqdEC7/263S57ndLvdSlcwDNb8LqUiKzL6aZ80zxv7GkfUt7MWfzXb
      2m2AWbyiKJBS4peyvouQSqlKPrav2b9L50NHbW+uYmaumYWxd4hxk2ff832fTqtN4PsUskAq
      RVbk9LLkltxpVNtN8zDqXRuhq/loID77WaNjmGujdoYmMCLKqLab3jXXNzY2qu8Lw5BOp8Ps
      7GzN+mN/hxlXmqYIzyPNMwRaIhDCq3aDpj5tsfhWxNAEf+MEAAPxx+gDRu4btwg2ggoh9Fao
      6gvShMCu3GlbO5rEkFGcoQkBPc9DCVBycE9KSZpljTLySK7jKHt2X4YJNL07Tja3+xwnHlb6
      ljUGl7BcxDTvugTapPeAlvFXVlbY2Nig3+9XhGQTgBCisvuDRv40TYmjiE6rjVKKLM/IS5GT
      29gh3XHczlrcnmfrrwjGxNXr9aqJM0qIjaQuNdu/KyXJC0kuC6IgwmtYEBuaxAH7XhM0PeMu
      tFQKL/DJs4wgDPU7gqFn3UW4VX/mWZt4mwjcVSqbFFS3j6ZvGbdrmp3Dfsasl/np+z5FUdR2
      GHfHTpKk6s/2NZnnjH/CmEZnZmYAKl9Bt9clK83i44Q329LkMk73W4eYyJh2/1rBVd6qAVhI
      7y6UPdhCaeTPiwJQjc/Yk9Ak+ozjBOZZu62mZ6MgrMat5GB3SvOssR0jSozb6Zr6c79h1Hvm
      vssMXPFlFHG6fTaNwRbXzHXjuGr6ZhfSNEUpRafTqSw9Lte22zfOL4GgFcbEofYej+ph3I7e
      NC/2tZ8qAdjK0O24tG0uqLm+ficrJ34cYtjcapRZ1AVXNGkaS+gHtKOYOIqRskAWuo84jEZy
      nHGEN44r222Mk209z2uczyZEd3cL03+Th3WUeDnK/zKKmEw7dnSA2/YQYhorjRB4ohRdaSb2
      JuY6anzuWvxUCMDeDicmJqrJNmEV9kTZH2Ijs2e2Zs/TChHDi2P/h8EkupzUPOOaCJvag2FH
      kKBcGN9HCJBFUVPQx7nr7f5sDuuObZTo4oLdhv2s/d9tc9y3Douew+KDzVzcsZj3bF+ElLLa
      BWwnmttHkwgslUKhiPxwaC3s77KdpaNwyP1mKeXfnA6glLbq5HlOv9+v4kImJiaYnZ0lz3Oy
      Unk0P42VyLzvKjatKEKjX7OM7nKvUYs9TgxyYZRy5XvamhUHEUnS10pag17iIqg7hlG7U5No
      1MSdXY7WpA8Myb0OF3eZhM1R3XkexTDse01j6vf7TE1NMT09zfr6euUvaPrG2k4gBEpBVmTE
      QVS11/Sdo+YIqAUU2u/+je0ARk60uYWUkvX19coGbBwlBmxPoIs4egsc7AT2c/bzBppEBjcY
      bJTo4W6VTURZIbAQxHGLftKvmXGBGhd0d7pxXNj+e5zYdrvEPe4592cNOZx4IRtuV8QwbRqn
      l5EC7KhQw8HN74Y5Dsbh6x1WUAuUdJmEO8/2uOzdyB7/37gVKIoi8jwnTdNq+zMhskYsMv/d
      bdXzvMpSMArsLdDmUvZHNxHMKI486pqNEAY6Uat8DoTn0Uv6tKK4WiTbujWKY9ntuwvrjtMd
      163kcHt+zD13HE2IZL83Tsxx37fXwnBce22M0ux5Hq1Wq/rbRkyAtbW1Wp9FUSrbajAGY6Vy
      58r9Hlu8ckUwIcTfPAEIIeh0OgC12HAYmMGMOc0dsEGiUfE3dh/mpz0B495zkXuc+OQucLn0
      OliufC4KQxI0p3MdPjZyN4U/mz6atulx3zrum9xvs3eUW+0SNkceBaPGYV938xiMqGtLB/Zc
      Gz1haHcWAruXJuKDYb/IKGZir8VPxQ8ghHZx9/v92gDs+/YAXQ7iPu9CkmfEpfhkP+8Gnrn3
      3f5dcN9NspSs5EaBH9COBlzIw6MVxchCDsnX7reZ/pvi6+1+7fvuortjbvKr2O/Z7d9qPpvm
      w43EvRWY8btgxMRerzf0fd1ud6iPQkqSLB2KArDHOQpXXAJr8qH8VAjAwNTUFHmekyRJ7eNd
      biOlJAgCfN8nDEO63W41aNdBk8uCNEuJg4F9eZyYYJtGDRI2badNZjXP8xBSP9MKo2FuqgZi
      W2icZNb7LtiIbsfaNyFPRWgN2Vs2UdxKVh81HzC8DjZ8lJCDJgZkrq2urg61Y/rP87ymd0gp
      bxl0OEqfGfdObdcY+cV/zeD7PlEU0W63q4hSl7v10j55yWGllHQ6nUo0smVqM3GFlPRTrUck
      WVr7QJtjugqlTSTj7Oduf6EfVGmRtuPL7td+3sAoc+u4haoIzuHarn4zTqwZBfYY7PCQcYjt
      Ju+M2mVckdXdbUaNu2ktPM+rUlBHzW3TGOznb/UdP9UdAAbiUBAELC8v1ywsSkE/S+mUDq/1
      9XUmJiZq3NS2tPjlBOmw2bzmjBq1A7iRlE3PuYqSTTjGE+wGwDWJPC6RN3Ehuy9XZHMRyWUY
      ozihDaNEIPe9cfnBdt9NCO32N24N7N9HrYUNvucRh5FmcEKPL4r07uvqlG5bZmyu+GaLQz91
      AjCDC4Kgig/Jskwrh0IgpSaCCtGkJI5j+v0+vu9XnkTzUXEY6UhTmhVe1+w1Tt53la9RsrKR
      +ZvaMtv4KNnebcfuy4VRSl2TWDNOph/XB9RlaLcfdydrilWyxbhx89bE9UeN1X4u8HzC9gSB
      7zM5OVlzetnmUheaiNb9rp+aCNQ0uMnJyWowSZ6SywLhCZTSsp9SivX1dXzfr6oNGF9BGIYI
      IcoKEqWbvRiOTXGRb9w2746vqR23LfdaEARVCui4dm243VCNpmdc8W7Ud46T7+0dwHBHF7mh
      zrHHjbVJf3HFz6YxjoI4jomjgRPMiDGdTqfyJY3alZoU8RoxdLtddauqEH+TYPIENjY2KvHG
      cBODLEYZjuO4kjGNMl2UYQhFkRP4zRva7XJ1A+5OYO43cfCmZ415d1T+cxOMIljTnlHUx+ks
      7rVRSN8kFt1Om+4cmdIotyOeuW24O4jbt/1cFEVkWcbp06eZnZ1l//79FEVRSQaj8tRdM2wT
      /K2IQDaYBJmJiYkqkcKFPM8pioIkSWi1WjppPQhqFhyIGpHYneCmBXLhdp5pesd+3jj+3Ay6
      W8nqTWO1w47NM+PacYn1o3zHuLbcdjzPayyTMwqpm9q41Vzbu8Xc3Fy1AwRBMHIOmoIgRz33
      t04AoD8+DEMmJyerigFNogtAv9+vTI0XL14cKV/fqr8al9ENVPcVirrr5aN+kG60KAr8IACr
      vdslRlsO/qg2eLuNvyzy306bt8NhP2qboyDLMoIgII5j1tfXmZqaGlKCK7m+IeCuaQf/qfsB
      bgVBEDA9PU2WZfi+X4lFrsPEZJT1+30WFhZqlSek0ubRZlAY7PSEp5VuYylQyuAtAEKAX6bj
      KXTEp+/7gxYMglYIUN5ROmbFXDLt+Z6OZXI5qqvw2fDXjby3AsNdx+VvSyWr7xhcU3ijRMjy
      mrk7SrR0d7kmMKLQ8vIyrVZraLy2L8WuPjJux/1YEQBQVRMwpTOAStwBapNlnpudna0IRSpJ
      IRUDZIfhZdAI6QmvJJgyDZFB5lHo++SywCsvFHlOEAYVfquS0AaLpmrtuyCEtmaMk41vpXu4
      VqDbVeZH6TFNJk2DUKN0JWl2JSXxxYD7F1KWVT0cJb1s17sFMadpOrJsohkraOPH+vo6Fy5c
      YGZmhna7XYWe2IYIU53QWImaLFAfCyV4HEgpa5XEDGWbD75w4QJ79uzB87wq7FoqSV4U5NKK
      zFRKYyBUeCoQtCJtQq0qDojBj3bUopcm6DxkUcqd/mCncHcA04cqEashf6kVRrXaoq6ecivF
      swlcLueGRIyK23ft/krpUi8oEJ4AK/J2wFgMkuudwPd8/PL701zH+URBOETkLuE2QZIklX3f
      jMv9RmMNNLv/0tISSZLQ6XQGcURo38HCwkJVYcIYTZqI/2O3A9hgEPvSpUvMzMwwNTU15Co3
      E1yZHpXmRlr8KCnemnhtZi1Nfei4/rCchWqiLbGmztcFke9TKDWIUKyeNMLVoA1XFMuKXId0
      j0iYGXVtHNjPm+oJgec33m/igGb+kjwjKOfEE16N6QB4wsMPfIvQBFmR43uaa4d+UKar1vuy
      dZjbkfVrYdFFgW9luxkroe/7tNttOp0OUkqWl5eZnp6m3W5TlCH3x48f59ChQwghqhKdbo3U
      oig+3juAUoo0S8nSjLW1NdbW1vB9n1arhZSSJEnYt29fVWTJRBv2s6QxeMqGKAgJS7OpzQ1t
      MMFvURCSpil+4JeON0map7UdwBVf2lFMVuQ1IlBKh1OYHNdx3w3N1p5xcq2Jm6lSCBvEnyYr
      jE3kdiHepndsh9c4U2shC3zPL9cj1RX2RHMxXakkRV5UO4Dps5cmREHYWJPVtGVH3tq7XZrn
      vPHaa8zMzjI5McEdd9xRfVe/ryuAt+L4408AG92N0rs6kEuTpE/gB0SxLrhV5EUl7ymltOhi
      gpYb5N/A83VMj2WnN8+4/fezlND3kYXUFY+lQX5QSloiECDQoRlFUUWnJnk2NIaPQgT2uG6F
      dNBMzK4lbZQ4YtIJjZgBWrQRQgyYhaME34qjSz1RjURkrpnMQVNX1BUFx5lIm+4FQYBCF99q
      tdssLy9z7epV9uzezeraGnme0d3oMj09/fEWgcxCJSaf1PfxPZ+gRJ5+klDkBXE5caZSgScE
      uRPlGCEQa2uoiQ65GO/ptftvlX2Z5HeppKUH2Gq2wsNs9/VwDgOmr1wWhCNi/2353PzdpCuM
      UoTd3SLNc6QqCPygJhrZzzQpw+abcqnFEIP4nvCG3rfXyoy9UJLQDzCnLJhxGbHG7s/zvGrH
      /iim2ybxTintoAvCkHanjVIwNzdHu91m6eZNZmZnabfblW/pY00AAO1Wm41eF1Uo0jSxZG0N
      Al263BzIYTisET0Czyd89zjJV/4QubqKaLeJP/85vKef0u/fYrLdSc6tDDWlCuxoEqMHt8K4
      GmdeFKV1dLRIZnPCceKHTTBNyTPu/UJKcql1lUIWFRd3+7aRJ8szJFqZRWnFvSjFKrMDGT+J
      Lc7cuHlTy+RFQRhFlb8mSRLmSwcWUFmD3B0kCPxbmmBtkEoXJAOdm2EsUKaffr9PIQstDvoe
      rVbM9h3btQJf9hMEwcefADzPY2ZqmqXlZcIgJMmymrXR4IdtJhWlB7aQBdGNm3T/+b8EYw5L
      U/p/8BU683P4Dz54W6ZEA6r8Z8D3fWReIPyBUlvJp0JQlNaTW7ZrFE4UooHLN0IpI1dj8TyK
      PK3MjrZg75fm3iZ9ou5N15wbWZAVAiUlmSyISsKpxmUhvyEIE92LEORZzsLClirvw+5jlAgX
      BiFJklQEIKUEQeOOk+RpVUZfCEGRp0CIJzyyIi8L6qpSzPXopwlZlmkHalli0fd9ZianPv4E
      ABCFWtZP0hQXJyInEebqtetIWTA/P0/aT4lefa1C/gqkJHvxJeS997K6tqYrPPgekxMTVVvV
      o6W4o18b6BBS6fhTY+M2iGAvrqBuDWoyD1bPClGJKNVWXuRDRzJV8rtS+MJDoZVIk6mmq1UM
      dpDA0847O1/CJoQmZNSEq3UX3/MJ/KDGse2xF0qipGJ+bo7ZmZkKwaWUtFut4fwAb/SRT67S
      Pgqa5jMvCuIoICDQTKo01SZZVjIFqcVYBK0oZm52Vn/byF4+RiCEoB23EEonzRi0iYKwQhAT
      hhxHEQhBlmfaejDCK6ys62EUNla9NiKBUVh9z6MT6WSeNM+QJqlbqtJ2Tlk4VyLQ3EgID6hb
      gkATlj9CjldKO+fy0pJi5sAlmMjKkzAJOq7eAZoQW1E9V8LNTW5CPiFKk7AQlVXHvl8RmFBc
      vHSJ+bl58jwjL301qhTDPM/Tpc/RIuutokzGIb8Qom5iVgxMpUqVOSKDCFF7lwTotFvMzcwN
      RK/xQ/n4QKvVIk1TWmEMYlAbSAgdR2QsQHNzs2RFXiGE/8D98PVvDBFCePQh/CBgfm4OGIgD
      toVECJ0AYyOeQVxtagQ/DJCFROUSL9AIkmSa+LSyBwXaMWa3o8enqvpCNgghCPyAsOzbW7+A
      9+6/R0UTqHv/ATKcqMZcfU8QVnNimxJNe25sk+2LsNuJgohCmUJfpdKr1JAoYoOeO8Xa+jr9
      vs7q67TbVR9r6+ssLi4QR9HQjjaqPduPYF8H8BBYHgdt5LAI3yZkrfeUDjLfZ3Z6ttbmpiEA
      u0qEaynp9nqV88p4gqG0gmzfRusf/of0/91XoNeDMCD+3OcIjh0b8hXYnM124AghKjGiUJLA
      87XYY43NbLGer8WStMjw8PQuVMqyvvC0yGBZgwxCGBGqn6VkSUpRnkWwbbaD943/ArF+SSv/
      10+QP/Pfs77RLeNhpDYflmNxEb8JbKXX/lbQSmqhdE6G5qbD+drufAVBwI7tdwzNofExbJmf
      x9j7zRq5cVF2m7XxUYaciIHZNFe3fwaY8SFEUVSrSljdv61WPgYghE6l7PZ07LdRwtI8q6wb
      ZtLNRItSEeXYUaaOHUNev4E3N4uM40ooSXOtHNkWkiZ7uQA830fmwxXTygsoWYDyqlALIbT3
      1xOaEIKywFM/G2zLRpwy8raU2rfQ3+gShRGsnoONy4OJuPQKve4GEljbWAcFWxqSQm4lRpif
      tt+gyp4rnzOKsz3fbrs2o3D9HZWuYGz+pXdeKVXNUVNb9tr6nlceWzsgmMgPkGWQlvbmN5+y
      aX6P45hOp1O9b4dLbyoCyPKsmjQzUVEQ1qg6ICCO4sY2vF079U/rWtORna6CavoPLVu6nkCf
      vqWT+H4wMGV6uqQfUOOknhBEfqh3iFKsMNYiHVrgEfgBi4sLZRRqCFO7NCEA7Hqc1sQErZKD
      BmWZcnf84/wcLoFXZlhZVDJ6TXxydsYmK1VVzULpMJEKKWsWO9Nm87G1RoE2101ckUtcgR80
      vt/kG1FK1VJv1zbWKYqCLXPz+t2PsyfYhV6/R5qkVairUgrSFV4/2+fq6Rf5xGc/z/l3PmD/
      ob1MTEzQ3dggCgPOXjjHvj376fcTOp02RZ6DEKRJQntigvdOnmJiYTfL587RXb3Ce9eX+MIv
      foGJcEAqaZpWaZgwmOSsyCsLjAGZ6/EFUYiHqALzJsrjn4QwJdVTwlKR18ctaVu9Vyp5eZkn
      3cmW8E78MSqaQB76u0i/XSrJsnLUmTE1cX7X/DjKHCnLKhtq4N3TR1xZZtBRYBiSiXeyI0M1
      YYwWe4yinGdZFbPjllRxvwfqgXxG3PKt99I0raqRGL9IL+kTBgGdVlufQzDyiz6GIKUuklTj
      wu1Zls89S0uu8sbzP+H0lWWOv/8yMxNbePPqKl/65MP8xQ+fY98dJ7i2fJPFrXfw3oc32Dsz
      RT/rcv/jT7F6ZQkvvoPla6sUqkc7mqAVNCd4u5ymkPUAMED7BQqpnT7WWvcyXRC2HcbkUh/+
      1ip3q7BhJ6qg3UE9+p8AevfyKHe6hkfN+NzznF2xwH2+sk5JWfk1ENRCnpsSc1w9yXMUbtt3
      4F4zMn6Sp7rkTBhWUaFNekzVVpaRffd7qNVVos88g9iyhaL0wJvnTKBkEATVXORFjvD0Tm7y
      Cvzf+Z3f+W+ajqf8OEKSJKRJUsV4a4XY492f/IipQ0/x8te+w479C8ioza5de/G6V1BsYWbG
      5/ryKq2pGeZm2hw69hlY63H06D30C+iIlBurG1xZvsaRBw4ib3xAb3In022/OrjbJMS4C5M1
      HByuF0ARhVHF/UM/qHQTv+SUqkh59a0PuHzyJVbCOS68e4rWRIQfRayvrgCCkyffZmp6ntWV
      ZaI4JksTslyysbqCH7Xo3jzHm2cyls+d48qFM3z/xy8we8cuJlthbaxNsjsM7xrac63RVYdv
      DxfItb/X3kWa7PujxjAQbSg5tzYsuN7wNMu4ubTE6uoqfom46pvfIv3TP6P44AzFBx/gP/oo
      670eGxtdgiCknyTEJdevBcuVId15kZc+lk2kAwBMdCZIkpTCKyjygiJJCMOQT//CF4mnZ9n/
      n/4Gi/PzvPja6+zdu4tuf4MHHzzExfcE9953jPfPfMDhgwdotdpkjx6m3QqZUIJWdAerL73K
      w8eO4RXX8XfczZ1bJ+mlupRjIQtaUUxWbtE1KJU5G5F03BCD860YOG98U+kY8PyIjevniL2C
      7ok3uXrzBm8ef4XJmUXOL13l73zqGV584SfcvHKVC1cvMTd3B28cP8tDe/eipjym4m0c3Buy
      dFmQF2t0ZgpkETAZh0NEOQpcq0scRkMJJu7vTcRkiytNpthR7XhCVFX9zLz4jvhUSEmr1SJJ
      UzqdNvLq1aoNeXOJtNslzXOCIKDX75FlORNlPVq7r8DXQX65LDBh85tKB1BKsbKyUqseYVdL
      kFJqVz4DK4wnmuv3wKB6gxudqIAsz7TnGQamSimrs2yNlUI7uxwnkirjevxh27mdFVbIgre+
      931utLey8taLbDt4kJMXr/LQvfewdu0MUuwgCq+TS59r633u3TVDd+oI4YWzPPjMEd7+8Tsc
      vm8733r2JLno8Ykn7uX6xbP0/AUeefDgSJ3AnVMbYdM0rSWcV2bPBqtN9b0MK9Z2u7XIVFTp
      S/FKXUgziaCM3yryvEpkcfuo5u30e3T/+b9A9Xu0vvAFws/+fNW/0QNMIpVhWGYseVGQ5Nor
      3g4/5uHQLpjkB3dhe/0e7VabJEsrkcOYHkM/qC2OUjpaUAe1DZDb3irzoiAtsqodRVmLppDE
      UUQYhKR5VvU1pCsY7uc5xFcqaubZwPMJlKQvA/JklemZeU6ePMHC1u1cvXKBnbvvpLd0Bb8z
      x+XL59i7Zy9R3IEspT3ZprfRpzPR5v0TJwja88xNFnxw+TqHD96LX+t2IG+7DMFwRG1rFyip
      5eYkS4lC7V+wFX1faCuVG9FpvqmQsmaWbIpszYqc0G+uJpGmKVNTU7fcwUS/j0pTxPR0pWa5
      xGznCNsWJq23lTWlNhMBKKVYXl6uOLeZwKQUhaRS9NOkTArRSpkoP9x24wdBMFyG0LImJHmK
      QFedk1JWJktZOrsC30Mhav6GmrhgQiPUoIRH4AcVEtm2a9/Xsq/tIdVFwQaRk+ZvNzHkVnNl
      /zQEG/lhTeE2BOALj17aJyzv51ZmmQJt7i0D7ALPr0yUdhLKKHHHNcWmeVa9byOtCZyL45il
      G1dZ7ubcuWdnrc1RyUtrK0t0pmbJ+n3idpt+v8v68nU28ojdOxZrSr699ptKBzCU7G67YRjq
      ukGZjob0A79CMk94BOXfY82EJrKwROqgTKpWqOogjH4ZUFZIKxEGhriVEIIiy/F8r5psT9Tl
      ZENcvSxBAHEQaRt66cn2vQFhgiGaVqMsbiPRKPncOKCa7huxLArCWsCfvUtGQViJLv08JSSE
      hrWo9dmgF5hvr5tIdcChQc4i2+A7X/shR554iBOvPs/lvMPuGY93T19hruNxacnj2EP7uXht
      lXaxgprchp9d4cADn+Tdl17hoSc/xZtvvsj7b7zFkU9+Hlis+nLLVv6tlUb8y5ebe+wAACAA
      SURBVIBCcw87zdCULQnDsBZ/ol3ohT5tnMGC2JWaa0gjtL3eyPSB51cxRUmeViEMqkT+JqQf
      /KFjhDzPxysz1nI5yCMwT3qeRyuMCDyfQkldHrLIS3OeqIVqKCUbK1LbfY8i7iTTvhMdKzR6
      fvUupCq5XIi68m6cju0oHtIGmghrXOaavRZ29Y+iKMiTVWZ3HuLgnbv43qtv88Ebr/POpZs8
      cGgf3W6bw4cO8tYLr7Fj33YuLa3w0suvYzQUJfUxukWuOHrsKC+/+notIcf0XUhJP0s21w5A
      KT9qkSEuNfuBWJDleZWsoRdw+Axi+3eDHFLphI+BAq0h8H3SvKwyUQy8pO6WbnO7GmGUiqPO
      TdBtx0GIEHXxy4Tu1+zxbh6BEGWOcVFFwRayIMtzHWZh6Tr118ryL8LEH8nKA+2KIKARvTri
      CQ/fs4mwtF6JYYeau7u4YxnFMIQw9V3LdNEwxI+3sXH1B3zze9fZurAVL55k25ZFJicn2bEt
      58TbL7Fn/wF2z7X4i8vrtGfmmJycxhOCsJPyJ1/51+w6+Dgnz5xAtieqKh5231Vm32bSATa6
      XW6uLNEK41LGr0cp9rNE7whKJ6VLKWtucxthjeKnkd/ltoP3k3xQfbjI87LS2zCMs7gEns5l
      aMXxkPJnLEn2GHSotmDgRRvsHCbRwyC8CZ8wNY7G1d8ZZZZ0xRjbCjRKxLldsK1Jo3wP7nX3
      EBS3T6VU5atQUtVCN8A450wy5iDX2TXRKj7mZVFcMLK0zrYqNCelrvkb8ISH5w8fMAFUWVNS
      SVpBVHoj6+KFVKokHkEudVy/EhLKyfdLpdi0BcNcjtIUqxFUW1hydIK/X+bBGkuSlCbVUPsR
      dGh1uajGuITZeQbfZZTJrMirA8R9Jzy4CfHsXcvm4OPKMLomTQMm/TE4dZrigw/wFhYIHj5K
      VlZtcIlpaKd0+uj3+0NniI0FZUQ1HVBoyig2EW+1i3kebIacYBt8z9P5AOg8UNtyoydr8KwR
      a3TJ9HrEoFcqfBFhWUunrhcIoSM0g6jMG1VlNpo3UOikUnieXyvJbqAyc5ZpmUmeEQYhWZEh
      c1WeL6Z3GFFak4QQyKyoau+4OoUyJhhKk61StaOdQoIBMZW2dtdqZCNEVuQojEgmKssM1M9U
      GKdfmLZAEHxwhu7//n9gFsF//nmKf/yPaE1NDR1tOgr5a0xqxDP1fjVIVRdBXWYI9bMWzLPZ
      n39tcxGALBVBqYwY4NuhNhaHFJXFBqW5Qi4H5kdR1gUF7a0tVD3EGTSR9NKEdhmrU0hd6DYO
      Qn0uWZ5ViKu7qesFRg8JPF1iMVeFPukkTVFKi1aeAkr/ggQ836PIdYzQKPXRRNq4O48Q2qOa
      lnqQ8WO4MUa2rG8QPMv1HJh82VFIP2TuLZ+N4oj+H30VmwMVp07TOnEC//HHG8ST0VXiXEbU
      RAiuhcnTL1T3w1DXcQKqurG6OlzBzaWb+H7AYqdN+twPNhcB2I4upSRSDrbvURYSEy8U9Ptw
      6RIsbCGbmqpqWwohCD1dRwY1KANiTiUHHQnaabUHi2NuOAho/24UdJOvoO3wZcRkliEUZKoM
      6Y7jaifxy6hIG2wkCCyubyOIViZ9WqFHN+0jhBbdAjVc59OMrbpe2vYLKcnynFzpeBx7DlyZ
      3f7mNElQ168Pzb26fqP2tyvHu+N3v3ec+NMk3thgPMD9fh/P97RTr0zNBPDSFNXtbi4CMEFw
      QZmoDXVu4ILJ35XvHqf3f/8uqteDMKT1a79K/onHq5Ilph3ThrGF25aJfpIQhgGBF2gFSymU
      xSmF0qmZeZYRr60TzMwgg7CKRGyFMWmeIjyPIAqJgqjyppp8VkPc42Re84xdDMCA+d3kzJqk
      /SZuaiOQJwSSgc9BKm3uNWKky3FtMGHG/l13kr/xJlYHiL17uXTlCosLC9VO5Oog7ty7fTTp
      LW4AXpNuYX6P45hur0sYhHhCMDszo9tKU8T8/ObxA+iP17/b0YLmv5HjB1xacO3GDXobG/R/
      /99p5AfIMpI//hPCjS5FPghlrnQIpcUGd6HjKKoq0FWeWwuh0iRhdWWF8P0P6P7T/5aN//V/
      Y2NlhZXlVRSl+bbksoFVVNbEMEVBSOQHlWg2SpZt4pg2mJ3AKxX1JquPDWmR6TTMIiewIj9h
      uPpC05jMuW2tX/91MIGCQhD93Gfw77uX6cnJsR5su+1xXmX7ebsmbJOY5hJTu9Wm2+uSWVX6
      iCJaX/6VzbUD+J5HquqmT6W046awHE3mulIKmeeopaVaO6rfx+v1YXKidj3wBnEuUD9pxD78
      zpjqCstW32q3kYU+4wyh/7fabTL0jiKEsaIMxA+d8udbfgdNeFk6ML02LXJWlksxiOUShclc
      G4UcNuetLEHCqxxh1Tyhd4OsHKdUsjI/CiE0o2DAVaf+h/8Oef48YssWvIUFiqJgamqqtib2
      WAw0Jei7IlLNwmcptKO+x/ztlRUjJjoTJGlKKrPqvDH/4Yc3DwEopaqTJO2sHy3rNpQ+ETA7
      N4MvPPJDB2vbs7dtG2p+jlbgkeV5WdlYZ4l5or6NVpOJqg7osxGt1qUXwMF7mPqn/wQmJkg8
      QaejZU7juAp8vyJgOyRAKkWSJaWI1Wx9UaosStVQLMolFhtJ7Oe0BahAKVkTuZoKeIWlAl8o
      SZ5LJltt+v0ecbszlIerlEJMTuIdOjS4VuQUIsZHIjwfpQqUzEkzSavdqpWmMW3Y4B5w17Qr
      2DuSfbifed428bbiWFeLszLjNhUBaA/o8NGhylo8+15eFOQUtH7jP0BEEfmp0/g7thP//b+H
      CkO80kpjiuWO6lcIQRzFZTiBQgrNYd184goBFxYAcN2LSmlrlOZMsLa2RmdyCqEkUupSJJnM
      LXGvzjGjIKg4tY3wTTufecdOWFfKFNHKaruB0q6NOvct5y8rSysKAa8/9xd8uJrw8LFjvH/i
      LR5+7DFOvP02ndmdvP7c9/nML/8iS9duEIUZ64nPQnAddj/O6hsvsPcTn+Ttl3/E1dPHCRcP
      8vTTnyLwhncEd/zu/DaB+25tPmTOX3z72+w6+AAH9+2s6Q+9bm9zEIBSqqr72VQpLQqiwTnB
      A3N59bc306L1W785NFG+0PZzc81u072mVMG3vvUDJtQV2PUQ/XOXmZrM2HfkEc6fepvF7Xv5
      0Q++xaef+hwfnHqHI8ceZeXaFZTf5vKZU9z1wGPM+1f5sxd8dvjX6afLrKiChx97gjtmJwaD
      rrocDi7LioLIby6oa58kaX+DqyC6SOR7vq5+bYjJGFpFKZpIqoSVG702v/zLP88rP/gmN9dX
      +eaff51ox720z5xn/o69nP7xT5B330105RI/eP0sv/7zZVh2aV6VSrH/noO89d5lMqkI/WEz
      pzkEZZwhYBS4YpEQghM//hF3PfgkC+0+X/29f83WQ0e5dvZdemqOlfdPbx4luN/vN99QentF
      KuIwxhce7ahV/W9FsfYKW/K7Ob3RyIdFUaCER1FIiizl6vWbDXZ2Hz/IEK1tZB+cob9xjrfO
      XOHbX/s6r58+Tr8Q7N6zm+vnj3NleYnvfONbfONH77D0wTl2HrqP9199W6NWqksJHjl2kO7N
      JVbX1koZvFxwQZ2AGewsqtTSXXHH6CTmd7fim92G7UVGUSn0VWkZBjK5yXfWJ8H47JxX/P7v
      f4U12WG5qzh8eB/bt25jptPB792AmTv45OH9nDx9mThq4wcRgRC0ZuDP//DfsrSquLqasFZ4
      9NOiNr81U28QVMcchWFYOye6dl60oPF6EAREkc5s20gk09MxvdWLnEvbrF66wOzue9nTmeHw
      vQ9tjh0gL/KaPGhTep4s8d0fn+fKe8/xzJf/Pm89f4qw1ePRT32Kl55/gYMH9vPsD57js08+
      w7un3+ORRx7i4ocXaLU7nH3/fR759FOceu11ZnYf5uqJE1y9coaJndt44hNP0PLq2/CBuQ5v
      rreQ3ffZ9+CnOf/iyzxw72GuXznD6Xc+IJA36E1uZ7UPjx3Zx/54N521myzMzrA82SKY2s7a
      h7/Hzc40i7s8oglBsdEbac3QO54WeUyYgyFMz/NYXVuj1+8ThSGddoc0S6uKzCaxPMu0F1qf
      qaZNr+2opUUcWVQK7QAZJbIsLpuVyruZ+8OPfYpDj+pEH1XG2wgB3LOIUg9WCvJ/9I9/o9Kn
      AHjgSfbcm+OXVdqeKb/RZPbZ4lgQBNXpj7b83jRHbnkU20RqiOqRJx/hT/70Tzhw32G2T4cs
      7tzJ7Nw83uQkpMubIxguSRLW19fLmHbqeoCAb3/rm0x4PpdPL7EyXbB9cYJkOedSlvHLn/k5
      zn14kuuXzkMQUOQeYnIXc0mXvQe2kwWTbFy+yPTuQ1w+eYK9d8/wF999ns//2q8z3xkklrtx
      5DAIulJKxyVhonmUGiCHA1LqkuqeGAg5xqzXz3T59zzL8QMtzsRhROgH9LOkqq0fBSECwfUb
      NwjDkHarxfLqKmEZdxNFMULoeqlBEJCmKUII5mZnq3E0iRhSSjZ6XV3dTlGZaw2CNp0JbIMd
      mDcKzFhGKaug/T1hWffUfnaUEmxDkzGg6R1zf9PsAN0yQV0g6MTl4WdKgYJ2b535Yz/HiTP/
      nmP3PcKbp9/nkQfuo//W61w8d5OLZ8/Qmt3BaneV++/Zy9TiIZbff4/ZmSlW84CFfYt869mv
      489tpX15jXas3eZKDabH5MoaGHCmgWe6vFPeG5ZtBwqrpJ/nVaaXkbFNSLZZZiEGFaPjIMIX
      Oj+hlyZ4QrCwsKCD6qRkYX6+dmq7jSz9ftJIjE3QimKE5+nyM0FQFsuCqIw+dQ0QJiQk9MMq
      4K+gGEJw87tfFvIyR+Ea/cVw76IoqiNQ7X5GmVBdcAnCLhqmrV2KXq9XVa7eFDtAURRcvX6t
      MtvFVlVoI8fbMODMsnI0mUUYeaaVKcdBnTObd+2KEE2WCpdD2YsOpkIEtRCE1JTmKAtjmaQZ
      swMI9Ak1NkKnZTiIQhOMuW+PSwgdKo4ajE+bWdMyd8Bv5NLmqNkgCEiLvJwTUSG3/b1Vf+gC
      Ap7wqpCKJm7tiifuHBlCSJKkkuFNhpidxtg4ho+4FoWUpKk+i2BT7ADuByd5RjscpBvqo06z
      8iSTgd3eE14VJms0S0/owkhpkWnuG0aV7d+1PrgHwrn+gXFcqYpQRAfxmfj9fpbQCuPKRGkc
      VrJMJrdj+k2otw2manTulDe3x1CJElbyuQkjz4q8ygF2jzS164NGfgD+cEjxUE5uaZ4262IO
      IG+anyazrWnbiEFxHDeGQ9teYtdjPG4tXNzRc+gjophur7c5rEDm0yqHh+MJNlGZmiPpcOPI
      D8usH1klviily2JIpc/zMlYVO03SRnZ3ku0xjJI9QSN/L+2Xp1XKSkwoyoXr52l5fI8gKU+b
      NOUI7fqjrrMJBogXlMn0tXmyEMn8tDlnHEZl3q+sVbSwv9v9XheGrUoDy1qrZCYGYe3nR4Er
      4xuLljsGey2GzlaTEq7fQOTDoen2d9nSgj6zoLU5dgBPCB2LkxjuI8oElgFXinwdS6PQYkIr
      iolDHQqbFTqEOg7CMudX19OPzASbH2OULJsgRilkQgh9PJNSVZ4viDK8wkeqwYkvJqRb5qlG
      FlW2W55jbBeGbQKXIN3x2/qDfS/wfEQYVQUEbH2jiahx7jeJkS5nbxJBRoHbpud5RFFEnue1
      Wqz2t1Y7XJ7rChZ/9FXS732f4PBhwt/6TfDG5yObMW2qE2Kmp6ZZ39jQ3Ku6USIdAulJsrzQ
      tW2UYq27MZDnlQIxKFqbKV3zJs2zWj5BVBamtbfYJE+1HVx4g9PIywXW76tawSg7E6vIMopQ
      F8I1pj0TP4MQWllU+n5RxhqpsnRfq90CVVqI0DqELbK4yDpq3gxy1Tis52tlt6Edw73zItfl
      2Uuwdwd7fmxIMl1ILCyT55vk86YxNlluTDHiUX0BVWhMcfo0ZBnF++9Dv0evKJibna2iWptS
      LE3fm4IADHi+D94wVxJCEAYhsjSTep5XPibsx6tUkkBoB4vyqE59DP2gkpdtTpOj5XRzTJIt
      X3uYiFDtOW2FcY2jCqFDpINyJ/DKv41yrZTCk4Uec+BX94uiqOQ+I78XUtSOVXJhHKI1Lb4n
      vKED8ux5DZ2jlrQolxOWR9W6z9f6Pnee7r/7A1SSEP/SF/EfuL8mFrnvubusNuVGVWqj+y3m
      vU5ZpS/41V8l+e53CR8+ij81RatqU1WVp5vmSKlNFAvk+z5hWbEM6lv6QFHSnL4YKaKUm0E5
      ybpqnL5nZFe77TTPEAwcLvY9I3+341Z1Io2gjgwVB7ZObp+amqoq3EVRRLffIyuzt+zUPnf8
      9iEgo8SCRuRHH18ky3N7XaXX/q5xROQJj9DzMZ5kG1mXV1ZQStGKY1pRRO9f/SvkJX2oR///
      /dd0/uvfYc33aMUtPY4Gf4IryhVlrsY4MdCAf88BOvccGOz21jf40YBYXRFKSrk5lGAYuPuH
      PJel0ttLk8YQAgPG2qKwwpxLM6JtVjXvmXdDP2xWRoVXRi2IoWC6UbKwXaJvenqaqakpZqam
      a8Wv7Pfd789La5cLrn6iVL3mTpLreH9jMLDBtZM3zZ/5aebfvGMrl+sbG1y/cZP+xgby5iD8
      XPX7yPU1lpaWWVtfZ2lpuVE+N8qtGb924Omgvd7aTb77/edIikF4s9nl7SqBXtlGtn6dlUTS
      X12jEB5rayusXPuQ733/J6SFIssysizTVrihkXyMQXOPsHYghU5qHxwBagK5qr9LYimU1OG9
      qkCJ5hRGG8wOMVJ2HVF5wbxr6wouZxVCe1WllCRJUl23jzttgkIWQwdJV+9ajjZT9MmUTwFN
      NFX+gYA0z2lHcU08GCWiNPVhPzMzPc10Wc/TE4L0madJvvFNAIL7jxDs2MFeJ6xh1Nzbf2vG
      I/ne15/nic9/mssn3+S1989x/3338Porb7Nz3y5++K23+aVfe5r33jvDru3znL1wg08enOHa
      7BThibeYe/xTnDrxNldPn+DoM1+kyAs8oSr9ZtPsAEopAk/Tq53sYSZsSCxQpUlR+FZ8mTk1
      sHnCbWhq1xlQzRlnH85nrtmLbZBreXm5hkhxHFe+iYm4PSAqoWN1jHPM7IAmNMH+VtuKopSq
      vLfmFBpzRJNXOsF8v1SCRd1kKoQYVNpgOPvLnhN3DNV6eB7Rr/wyE//Vf0nnt/9z2r/1m3il
      yGMcbfZ8uHNu7w46xTRFTEwxPzvHSydPEiI5/f6HHHvyKbIlwSOPPopcus62Ow+ytrbEuXPn
      6aXlDlWGlhdpn5//4pf5ybN/yvnrffJ8MKebagcwzpykKt1XR85qEZT2hKpSCVKGGHwf8Kvc
      YhtGydDmngvus3l1UMaw6dFtu9vtMlEeyh3HcZVrAINTcHppn5qdEqPA6G8p8oLYOhzPlssL
      qRHN+D4CL6giO3vl8ya3QCmdg2BOgskso0BTKmOe53Q6nUYnXEUYvo9/151D9+2DWNy8XoDz
      58/TbreZm5uriKEofHYsxnzlq3/Mrjv2cu7aNY7s3sVkK2ZxxzY+fPdF0sUjHNi5wMsfvE04
      MUFregt+y2f2yF7+8Cv/H1t33MObb71FPrONmZkY37PEvs0QCgHQ7XVZW1sDIMmzAbIziPEA
      fYas53m1hHcoY2nKbTjP86GDLkY5tpqUTtfEV0jt7PL9Qd0iGAR1NYkOk5OThGFIt9tldX2N
      QkraUUw/S2vHLtnj0d8raEcxG70uk53BecHVeCkPh1ZUZWJaYaxLpVj6g6l+DVSnVpoSLqCJ
      rOnQbfNNP/rOd7hZCL742c+AAN8TFIXi4pnL7Nh/R1k4TCcreb7PO2+/ypEjD/Heu++za/sU
      H16/yTtvvM62vQ/y4L37OH78OOvr6xw6dIi58uxm0ARnCP124FZWsKIoKh8DbJJgOKUUeZZX
      B0dnRVGryWNCC8yzMKieYK5JVeAzHDfk9mNbb2B4Qm1Rw9zLCl2f06Q4ugqp24aUkhtLN2lF
      cWUlylReIn6DydLzQFHG5QQVh7bHaHYQ3/fpRDpYUBfbLYvFlsVxK696KeIEvk8chGVdf1+b
      yhhOPKpBscpGPsuXvvAo3/zq7/PelR533rXIqZNrzIUJB3uP8NYLz7Pn8COkl44jtxxkS6cL
      KG5evcb2eY8bKxtsrHfZsWsrp06d4vDhw1y7dm1oLcwB6E3grvmoHdfoN6ZekH0Ax6YgAKjL
      jL7n6dPZtU2z9tyoyRpxuYKxcm2TWdBKnDeWKPeMrMoM2kB0RjwxbQnEIExDeESl3Ox7zmmL
      UjYSlVGO7d0g8AKd1mhO1XTGYKxbgR9QHnJPwG2cQeC36C1d5ubSMu9dW2LrwlaK9hYevXsr
      Kuuxb/8eupd6HN7X4Q9OZkx5KyxMaN3rxtoVzp9XBK1F/s4v/gp/9s3nOHrffi2rO/kBoPUA
      O4ThVibRan6dXVcpxfr6OpOTk7U2NgUBGKuJ8abqQ+YG94vyxHXDcXvllm5MYwoqM6Dt3RwF
      4/QBF+yqcoLhg+JGmfxsUckTpoK0ycDyqiw2e0zmqFHzt/1Ti4FaETcVMsyzgeeROtalcTH7
      t4aITz59P++cPM2Xf+EXOHH+OvcfuptACqJI8vZ7Z7j/0QNMtQPu372bnYfvY8tkCHgcvf8w
      7126ydHD23nhlVf4zGefYUsn4Pjx47RaLRYXF2s9hWFIv9//SGIQUIVW25lyoXu+G5tIB1BK
      0e12SZKkOrWlqlsDtKMWCijK43wKOXxioTHT+eiowyaznFtN4VaEoM/3lcRWWLKBJk+m6S/J
      dGKIkbOzPK8S0MEcRaQL5BrdxUSVgs5PiKKoNlZzCn1lty9LmYR+oO33cnCGmql+d7uEbn9T
      02mQHxVcMdFAk+lYSkmaZUxNTtbeHQWjGJg5PdIew6bYAUAPtt1uVzJhHERVaXHEICm8UIpW
      1KKXDKcainI3MEhgYuarSWcgs4+LQbEh9IPK8DOKcIQQlSxuOLudYSaVqQytfRiVdaaU231P
      I6oxA7vzYvrOrFLuoDm/EEEVDGiDR3nkk1SNNYTGgW19gtIRtr5OmqbMz88PW6Wso0+BsXPb
      VBzLhGxkWTZkTWqCUTqc7ak387Vp/ABgQljbAxuuZaYzyyswZr7BJNmI6ZmIIFUPURBCkGQ6
      26pJGTYw5G+gPqkuFzbXTW6v4ZxREBJ6PurUafJ/82/h3/we8clThMIjDkLaUUw7iqudxbZK
      ueKPGYPNlc1hdiYM2/2OsDSDjjtPYBRIp71er8eJEyfodrvkec4bb7xBt9sF9E7V7+tapefP
      n+fChQtVG+vr61U7vV5vqPiYre8YXcAlHHtO3LB2+z4MqtiZ+QqDcPPsAAZsT2jRwC2AKiJR
      KTUk+0pMeEBGK6wfoRmHurqy3V7FyW4ukXz1j1G9HtHn/w7+gQOAQ1yeV1VYtsG1DJnfi1df
      o/cv/iWUyl/24ovEf+/XUE8/VQuqw/nd9aSCRqgwCPVhfGUJQJ2PMEykoEUuvyGw7XbAZQK+
      79Pv95mamiIIApaWlrh48SL79+/n8uXLdLtdpqamWFpaIs9z5ubmOHnyJFu2bOH8+fNMTk7S
      6/WYnJxk586dVXiDK2Y1ma/tMVUnXTaIsqBxx1SNNni0qXYA0JNgqNpYMYx8rJXAAcKHQUjg
      Naf/ucW0zI5gy/Jra2usrq3pUun/4l+SvfQS+dtv0/u/fpfs5k3SLCPP9TFF9rllCm2GNYF7
      TZxLSEny9W9UyA+AlKTffhYvSYd2EBNBWmvDQv40z+glfdLSj2D7RuzdoyoLL/PK/m/6cInk
      dkAI7c1+7LHHOHXqFEtLSywsLLB/v7bsbGxsALC6usqWLVvYtWsXURSxurpaxeTMz8/T6/Xo
      9XpDOoENYRhW6++CCY2+nbEaXwBsQgKwkyTsKmlAWS8zqLZP0FlQNqEopWoxc3b9TxiIUMZs
      uLKyqos1lVs3gFpfRy2vsLq6ytLycqmQa0JISi9zUYyue1M+gFpdGfo+1e1CmtSQFhgSC8z1
      atsvP6ooz76qMr4KiShDxAOhQyDaWU5Yij+5LMiyvBqn6WscIppnDKyvr3PmzJmK0OM45uzZ
      s/T7fZIkqXSGVqvFhQsXKIqCiYkJOp0OO3bsoCgKtm/fztWrV2tZbO5/w7WNJ992GNZMnvZ8
      OmuglA61NibXTScC2cWshBBEfoC0qi2b4zyxOJovPHJMyLJRdodDCKB+rdVuEcUREkX0iSdI
      v/s93d7+/YS7djFXnhijUxwlYRTgedqpZFtKmhQ+FQT4e/aSv/VW7bq/bRtiYqKq1DZKfKqY
      QFnBodqBVF18S5KUiYkJVlZXiYKQYH2d5H/6n4l/7jOs3H8/rVaszctCsLhly0e2twMVIhtD
      xfT0NGtra0xMTHDXXXdVBas8z6sKXj300EOsr6/TbrfxyyNpH3744Vp0qvlmezwmTwCoiW+2
      QQEUhRw+L83+pjAMSdLNdkpkCSZpxMh6HvWJ8kU9jEF4HuQWYvj6EIq8zD2Vqp6CaEQqHWla
      UGSS1pe/RPueA6heH+4/Ql5WeVZK5xdLZHWqvB/4NfnbJgabI0W/+mXktWvIK1f0uObniP/B
      30f5fmPh2CRPCf2w2sGSLNVIXQa4+cKrLGPmO8IoJMszwjCg3W7jSUlw5D68vXvodDTyRVFE
      kiS35SU3v7uGAmOcMDA9PQ3okA/7m6enp6v3TeVoIQQzMzND7Y4by6i/q4CR8vVelpS5yvVv
      M87HTeMHsMHIlqZcYpOiaJ4zE5qV/gGbUIq8wPM9JlrD1Y5hYCZ129Yih6iJUq7JVaFIk1Sb
      aGVBK6qbDvtZikIRZwWcOQuygH378MuwYiGGY5H6WaJt+2UOca6K6tw0gzSmAMAoEIjqjDHj
      jTactMnqZY8ZBr4N93ubTMdCCNIsq6JRsz/7c/J33iX+0q8gDt7jpm80peFvDQAAIABJREFU
      +headmnjA2kan3nOiFFZmfbaFNqu1CbKCLNBCEGn09FWnlKrdxfELK4xdYZ+MBRr7wc+Mi94
      58Rp9swFHF/y2e5l7LznbgJvUCT2xo2rbNmytda/DSrr8sZ7N9kzF9HtJbz88ovcefRxjuzf
      UTPP2tDxdc4vLRD3H9HtOPnFLnT8DgC9fq+MCg2romEtP2AjyfCKHn5nHtlbZ9qqBAeDSnHl
      R+A5KmCWdNkoArw0IQwkr755nCNHjzIZBTViNDvvqFIl9nMXL11i6+Ii4cYGybefhTQlffZZ
      ulu3opSkFcdMTExU7+hQ7mELkCsK2dfNu6akjL9+Ee/FfwYovEf/M4rJnUNEZGBTEgDoLWxi
      YqKSB12OmedFVV7D3LejHStOEfhsXDzD8eU2N3qKlbzLCy//mGhhL921sxy46xFe+fHXeOJT
      z/D2q28wt+cebn74DnceOsKpN06zbfdePvuZI5x64zKzR6a5fPkG3TRk55ZZTr//Prt27eS7
      33+eR/bvJty9n9m45LYIeqtXKToLTIbVxj30na+8cZKjR/bw/ukbnH73ZYJtu/nEQ4cQJreh
      VHjTIuGFH7yC6p9jyz3HuHz6EoFY5s6HHuf0u29x4M4DPPvsn/LzT3+eEyff5sEnPsHJN95l
      cXGRc+fOcOTop5hU13j97DQTySVu3jzPjvuPIBxluIkjm/k1P+2dZOeOHaRpijc1RXjkPvIT
      JwmPHqUVR3j+IHzFvGuIUot8WXVoid2/cVga2NjYoJ+kIGByYoKp5/9HxKWXNZ5kfeTn/xeW
      llcIAr/yJlc48dFR7+MDnueRK53XaZRbI+uZOpn2Qvmep6uqWTKpEILFO7bznRff475Fnw0Z
      c3qp4Ogdil07t3P2zEXuP3qMu3dM8ec/DNnqZWw9+BAH925jqrOb7s2zCD8k9rp0U8H83n3c
      88Cd/PC73+XovgXeePkSF5dXeeXMBcTx17mwJNmxewqZdpjsf8CViYN0Vs6yLCeYaye0prdx
      5dSHCD/gV//jX+e918/y0H13cOnMVc6fW+apBx4hDiMt/gVB5eyCACEKWrN3cvnl46TtnNWg
      hXz9LdbSJRJaPHz0YS5ePYs30eHkSy9xI97J5NUeT3/2M5x89TTTeycJhHbmPf3Fn+M7f/Y1
      wrjFob3bRyJ8Tf5uuB8GQXU+WPBbvwlZDnGEP8LCZLcRB8P5A0rVxVLQinEh5aCkYt4b3Mx7
      9JMEz9Oldey0VNiEZlAblFJ02m0KpXNI7chJGI7wNOVN7PsAe+7az9OfPsbdR+/noac+xTPH
      7mJuYSuZCNlz9y72LG7jzfOSxw7fwcK2nTxw9510ZubZsXuOfQcPIIIJ7trf5vzllG1z8MMX
      fsTDTzzBznsP841vvMandu3g8sV1Tl26xvxUxJ07d3L5zHl23nWAYw8d5sSVFaY7Acxs5+lP
      HmPX3gc4vH8HhYJOnJP21un5Pn/3H36ZN1/4PpRinal6Zz75wM4pWlt3EG6Bo49/AlXk7Ni3
      m3Znkv7yGms3b+CFW1hZS9h99z4eOHQPc3dsIY5iZuZnmVrYwbX3nuNid5Xz771DFsBUFNXm
      ygbbLyGEOYK2zFxr+O8FAV67VZWnFygk9edtT3CTMtw0jiiKmJ2ZoRXHtFst1GO/jZq7EzV7
      J/Kx30Z4uhhBGIb087TMuSjjyDajEuyCUjpQznZwuFzegKnBaYOdT6DfkZU/YZSp1IZxFouT
      x09x4O5dnPjwKnHR5fiFJe7ZNcN7l9Z56uGDfO/H77BrW5ur64r7Duxl25ZZrl5dJyRneusC
      SxfP8MMfHeeZLzzFKz/5NvPbD/HA4QNsbGygvEF8EwqmOvUzz/Q4BU05BralZPidwVtCDIrX
      CiGqej2uwiwEPP+Nr3M5SXnyyWc4ffIkxx6+n3fefJeFbVv5yfdf5cnPfZq81yeXGUs317hr
      m885scjM9QuEdx3iwolX6V09z5WNkKc+9wXmJprLn9d0GQZrXNuB0HFOudIpopE/OBBcofO9
      PbFJiuPeDmxsbJDlOb1+r0pMUUqXQoycrKw0y6qjiKBZsfIUtFvt6n6TAuW+b/qspftZliRP
      aKXaHMNqguPGiRbDiFZahPp98ERzEr0azpOIwwivVOqTLNWVLKyjVk0fbikYQwC2E6qxTLpS
      PPvsS3zu80/w9T/8N6wVEkmbrfvuIb2+QpYKDu+f4HvvXuYTB7fwtede4ItPfYJ8yx6mr5wl
      PHAv546/zGw74pVX3+GZL/8GC52gkdnoBCGFEuK2Y5nSJCWKnSzAzVYVYhyEYchGt4tCI70J
      lPM9j9X1Ndpxi0JK8iwnjkOmrr9OEU2z1t5NmmX6JBmDuGVpvSRNdFlD3x+7A9gcyoYsy1CC
      yp+gPdcm+bwsm1geaerGrjTJ3C5RRL72h2gi02cSqDIR0kULcxggSlW5CBv9HnEY1g6asOsP
      VadgKkWW5rVT55sQcybOSNKUyR0HefTQ3SRr15DtO9iIr5KvJ8wszvHL2+/m9LkP+KXPfp6p
      tkfejplaaHNpdQOVhyzuOsgv3bGVdy+us3D37FAfSik2lq7xJ3/6fXYf2s/exS1koU+2sUpr
      co7L71/lrvvvZuPaWYrp7cyHgpsbfa5ePMkTjz/JS8+9wAMP3sVrJ47z3Le/9bOzA0gpWSkL
      NNkIWUjJ8sqyPmUl0w6ibbNt/K/+I9h6hOzJf8LyymrpgdQxN5MzU9WOIfOCOIqHDnoGXa4w
      K8ue63t1caqymZfPBr5PP0uJ/LByoplxjhKj3OsmNLjf7xNFUVn+JKwIy3WEmd3AVL6z2zWM
      oil7ypxBYB8FK9BnD5troV8PPXFzH/4qYNbRJXohBOdPH2dVznDv3oh/9nvfZs/sDDM7trIo
      Y24sdzn2zDG+/kff5Mt/99P8wZ/+BdDhzj0dHn/skzz/7HM8dPQe3r5wnYWw+NnZATzPY3Jy
      kvX19dr1MAjYurBYM9MppZBf/D9RYYdcFkxOl6ax0sRmymaALlmYZqlG4KCeKC6Vqry9Sg3b
      8KWUVQw7SlGoggBd/zOTw4c9Nzmimnadoii0abGM75FFoc8oLp1zntI+DKMDyELpcvCBGios
      ljWUJwHQpxMIsqw8fK/8J6uajeX3yUGiva0ruGJbk4NtlG7V5E+wYef+/bzxZ99mdW0Hd26d
      ZWJukZ0LC0yIgMXFNj/48Qs8+NC9eCjyjYzFuxbZtnUK8IgnU/782e9y9PEnee31V392dgDQ
      HNfEof91gZn81fU1fb5WazBXaZ5pmdlayHbUquRSOyPMXlzjtElLa0Q7imvZXnbfLjLYO8Co
      NMF+luKJQbaZlFJzdE9XwsuKvKqJGpUi3igwSq+BurGgLvqNImTXmGDOLbDBfsY+GMNtc5R1
      6C8LPzM7AEC+cZUX313jzFvf45d+9cucfOU0ew7sZGZmhrXVVeJAcPbKNfbv3kO312dqcqLi
      0L1ej+mZGd547R32HjjAhVMfsHL9POfXunzpS78EnhYHkjSp5RXfzkK44kVRFPTz0oONPul+
      VDsfxeJkW3Cqv42+IQYiYZZnCOERlIGFTWVbQIttSZbqosRlu25ot64mMT6ArhInS8R2iXpo
      /LfQfewIU6kk/bQMKwmiKi/a83TedV4q8KJsXycrUZ05/TNFAMHEFlbO/ZB5f50fP/sDTl5b
      48TZV5loz/L+zR6/8Mhhfvz623zw9ptcXVll67atXLneZyHyyZIexz77OZYv3mT7HsnK9TXy
      PKMTdQgEpEKAEGRFQVH0ieNosPhlXA4MwqkNuNywkEVVQa4SQ4qCdlkixbzjvmv/3iRO1ObB
      0+f+dtN+7T2pJLkclJcJrPgYFxGFEFUF6V6/VynW5lhV+3npiDBSStrt9kgnWegP61Oj/lZK
      1apYG0KqhcAorZ9IUxoGgVCiekZaEaZC6YrhRmz8mSIA8Fk5/wH7n/wS3/zd/4dDTx5CenPs
      3LWX9dXXuLlcsHPHNq5cuszE7DydqUmeefhpLrz2Nvt3T5Iqydb5iAsfnuF6f5Wj9x/gzKs/
      4vxaznwpBXiewBc+eaaVWl0Qy9fFpyqEHiihNhKkeU4u8+GAB2GJRnJQZcL+WT16GzuO7/t4
      SpFLnahjYpp8z9cWKWTNfGjGmsuiImgjppkze4UQFcEHVvBcE5Ha4SkmH3gUuDqQ+632MVXm
      vjk/eNR8VAp0g5nZ7lNK+bOnA1z48EMm5ua5eeMaC7PTvPr2ce7ev5/TH5zhvnvv4/z7p5lb
      3MqHFy5y9537aLcmSHs9otBHBQGRp3jz1TfZtvcAsneF672CI/fcw1p3vbKtGxOkkrI6r8BU
      WcvznCRNK9NmgUGO/7+9L3uO6zrz+5279t4AAYIgQBEUIVokJVGbrc1a44wVxZlMTZzHeUhS
      yfwPKT8kL6lM5SFvKVdqJpWaSlKpmhnPyLFH1tiyZFurJWqhRC0kRZEESRAEAQJo9HL3k4dz
      v9Pnnr7dIEUSoMj+VaEAdN977r3d3znnW37f9wEAS2nXwjmjZmTZhpXradKhBqR0RiTFIGgS
      dZTcZMZEwz0vzVJzTDvj1iTvEb0uJ7Pi99d3IVVtysRZtIoV+iSh4/WyL4PUQNUGCEMRzKT6
      pnRMGEfCrWwYCGPRUZMqgKvXzuxMt9IEoPabgHjI9Vazb8WDrlrQTa2M0gbRAHqMtGanlQku
      lZyC6KQSRYDBZD4BJZdIIWKAH4roo2PZsqIbYwx+GMjdQm3Q0e9e1fdID84zlOl4PwoQxwkM
      g3Ke+08AymVW1RtazfMm2iBDlAznPKHOCOHFi4iPHQer12HecxDYoNoDnafukpyL/mqikbiI
      hdhpF0zqzEnfRV6jjFtKBSI+CYGDo91q9xRipQ8uTmKpDwNCdUlSfg1DN+OIcw7bsjO1NekD
      tSxL0i/ENakcSZfSW3DEl6EbixSOj3ksO1VeqVF9JccYaSZcIpKkZAFfxlhPpCwvOb6fkOeV
      h1SRcOF14uAoWI5UYZrNForFgmiB+vkXaP/5XwBpTod1/yEU/92/RaLsNKrQquBc1DnlLGdx
      4KKUjGubGTqLXrGPcEtNAB3FQhGmYXbLbygfrpp7qhpbXUZpVkdWuzeqRQZjniBh3RXZNLut
      hwiqSxLIqgscIn0y4gBjHO4A4aJ7JNcqVYCmVZuDI4lFjwGbMsWo7GISi8Z96TMmSYIQ3Taq
      qlqQZ2Srq34/I1w1nkXb4O5C43k+TNPA0vIyyuUy7Jf/QQo/AERHPkZ06hQu1+up7ZBgZLQO
      h3VzwOlzsywLQRjCtR2Z/ENl3YWhH8PWknP03ZHeu6UnAGMMjuOgVCphZW0VSZpw4vZpbOFY
      djoBurWDVANN/0CJWCfVKc+D7diIkwgO61+C0TAMBGkesTDW0mJdPIEZG7KZtn6PeZPCS5tf
      26YtEvNlb+C0wBYTqiEJumPZojUruuUR82r152V35X2+6uehTgzXylatK7gumq0WxtKO9r7X
      gQ7mi8JarVZLpGraNoBuppnaI40afgNmmvwkFhpaxNTvi85Fauir3TO/0XToKwFjoqhSqVhK
      3YNJbpshxlgqSFaPm08FfdGyKh0UDw7jiIL+1Yw55wijKPX7G+lq3HuM+pvgBaLnsNp4w0g9
      MtQRhqf2DKlW6UAIokCulFTF2k45SHkrP2NMUpMJejWKq4lPAGLS12s1OI4jhPvRRzM2lTE+
      DnN2L0zDQK1aRblUAlU3ZYrQ69chdcsL/bS4cJKrztHuoI4H3OI7AMGyrLTbiOgOHyWCwyM6
      yceyGG2eS05fddUvg/MuYYyOcx1RZaHfJIh5ItiVfYrTquUZVYOTKG66Z8W1HVEBOhErP6l1
      qpclCqJMHVCV8Ea/1SCVfn2gq/dHaUGtPPVM/VtXOcg7Ra/bzz4DuC6iIx+DjdThfv8PwJXI
      dl4MQX32MI4Q+elqjzQOALFDxDwRFQDVCcaY2CU0l+ptMQEA4QnwGINtmYiCSBanpQ/VNEw4
      liV94INA3pLESBDH6cpqiC6WhiEYmQlP5CqcNcLE9SzTAjMEIY2qSZArD+gNFqmrYY8eS+pA
      jlAahoE4CMHffwPto0dh7dkD9txziExDZlDRit/PqM24IQdEfXV1UTdg9f+dp56E+/RT8hob
      IYxEMS9SdQyDARzwPV+WygmCENu2jcK4fBnJ4iK82btgWiYajXXYloVypSwJgHEc3/oqEKH7
      hbGMu1GqLzyBFwbohL5MqKcvJa/IFeciklp0CijablqAS2y9xUIRvh/0CALnaZ8zDoRxiMtL
      K4LMFsUomBbK0TpMZsD3A/hBgI7nyevmVZ/ueUZkjVUS2upnn8H7679B/Nnn8F/6BZKXXoLq
      +h6k2uj/kydLtxv0HSBJEhz/+Aj+9v/9DE0vztwTQ4SL51d7dtbWhWM41whx6dQpdDjDmTMn
      ceyD3+HFF/8e617qLjZMkINCUjOoIFfBhW0Lr1zy1SkEb70NxxFdeJIkhmVbCIJA2gRhFN0+
      O4BlWahUKpILY0VhGjeIZA8B27QQRGFa3U2sniYzAXAQK1hvUmewbglCFYbBZOaSKhymYaDo
      uOh4HpIkweXLl1Gr1WBe/BDmm38G4/kfI0EBjXYbnudjfGIMVp92Raqwx0mCKC0BwtLrdDoe
      KuUyos8/F5G3FNEXX8CNY3DFUFQnAGMso67oalEe1HwGoW56+OrMZfzxP/9DfPTWa/h8bgG7
      75jCqdPz2LZtO774ZA7PPn0Qvz8+jyfvuxPvf/QlfvDdPWi5Cfz5eVi79+Li4gK8xUWMT86g
      7Fpg4DBsB2BAbFlyx3MVblapWBReqCceh/P4Y4BhYNu2bVl+FIRGcMtxgQaBMaawJ7s8Fd/3
      0W63M/5xUfOfI4ljRIgzXzz1ztL1WwK95tgOOl6np7sJXadcLokVy7REfmrxQfDn/yvs2nbY
      jJGmhDAOpdFtpQEe2lWoGYZj2fDTOkN0D5yb6HgegjBE7c47EX10RN6juWcP1ppNRHGMbWk/
      Lt3mMLSV/mriE4wxOG4BYaeFKIrwyalz2L59AhEYnnv+n+DMkVP4zr3bUDZt/PAHz+P113+J
      tfY6wjRTzjTbWF7vYHW5gUef/D7mjr6N979cwT0TCX73zod47OmnMVrKMmEpYn3x4nlMTu7K
      3pd2j/OXlrFzfARra22YP/rRj/7jRvXWbxWsrTfg+z6a7RbanTb8IIBpWXBTIhqxBqnxtWWY
      cGxHRm85hO5ONOgk9XH7qQeGstA4FxHUQqHQk+zdbfLcdXeahgFmWEBxVL5Hx9mmBduy0xXL
      7K60TESSRY3/BJZpwjEtmgLgDKiWK7AtC+7eO4WAdzqwDh2C+8N/AW6LOIH+3WdaP3GRXWeY
      3Qms/uhQJ1CScOycrOG119/Gk088hrMXl3D/fYcwWq2iNlJDxzuL8s47sGO8DtfzwKo1HLx7
      P6rlErbv2o1Pfvtz7D74MNYuncWZto2nHtyHV198GXc9/G2Ukw5+8dLP4KGE9rqP9vIiXvr5
      /0XHGMHh13+Bs0urQGcJL7/6CUqugTff/RDnTp3AkcOf4q579uOVv3sL++/bhQ/fOXlrUSE2
      Auccnu8jjALYliOEKhVCWrmpSjGpFQlPpN+YDGcGweBUA2IGE7kAjLFMnfu4dQG/PdLG8Q9+
      ij/50z/Fu7/5FE4pwuNPPIrD7xzGnju2442PPsdzTzyK4yfP4sEHDmL50hJs28HJEyfxyHef
      wBuvvYP7Hvk2jh/+BBfnv0JUKeGFHzwPHolKcVQAWASdsr3UCKrAJpz3uAPVz0j9OwiCDBdo
      o8+XDG/63U9tUsei/sFU8lJ+pso4nHOEQQe//vnP4ZXKuP+hZ7HwxS8Bvh9lcwVJmeHAocfw
      yUdvw2Acxw4fx7ZxB61oHI++8BTm3j2GsUIHU098F7/7yWt44V8+jjdfO377qECA+NCLhQKK
      KOS+B4gSG2AMvueBJ6IVEyzISRClFQYKjtgJyPdOapEOuzqFxH8Zh/bN4pW//AcsFn3s2l7E
      3/zVT7BmuNi7dzd27ZrCG6/9El4CnLtwBoXyNIqtNdyxazvmL62C+TGQcCAB9t8zg99/dBxJ
      Qu6/BIvLl+HELfDqFNBcwfbJHZl78H0Prtt9ZlO7z8hr4GLbght2UHA5Xv3tO3jsue9hrJx2
      U1cIdhsa4ooaREzQfhNA9WZJwWdAHKVN/QxR/Q4QO9LpYx/DMxkO7tmD99/4GWbuuh8rxz/F
      kjGKAwe34ffvf4o7to/DNAyU7k9w4kIL+/bvw85aEe3pbaiaIWwG3H/vKH7yf36GfY8+cnvt
      ABuBavATjaHdbmO91QSHaCMUpV8oNaNQKcXq9k+0iE4gelK99D//Agf/8E/w4l/+OZ586hGc
      nL+Ihw4ewOH338Pddz2AL7/6BE55BGEcYt+d05jecwjnPv4MM1NlhCMTYMvn8Ob7x8Eq2zAz
      FmDu5Ck8/sf/GlUrgGOZ+N0rb8LiKyjunMXS2SXwYAnT9zyMMye/wP7ZA3j11Z/i2ae+jy9P
      fIa7H3oExz78GFNTUzh/4Rz2H3wUM2MdvPaBi3HzEtYa5zH9wMOYnZ6AY5t9mZ2qgax+Buox
      hH6TRt9hdYYoNT8k5PVZuFbc1hNA710FQKYa0mudTkcayV7og6X0WvqSKbVQqiCUlGFZ6AQe
      Co6b9eCkaoppGojjRJYGJ73ZNPM90zIABSCBaAbY9j04lo23Xn0LcAvonDuPpAQscRe7amX4
      wWVM3vEgeLCAOPJxsRFilEVYq+zBdBDg4JMHcfStI7j3vh14/f0YJX4JDz/7AN579RUUp/fh
      oYN3ZVIi89SZvAmgv5cXX+BclD7kPJFVKvTj1K6YeoCSPhOd0yXPTT9TfRLROd/YDjHXE3kF
      WFXhB4BisSgLQbG0rAkdCwAxT5vfpcxQwzBkGyYACELh048iwTQlHZ0CaBRjIBZqHMdSJ46i
      CFEUyV4ISZLAD0MEoYgR0MQ6dGAnRiansG3PCL799HOo2hwT01MwnBIcgyNqtWA42xF4Pnbu
      ncW9e3dj+65xmIaF7VOTcOtTCC9/iJUowMJXn2E58DE1NtZ31afXdBeq+jnmva6+z5jgZJHw
      6wa2WFTMXC9aXkxG/5+OJTU1jCIZ31ELo93WO4AOqiznOE7PrtBut4HU5y9ZltqqRkK6vr4u
      Kk9zLr099H7eakiTRV/JOBflSRxL4ycxoNlqoVwsiX4ECvN0UHVpAN2S72yjI7v5FaQC9WsE
      rv4vr9Nn1dcnUe495kyoPC5/XsvWKBGLB9lkQdpTgc5ZT5tyhGGIYrF4exnBGyGvOoKkClgm
      OBgMcPCEyw8/SRLZ4RAQcYXR0VEU3EIugSzvS+9nKIouMUjJe6GsOWSmbto4SeBHARzi9kB4
      o9RCV+SqpeMpC80yTbhWNtFFFUx9ItJ9qser56m/+z0nja2P0c8bpe4yqhGu3qfaMiuIQtmH
      ge7F4pakj9NxK6urcGwbnvcN7RBzI5E3CRzHwZm5OQRppThACIPjOLAsC67rolarwXVdnD59
      GrZtwzRNWJYlJ0mcxEjiJC2QZeUKghqF9aMQjmUh4RwF24GfUq8pJgF03ZxqfED3rhgA4vRv
      0RxbUIxFkS4/rY5g9r0fFeox+uqvTuJ+xrGOfhNGF3zGspW/88YB0JNSmqTxEjqXc46Rel1G
      6OP4FssJvlEgf7ia+UWvqzAMA0EQYHl5GZ7noVQqoVqrwUqNyDiJEYVhJi1SHUvqpxwIE5Hf
      ajJR0t22bECJ0pKxrk4o3YcP9M/qArp5wAWFx9RzP1HUNwE9zxukxgL6fU76GIPucZA3STWC
      88bUfxMNPg4jFArCLTzcAa4Qtm0jCALp5VFVG/qfGsBNTk6Cc1GxenlpCWEUolKpolavp3QM
      sTLT7qCqGCbnMEwDPBL1gizHhWOk2zxjaZWHrnDbVraBtDqx9A4u9L58JtNKDetABtT0iaM/
      Y54OP8jboyPPbhqkNumqmHpPeROLhFzN6VbP09vNDneAq4Dv+7L0Yt5qSCA3G61McRKj0Whg
      ba0BwzBQq9dRr1Xltpz1BImx4iSWCftxksjCup3AF0Z1Itp96gY7nU9fOBUJACDtFkKSJGkp
      FDMTNVZBerY+EfRVn1S3Qat5HvRVOu99/X7otYQnCIMw47kL4yhNl7RzS6KoUXrjdiLDXQ+Q
      wFHBJRWqUJCHQqzaQhetVKsYGRlBEotivXNn5uA4DkZHR2URqSgWCd1hFCmpe8KoJbXCMFi3
      SFUqtMvLy1hfX8+9ZzpvenoapVIJQRBkdgYjimTVhH46/iBjVX9+FYZ3GWz+PYDH4JMPIynv
      6DlPnTgbGc89nqhEFCSz4rhr6KaJMH4Yyg6aBLWzaBhHMMGHO8DVgHOOZrMpOeV5sG0b5XIZ
      nueh0+mIsu2dNhhjKDhuZmfwfR8rKyvwfV/01x0ZkQQ5Egp9ZY6TOLU1QhRSduv58+cxPT2d
      uU+gKzS+72NpaQm7dgmWJHVoz+Pq6P+rY/bzEunvA4Bx+TiMX/97sPYl8X5hBPyZ/4B48uHc
      sXXoY4um2NnPg7xaFgy4riureji2Ay9tNu5YFpDmFXc6bVTKFSRctJwt2M5wB7gaMCa6U0ZR
      1POlkQBQMKxYLKJQEOS4QqGARqMhg1ykIjmOk7EXFhcWkPAkw9sBEzykjAoCjjjqrnqkltEK
      qatjhUIBhUIBp06dwh133CGNWjXRh55Pf548Q1c/Vv/fAIdx+MdS+AGAeavAu/8N7J/9d3DD
      zj13kLEcpvm+riVUGz8KQMlNQRDAhSui5DxBnBYGkL2bU1WSStvEXCwuBhuqQFcNwzBQKpXQ
      arX6vg9kvS+2bWNkZARRFElaBXmUaDKUy2WUy+VMca9BiCKRIWWaJur1OgCh0/u+n1HF4jiG
      bdsYHx9HrVbDmTNnsHv3buk/p51AVXf01b5fBbe+enscACtf9d4KbaaTAAAT+0lEQVR08wKY
      3wAvjvUYtHStQZMAEKu+YRqiyw7j4JzBMLttkyzTkgUCXFvUbw3jSNpMHBws6cZKhhPgKkFC
      l/c6ABk51VdL8hB1Oh1JbSBVhwxTUo/0im8q6HXHcTK9siiKrXtm6J6onubu3btx+vRp7N27
      V+5WuntXHSOPBaqXTOmBYQGVHYC3kn29UAe3ywPLIqrqn3o/VNadKv2ZpgHORSdJmujUDN02
      RfzECELw1VUUJ3cgCEIEQdDlU8UxYs5vby7Q1wWt2HnwfT+3zg6B3Kh5AkSrv+/78H0fnufB
      930EQYAgCOB5nvybjiN9Xt018sYmTpFlWdi9ezdOnTqFxcVF6eVRkafqqF6qvEmmgjMT/MF/
      A24qVR4MC/yBfwVuFXJXelXd0v36ccqhUnO5XcvJlL30fB/gAEuEyujGCTp/9l/Q/k//GcHf
      /RS244jAFxN0Ftu2Ydv2cAf4OiCh6bdCDtrGHcfJ5bCoX34/A1PXlekc9Vw6P093p5XecRzM
      zs5iaWkJCwsLmJychGmamRhHP6j3qB6rCjVjDPHUYzB+8GMYp14Bkhh85hnE2++Vx/hRKAuU
      9Z1InMtVnXMu66eGsXBlCnKb2MFabZHhB86xvr6O0WYTyeKieO5PPwX/py8gTmIsLS8DAHZO
      TgIYqkDXBBIa3Suit/EkMMZQLpfRaDQGroD9fOl5xqJ0Z+bwifLqYZIBb5omxsfHcfLkSanW
      0bP0u2be9fVaQir4tn1Ixr7VPV8Zj/z0VwLbNEVfhiRGnBLdoOTjcc6xc8cOuUsxxmBMTIA/
      8h1EJ0/CfeEFMMeBWyhgJLWX5GQdukG/PjjnWFtbywgO5xyVSqVv+yLVlaojzyikc9T/CeTF
      oZyCfimIPYKZnmPbNlqtFlZWVjA9PS0p2yqkQKXGuipkADD31Rc4dvYy/uCZJzLXCXwftuv2
      ME7n5+cwNbULK0trqJZNtBMDH775GibufAjf2juZeV71M4kTqnKdPjsXPQ4sw8zQNfIi1TJw
      lvQ2AxzuANeIvNXa9/3cCC0dT7QKfXXt55LMDQJB7EBk2Ol68yCPCmPdki2lUgnz8/PyOfK8
      PBRppfGk4R02ceTwWXz/j57BkTdfQasyjfbCMVxqV+Cfn8OhZx+Hf3kRvjWCePk0xg98B/7K
      HKampvDlp8dw4K4RfHDsNPziBKYn67nPTv9LSrkhOsFwGLLXQqYiOOdIogCxYcMxshOhR+XE
      UAW6JpA3ptPpZFSXMAzheZ6MA+iwbVtWMgN6E3N0DIrE5gkucAWeGkA2wKbzSZDUxHTqDdBo
      NLC4uCh3Atu2USnEMMt1uK6Dw6fOYsc2jtrEDPaaCcK76zh0zz68+Ffn8Y+/tx2/fuskGsfO
      YnpCjBtFAQLPw/hdD8K6/BV+8au38cM/+keyuFeeKsg5B2If//t//AQ7D87ikXtm8OGxc3j4
      3gMolkpYuXAOr7zxGzxy9wwOL8Z48uGHsT5/AnZ9BqNlhoXFNYSNS6hMzWB2ZwV/+/KJ4QS4
      VriuiyiKenz3nU4HYRiiUqn0GLamaaJYLGYCWIOEdVCgiIRFfX9DLw3vdpKxLAuTk5MyPkAT
      Io5jUfkawOrKClqtlowfACJJyDRN1Iuf4qVf/RYH9szCKI1ifFsdZpXDRQtvvncEDzywH4xz
      xG2O7d8aw+SYAcBCYq7i1Q8W8fgT2/DO3CVM7dvfLV4FnqkErT6XXajgnoPTOLl4CW+0Wzi4
      s4JXXn0PTz/9HZw+cR67pqcxVi9jpjiNM5//Bh+8O4fqxDEk7QhPfu8xLHaKaB8/idmp+8H8
      IR36uoBzQZfudDoZHZpW1UqlglarhVqtlhFm3X64WhDfKK8V65WCYgGtVgsLCwsZIQ/TKtbn
      5uawZ8+ennMp6qzmVm8UyBqEPPexqh4yxmAbHL/81d+jsdyCPVLB+soqdk/vxcWL86iUZtBu
      fY59e2ZR2PdtNL56D5+9+TmmHnoQZVbAgQPbcW6Bw1+bx4OPP4AX/9dfDyeAjq8jROq5zWYz
      06YpSZK0cYYpDWR6r9VqychtP69QnnpDx4Zh2OPDV8/v9zy665JUsiiKsLCwgDAKMbFjEq7r
      wut0sHjxImZnZxGGYWbCkiuYJs/s7KwMyOU9h/5ZDYL0ismq2KKAgJVSuAFBCIzSomCkzvUY
      ukki0j9zvk/OhztADygYRQkTV4skSdBsNnv4QrVaTY5LiTPNZlPGEnRhH2QUk9oThmEmajwo
      eqyOoeYg0/uWUiTM931cuHABHKLf1+zevTBNU8Yv1GvQDtJut1EqlYD0nI3UujxPDx1PO0qS
      9k8wmCiHXq/VZKrptUJOlOEEyIK29Dw//pWCEuPVldAwDNEayO420yOhabVaV6w6qBMjCAIU
      Ct3cY3o/b7VVI6z9dgVSp8hmITYrVWyj59HHp2daWFjAzp07e/IO8qAauvrzqcckXLR73VYf
      7etZuxYMjWANqk79dUHC3mw2pUeFdobR0VE5weppP6wkSUTVCeUe+gkIvQ9kDeA8FUe/J/18
      Olb9n8hxcRzLEuq6WqNegwxmy7JkcQDLsjK7QD9B19U0zkU2HHj3fm3HgZt2lbkRGHKBrhNU
      YQQgfezqlxzHsVzt1YK5hUIhk9WkuwDpb12ISFDV9/Ux6PyN7p1AAk2qYBiGGZJdHmiST09P
      48KFCwAgbZ4rgbx3gyGJE1i2hXK5jFqthlKxeMOEHxhOgGsGCb6nNLPQ3wO6lAHf9zN+dqBL
      kSgWi7nBMd3NGYahXGH10is0Xh6nqB/0iUPGNY2vHqfeh3qfdA6R9ChWkPcceaBeXzCY3IWv
      t7qTh+EEuEYM8rUTM5Ta8ZBA9aNBuK7bU4m5nz5vmqY8nl7vd2+DhE8fX4026xOjn1qm0iNm
      ZmZw/vx5qRapNku/++Fc9GF2bQfVSgWVciX3Xm8EhhPgOoDUmCiKZPkUEn51lSb0MxAZY6hU
      KpndQFd9GGNypaX/gf7FtfTdYyOovBoaP29C6p4qxphUlaampjA/Pw/OuTRc1QnUI/ypoT02
      ug2O3b+97I3AcAJcJ5Da0el00Gg00G63pbCSi5HoypQZpk8EGsN1XemG7ecKdV3RjfJK7ovG
      7Yc8l6T+er/Jpds4nufJ5zxz5gyALvVDvR/1etQbYDNUHh3DCXAdYVkWqtWq5M/oObdAV5Bk
      vVH03xHy8gUGqTqD1LEr3QEsy8r19w8an0CqHaVglstlrK2t5Y6j74ybpfPrGE6A6wxKiO/3
      pRM45zK7K291JrUqz315pcatet6VeILUcfPuadAuQKmgtMNRQ2zP83KvT69ZltWXNLgZGE6A
      GwDDMFCv13takZIqogqEGivQQTVHaULlCannefDSjpOq6qJ7iPr95OXf5tkt/XYedVKSDUDH
      FotFeJ4HoOsW1T1LRGHYKgwnwA0ACXqhUMDIyIikGBBXRUe73e4JNBFM00ShUJCGqWrsUgtW
      13VlfkG/4JhhGNJmyHNn5t2//po+pvq/2kWGhJyo0+12O9OUQh1jK4UfGGaEbQrUaHCr1cqU
      QFS9LBQZ7jcGJcOTB4gSb4g3Q6pHnmATc5RWfDWnmX7TJCTh1akHekKO+jq1hQKyHiLOOZaX
      l7Fr1y45MSjzjMauVCo3hOZwJRjuAJsAapVKzbr1jicUeSV1od8YxWIR1WoVQLaVk+6N0SPD
      ahdG8sgEQSCrSnieJ4l1juPAdd1Mwg5BT7gntScIgly7h65F5DoiudmOA8Pqto9dWVvNdRhs
      BoZcoE0EGX21Wk2WPVFVIiK3DVoJacLQrq2qO7TC6jQEomTLcouKS1bX8znvtjcNwzBXndLt
      EVW1UW0A0u937dqFOI5x4sQJWJaFmZkZuMqKb9m2LPmoX+tGY6gCbSGCIECj0ch88aVSKeM3
      19FqtWQf4zxBob5ixBJljGXUE7qOijwhp/vLyzfQPVqyMWA68dSJoDNQAWB+fl66W2u1GirV
      Kux0d7wSj9X1xHAH2ELYti3rBBFU7kyeIGxUgpz86WEYSiNZzdbqR0sgO0DnENHr9HeeMUzs
      T9WXr3uk6B5M08Sdd94pz52fn8fcmTOZ1zYTwwmwhSCVyPd9KXjkT6d8XR20sutuTxoP6Haq
      IeEjw1hXUdT70H+Tvq6+TtfK+18XfBpDTbonqjXtKqZpYmpqCkA3+X6zMTSCbwKQkACQwbF+
      7kHbtmW0mY7Joy5Q9Wnyrug7AEEVWN2nrzaXU3/oGHUsnZ/EebfKhFr7lAxv8mqphbo2W/0B
      hhNgS6EHhejLz6NWq6CEm2q1imKxmEuZyLtWHvTVXH2NPDN0n8Rq1c+jY6MokpUu8q4fBIH0
      MKmGMr02dIN+A3EtrjtaafUxqPXqRmXSKdhWLpdzA1T65Oq3A6gqlao2UeyAc5HAT+5UymlQ
      V2zqu1sul3v6kVH+AsUe1PswDOOaM/CuBcMJsIVQy4kQVFXoSkBBLVVlIqHSJ5CuYqhCqL9H
      45K7lnhJpFoR5ZtsDfU8dUeioJeqitE1OedbRoIjDCfANeJavjzLsmQnmbz3qM/wRqCmHarL
      kTFRtW4QZXqQzk16OQXHVMEFhNFKgTW9hSxNCKJGq8+n7w79yrpsFoYTYAtBXiDGWE8AjASF
      glEbTQQKsKnj0PhEn9iI0KYijmO5wpPur3P61Z1DTX9Ur6/vLrq3aCvVH2DoBt1ykPADgv3Z
      brell6Tdbmf6ig2qVUQ+9mKxiCRJpPpjWZZkaRLdod/5JJRqH4GNotJ0DtkM5M4k4e8Xz1Cv
      u5UY7gA3AWiFpDKKVGCKVmDP866YK2MYRmYMUmXygmEqVAM4ry5SPwNajRarHiN1PKC3WK+6
      O2wlhhPgJgNjIjmeegfTKrpR66VBY6ivD8pHpmsN8smrec76jqKqQGpPXj26rccUthLDCXAT
      gtSiarWa8aiQK/JKx3BdN2NkkjqUB5XdOYijzxiTfCMqy0ivqwJN7290j1uN4QS4SUFeHNXH
      n1eGfRAMw0C1Ws0YoPS3Xk9IFcZ+KZoAJGWbdH01ik27iB7J7rfi3wy7wHAC3OSgWp2Eq82g
      oqgxCZrjODLSrNoEtPqrO0Ycxzh69CgMw8DRo0eRJAmKxaKM3FJZdYoPECmOiHjAtQUKNwND
      L9BNDtoJgiBApVL5WimE5M0hmoLqGqWSLUCWiQqIHafVauHy5cvwPA+rq6tYXl5GvV7H2tqa
      dLk2Gg00m00kSQLP83D33XdLLlEe+3SrV30Vwx3gG4BisYh6vf61o6bkp6fexpQv4DiONFZV
      SoPaA2BiYgInT57E2NgY1tbWZKokTZ4gCLC+vo59+/YhSRJMTEyg3W5L9qeqZqm0a4oCbzWG
      CTG3ETjnaLfbWFlZQbFYlAQ2zjmKxaKM6EZRJCcL8ZKKxSIsy8K5c+dQr9cz9AbXdTE3N4ex
      sTE0Gg2Z/0ueK7XwL00AxtjAbpqbheEEuM0QRREajUbGL885l806gK4XilZ5ojrTbkGqj5q/
      kKfq0G+1Yw4xQgGgWq3Kjjlbha3fg4bYVOilSeg3cX4A4ekhN6bKVqVEnSAIMjU/VajqFMUB
      SOApX5lSJ0lFGpLhhrhhyPPCqFlaBCK1AZDqjqrnkzeKahv5vo+1tbVMAr7O+dG9TKT+qAn5
      16Pd0bVguAPc4qDAlkpkKxQK0n1JrwHZ1Zt0d5XZScJPnCQSYvL7k8DneaooOkzXod+e5/Uk
      9WwmhhPgFodpmtK/r8YCyCAmUBCLDGN1cpANoObt0u5AYxJpj7rXx3EM27Zlsg3lE+jqDrlO
      ibu02RiqQLc4KAld5wTluSCJKkHsU9LT1XasOslNpTVTnrKa4kiqExH69FpDYRgOa4MOcWOh
      Z2kB3XwDWqEBSOO2VCpJ4Y/jWJZfJKhCm0dn8H0/03sYgDSEC4UCfN/PTMitqgoHDFWg2xJx
      HKPZbMqMLSK4qSoKRXHzVBaibgNZmjQV6CVjWc1MA7pEOvqbqNS+729JifQkSYYT4HYECaVK
      fcjzxmwkkKoqoybTU04B0aXJ80MTwHEctNtt2X8YgIwPbOYkSJJkqALdbqAK1WrrU1rRN9LF
      1X7Bui2g8/zJblA9TGqVCDqHJgBlwm22KjScALcZyBev6t2DhI5sAUquJ0PZ9334vp8RcNu2
      0el05A6g+v/ph1yoZGcAkHnHV5PvcD3AOR+qQLcbSP1RE2NIhVHLn6v8f9u2M5wdEmIKiOl8
      /06ng1KpJAUb6JZqIc8QpV3SJCDPU7PZRK1W27S4wHAHuA1RKBSk8OW5NFWd3nVd2TSPjiFB
      J5oDuT+pPxrp+zTRKKpMBbXIi6TGHuh+KC5wo0Ekv+EEuA1BTMy8uv56JWiiLeSNoYLGIiOX
      QFUqqKgveYr0HGdVldKLbd0IyIDfDb3KEF8Lm8GRoQoUqiDTCu15XsZXrxfY0hvo0T2rjfCA
      rpGr0q6pvAv1OSaDWE31VGuQ3ijIpP0bepUhvjY2wx1oWRbq9TpM00QYhrIZH/nkSYCJDEf3
      pXL61fuloJpKkKPkGuIkkd+fgmVU1lEPhlGG2fUG5Sl0Oh1x38N8gJsPm00RplW70+nIlZ+6
      0BC1QTWO/TCAbXYnBIESZ1TPD/UyI89RpVLpsTX0UuwE27Z7dqlrQRzH6HQ6mbqrQy/QTQZa
      oQZVgbveIGEtlUpwXRerq6uZXUBdmb3AR5SI1do2u2Q43RsUhmEmL9i27UwUWIVqd6iTIQxD
      NJtNmXugFwgYBJpYpHapO1Hm2dfW1vhWFygd4uYCrZRAbz+wIBIeIcYh3Znk9VHbtRIXiDw+
      9HeerFGsQV/9dZDXaaOAHXl42u229FIVCoXMcxH+P5nyCTTWxlwqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Region Shipping Costs Map' width='192'>
      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
      W99pgsNw5H0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Region Shipping Costs Map w/ Parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOy9d3BdV37n+Tk3vByQcyIIgABzFEVREpVzq1vqYLe7bbdnHMqz49lQO1s1
      49qq/WOr1ltTszX2jD1uux16uu0O7lYHSd2KFEVRFEmJQUwgiUjkjJfjvffsH4/v8QF4AMEE
      UiK+VSw+3Hjuved3zi9+jwgGg1LXdVaxinsRmq7rOJ3OO92OVazijkC50w1YxSruJFYFYBX3
      NFYFYBX3NFYFYBX3NFYFYBX3NFYFYBX3NFYFYBX3NFYFYBX3NFYFYBX3NFYFYBV3FaSUSClX
      7H7ait1pFatYBJZlYRgG6XQay7KwLAtN07DZbGiahhDitt17VQBWseLIjvBSSizLIhqNYprm
      nJHfMAxSqRQ2mw2Hw4GqqrelLasCsIplYb5acqOjsmVZpFIp0uk0uq6TTqdz155/TSkl6XQa
      RVFwOBy3ZSZYFYBVLEB2ZA4EQ+w/fJKmmjI8Xg9dPZdJGhb3bW6jqrICm812XZ3SMAxisRjp
      dBqAVCqFpmm5e0JGCBRFwbKs3O9EIoGu66iqesuFQMRiMbmaDr2KLKSUBAJB/uZHbyI0O0MR
      DWGmcYkYUbwgBKqVxKOlee7+VkpKimhd24yiLO1PSaVSCCGIx+M5nV8IkevQUso5v/O3CSHQ
      NA2Xy3XLhWBVAFYxB9PTM5w8c55fnpgCoUGBDpqDZSDSUf79Nx+hrrZmyetKKYnH45imSSqV
      QkqJzWbDMIzc/vx7WJaVE6p8wfB4PNjt9lv2vKtu0FUgpWRwaJhIJMKr7x7h1U9GQdFznR8W
      0fkVDcvm4ydvHeXywNCc62X/GYZBJBLBNE1M08zp9EKInP5vWdaCe8yfUbKzwrVmmuvFqg1w
      j0NKSSKR4CdvHcO0JIZpIjXXkseLeYLRG9A5dPw8DfW1SClJJpMkk0l0XcfhcJBKpTAMA6fT
      mRvxl7p+vuqTtQM0TUPXdTRNW9RovhGsCsA9DCklp85e4OSZTvqCV+rCDROWKBEv1OkUmWbX
      pvUkEgni8ficGQBA13VSqRSxWAy73Z47RghRUN8XQuRiANmYQPYaWQP6VsUHVgXgHkUoHObd
      Q8f54PwEaeFAZFULffHRP9s5c51bSlQMfvPRNhrqaojFYnNGZyFEzvjNnmeaJkKInJcne2z+
      PWw2G6ZpEo1Gc9u9Xi+xWAxd17Hb7ZimCUAymUTTtJw36XqFYlUA7lEc/OgTDp2fwFA9XE+X
      yerrSIuOCsEjOzfQ3taS6/zZzg0s8PQAOb1/voGbhZQyZyRn9+u6TiKRADI2gGmaKIpCPB4n
      nU4jhMDhcNwQucOqEXyPwTAMAoEAjz24m9qi6xv/csEwy6CEKewiTWV5KTDXU5PFtUbj+SpQ
      /v/5gmMYBoZh5PbF43ESicQcD1JWNbperArAPQQpJV3dPfzZ3/+K6ZkA5cXuJQ62Cm4W6Rh6
      bISZtAvV7sHj8RRMZVhue+arQflCkYVlWblZI3uffIEAbpjaZ1UA7iEkEgne+uAEMdy8ffg0
      29sbEVbhkVOPj4OZWrBdanbS7nrqy1x85Zm9xGIxkskkqVTm2Kz6k1OVmOsWzf83/5jFZoz8
      7dlRP/9cl8uFrus3ZBSvCsA9hsmIBYrG2YEAlRUV7Gn1o1gppLRAmiBNfFqS+gpPJhYwH0LF
      p6f41osPIKWVM0bzVZelOnP2mPkqU75xPT8lOl89yv5WVRVFUbDZbNjt9hv2CK0awfcQzl7o
      JibtIMBQ3fztT97lhQc30LGmiqHxGdxOB8FgAIAPLobmBMJysEwe21KL1+Oe46WZ78bMdtSs
      t2e+p2e++pPv/88auYqiLJqEJ4RAVVXcbvdNBcdWBeBzjqw70ev18mlnL4a4kkYgFEbiLn78
      6n62tDfRN52mtsxDZ88IQVEMiq3g9daWKey9b+sCT838TlhIpy+U95P9Ox/ZaxU6L/t3VgBu
      NhawqgJ9zjE2Ns7f//hXJJNJRqdCc/YJIQjaGzhxvoeBkMqRvgSYSRY1ZS2D+zpqsdvtuN1u
      vF7voipPVsefr+5kdff5qs78GSS7rdB52VygW5EivSoAn3NUVVWyo6MJVVVZ11yLlpqF/BFX
      qPj8JZTpMRAqIaUUIfK6xZVjbUaI9VU6m9evA8ilJ0Bhz02h7fNVoUIuz0JpDvPVoXQ6jd1u
      vyV5Qasq0OcQk1NTxGJxGurrUFWVh/beD8D29Wv45OIoNhElJt1IMh1tJOmlVMygWCqWluca
      NZMUWRP4SmvYt30z2ze1z6nMyh+V56s3hUbm+fZBdtti7tNsUC2/82evcasKZFZngM8ZDMPg
      uz97jz//l484fvL0nABRc1Mj/8vXH2NjrQs1NpqLAAtFpb62Go9mQL4CJBTsmkKlB3ZuWZ/r
      /NkMz0gksiD6m6/WzB/tF9P1CxnP2XPnH5OFaZpzXKE3ilUB+BwgHo/nEsxUVeXFR3fgt0u+
      /8553th/iHg8zumz53MBpU8uxzHdNSAEMjJGlS2Iw65TX6Kz3h+56v8XKgHLR111JXA1TSEU
      CpFMJnN5PUBulF4sxSF7/nz35nwX57WCadnUiFtVGLOqAn2GIaWkq/cyPz9wGpdN8G++8TyK
      ouDzenDqgmmbj3fOTFFWdJZXDnWz5dIQLz39IDua/Xx8OQ1CYLfbkRKO9CUBB5pMgnrFAyQU
      koqHmXA8V7w+PwKb35alDOLFVKL5yNYKZPfn1wpkK8OcTieWZd2SQvnVGeAziuxoOTo2Tku1
      lwrf3PrclvoyttRqKEIQT5nUl3s51p/g9PkLPPfILspsceq9Bg9vaSCcSCOSGf+/ocxLKbBS
      tDfXYFnWggKWfF//Yu2b/zt/f/6+QteFueoRXJ1pbhVLxOoM8BnGK794HU9RGUc7R2ir8QGZ
      zlNZUc5Lzz5K58UuUonzDIwH2NxczsRMNw6bTpHfz3/4o5dQhMAwDMp9drr6R/lkFIjPgLME
      pKTUlmBNg5/mxvpcTn62ogtY8H/+LJBvvBYyigvlAC1HpbEsK1dscyvUoFUB+IwhW3EVi8fZ
      smk9P3rrOHHFR311GUIIYrE4hz46ypOP7SOVNnj56QfwuN24XC6mAyG+9+vjvByLsaahnomZ
      IMIy+MGHw6x1h9GSFiZqJi0CQWutn69/8Ylcp3a73SQSCVKpFKqqzsnGzEc2MJYVgvlR4MWe
      q1Dga/5sYBgGqqped+LdYlgVgM8QLMviX15/j76RGUp8Lv7gN5/jW19y03d5iPu2bwbAbrfR
      OzBCIBBk66b1uXOllDz72F62rh+noryc2UCQE2cu8rUvPI5LnGEo5kRRU5iKG1/yMrrDy57t
      jy/wvGT18HxbIBvwKhSpzaJQ6vNis8L8v+cHywzDuGUVYZ9pG2A5XoPPC6SUHP74Uz7sijAS
      c7K2pphUKkVNVQUP7dmJqiokk0lUVeUbX3kRr9eTU0WklMTjCb7707c50dmPJSX1dTW8+ORe
      vv3jd4jhIam4SenFWIpO0N5E3NKZnZmZ01lVVSWZTJJOpxekP2dH/XxdvpAbVEo5J4FuvtAU
      Gv0LBbxuhQsUPuMzgGmat40y726ClJKR0TFeP9aPYsTBTCNEKTOzs1RVViKl5O2DR3HYdB7Z
      uwuQvHfoGA/v2cHxT88xPRtkQ1szsTR8cClK/8hbFHsdTA10MqI0gaKAlChWEpBYQieGm77h
      KbZtudoOVVXx+XxEo9Fc+nO+6xMWdtbsyJ//ra73m2WFQVEUPB7PLf3md7UASCkJRyLMzgao
      rsp86Hw2smwo/vOOeDzOX/3oXaKWm7YKB22N9fSPh3j3xHs8c38bu7dvprNvDJfTwYO7DaSE
      94+c4PzFLoLRFJNUMBE4x29/YS9vH/6UiRmD06OSRl8lf/TwRhCCS/1jtDa24vO6OXD0DKXF
      Pp7et3uBmpHfwVVVRVVVNE0jlUrlZptCKBTNLZTyvBiy7YjH49jtdm7V4u53LTGWaZrMzMzw
      w9cPMhG2aCnXiKVg16YWtm7quC00eXcrpJScPNNJ58UuSkpKCM1OcbjfQmoOFCvJHzy3iYu9
      Q3xwIUClI8bTD23HoascPnWJ08MppGKjpdjg3/7OiySTSSanpvn/fvghHTVOfvfLT2G327Es
      i4GhYQLBEI31dXjcixeZZEf0rIGb9ddHIpEFtCeF8v0LeXwKGdL53qTsNgC73Y7L5bol31/9
      0z/90//rVknTrUQ8HufNt97h9ECUuOJjdDpMKjLLx/1xXEQZGRlBUQRut2vZLrTPKoQQVFeW
      s3lDO4NDwyTSkstBBWmlkUKnb2AYIQ0mIxYhy0WV22JtUx1jE1OUOCzGQga1JXYcquRXB0+w
      rqmaI2cvMxbT6Ok8zejkDB98coHXjvVzoneWE2cu0VTlp6ykeNH25Hf+7DZN00gmk3P09/xZ
      Yf7x13rmpb5r1gj+3GaDOp1OHn1kH3a7jsACm5dYysRuBqmpLOXgqV7+648O8Df//DrBYPBO
      N3fF8NjDD9C6pp5yW5RGZ5gae4hwOETnBChC4iSOQ1f45NQ5vvLCE7Q112MTaVrry9j/8UXO
      jJh8cvI0llARikZfzM+BCxHOT0ik6kSoNsKmnZnZwHW3LT9DFK56bfLVpqU6bSHvUKHjNU3L
      pX7cLO5aJVpRFCoqyvnyI5s4dqaLbR1NSKuWxrpq6utq+ZPqal7dfxSXQ7/hgujPArKjaSQS
      yVU/bd20ng3trZy/cIl/euc8utPOV/auobGmHJvNRmlpSa7z7d6+iXXNDfj9Por8PQQPdVJX
      28jm6CDnh2PoikVU2pEWaCLj5lQwqCwrue62CiHweDwEAguFZzkj9WIpE/nvATKzys1WguXa
      dbfaANkFElwuF8lkkv6BIdpamj/Xqk4hDI+M8qM3jjARTLGhqZQdHQ3oNhstaxoJhUIcOXmB
      9a0N1NdWFzw/q0en0mkcdjuzVzpnkd/P9MwMpmkxNDqBlJKSIh+KENjtNqqrKm/oXUspCYVC
      GIZRkPyqUPpzoSzQQtfNwmaz4fF4PnvJcPMNolA4jPsK5XV2exaWZXHhYhfbt21BSsl7h44S
      jsbZdsUAvleQSqW4PGshVQ8f9yf4uPtTbLrGv3o2TUdbC08/snvO8YlEgnAkSllpZgQ/dfYC
      n545h2XBSy88wX/7wbtEUpIqn87Xn72fysoKpmYCWJZFU0Mds7OzaJpOJBLB4XDcUMApGyUu
      VNObj0K2wWLI9hlFUW6ZAQwrLADhcBjLsvD7/UxNT/MX33+ThjInrQ2VbN28Ab/fn3swm83G
      tq2Z6GYikSCWFnz/7XM4HXY2tLeuZLPvKHRdRxFgQqZIXXeRkpJX3jnOH5eVUFJSkntnkWiU
      1976gNOXA/wf33oGTdP4yf4zhA2NErtJd08/UwkdFI2BmQyT2xsHjvHmqVHWFksu9I1w9OIk
      fgIktWKKPTrf+uLDlJaWLLvDZYtVskxu2W1ZzA+ezd9W6HrZ5LcsT+it1AJW1AhOpC3efP8Y
      H584zadnzhM1dc5MarxybJzv/eydBdG97IO63W5efnovv/PURspLi++Z6C9Ad/8wZj5brbRw
      m1PEEwn+6p9/zakz5wlHIgwODfPOwWN80j2JX0/icDg5f7Gb9jofqHbqKzxoqoIQmWu0Vztw
      OOy8faIfYaVx2+BQV5S04iacUoilJUOzBu8fOXXdbc6O6Pl5QIv5/BerB5i/Pdv5b5Xun8WK
      zgCGVDnUm+LDnr5Mraniyoxqmkr/yBDpdLqgejM9M8P+D08wEU5T4u2jpbaYHVs34nK5bvsq
      gncSUkrO941DXo1uhRYgKF0kFTfhWJB/fOs87ZVdhEMBKoq9JLUi6mrsaJrKsfODDEwnABfn
      h6LUlUyjmCn2tPp47MFddPdexlDduKwQMcOWu4/N6eELu5o4eqaX8ZkwE5PTVFaUXVe7C+X1
      zI8BLDUb5P+dFaZsCsWtxIq7QYUQGcIl1TaHd8apXZX2bJgdMtsOHvqIU0NJRuIuzg1Fee3N
      /fzZf/tH/uw7v+DT85c+tzNCIBikfyKSe0/FeoINzVUkxRUGZ7sfqbnonBQMJYsZnQoizBSD
      EyEUReE3nt1LbYkTpCQlHJiWpFgN8cTDuykrLaF3eAoQpKVKKhHP3TeZiPPmx70Mxlx0Tmv8
      7O2Prot7Mz/oBVdjAfNtvPzjlsr7yR5/o+xvS+GuiQOkTIklJT29fbz9/keMjo1x9JNTnDh5
      CqHqSC3jqbJ0F7q3gqijgamYypGPT83hqLkZmKbJhUvdDAwO39D1bnVynt/n47ee2oZdJJGW
      SVuNFyk0sFJgJq8eqGigaMwmdRAKkxGL6elpystK+L0v7cOvJ6n3Gvj9ftLCTjicqeVV1IwC
      YChOIuEQ0spEcVP2csLSC0pmdu0ZnOD0uU56+y8v6/nyF7iDhVVe2W3ZvxerF5g/WyxWjXYz
      WNFIcDiW4tDpywX3GYqDhiKFrstjvHd+lmNnezl5Ocy58xe5HNSQqi33QtKaF6FooKhMRiUD
      /b1s7Whmamqarp5eZmdn8Xo9150u8fbBj3nlUDdnLnSze0vrsvNNsqkBr759iNnpKcrLSpas
      jV0uhBBUVZSRCk+zscHH0/vuY01DNedOfUxSaljzyKsM1ZFZtsgyua+9Gr/fh91up6HMxaO7
      N/Hq+ycZTbgITI+zc1MrTpvCYHfGFkvGwli6F4SCEMqc2dmwJOf6pum81MP65ppc9H0xZCkL
      sykShVIgCqk/2e1Z71H2HF3Xc/UF2UKYxZDNUl2unXD3BMJUO//0zjkcNg1TODKGnwDDUweI
      ORz2c16+aufSRJL/+7//hIihYggHIKnzdfIn33jmuoJk1WU+fuepIirLy3A6HNc8PmucvXPw
      GJ9cGGIirqMYQxw88gl1tbU89/heTNOktLT0usL22aKXLOflc48/kDs/Eoli95Rij6So9KQJ
      RFJE5RVb6spbkqqd/UfP8UWvhyK/n5bmJgCCkThC+BicihKJRKmuLCeQFFhCRXrryfIBKYqC
      NNNIccU9bfNiSEk4FuLb//waD+3axL4HdizaybI5+9m8/ewiGfOPyT7r/O2F1KH8lWWWwvWm
      R9w1MwCAqdhIyvkyuYyHUTQSODIjolAyBE8JSWuFTnlZ2ZyXlk2buNjVjcNumzM9V1WWU1Fe
      hnuZfuaZ2QD/+Mo7HOmNETHtIFSk6iBsOhgJST482c0Hn/ZzeWCA8fFxVCz6Lg9RVVG+aJLZ
      6NgYo6Nj/Pi1A1SW+kmnUnM4cOx2G1XFLqLhIPFECr9LZTYmQZlbfDIaNLnQ3UdDuQe/z4uU
      kg9PXiRq6qSkRpUzRVNjA2trS9GMMONTs1imCUJkKNCNIMUOSczKUikKTMMgpvgYGBqhptRN
      +RLu0UQiMYe6ZLGOuZz0h+xsYLfbr0mEe70CcMdmgOz0tlT4+yZvQFf/KDPBCIPjARor/bhc
      Tn7+xvts7WjmwPkZhDiOTQWHTefhrU3s3Nyeo/tbTvvf/OAkF6fVhTKq2pFAmoyKcm7M4txY
      kDc/nQJF5eAnnWxqqeH+ndtwu13EYjGGhkcZGJngg0/OotuczJoeDh3vJBKYYmNHK0fPD/LC
      w1tpW9vE0NgUJ4bSoFyZpdQ5Dcssd5QM4FdVZmcD+Lxufv7WYR7f2crrRy4RSUii8QSWZbGm
      sY41jXXY3zzA6a5h2urctLe00NPbz+aNG/iHX50gbF65j6MIgLjpoqv3MuvXtSz6brLqj91u
      zyXIzcf8PKH88/OPyc60NlthvtKbwR0TgOVmBd4wVJ23Tw0jNAeodg73xJGWQZGjnLbWtZwe
      jDCZdGIAMQN+/vEY+08O8K++cB9rGuuXDMnH43GGhkc5NxgElvFRste6QjfSMx6je2qQoxen
      +Orjm3j94Gkuz5o4kpMk7eWYlhNJhr9HmBqXDl/GUBz891+epLXiHM88sIFHW6dIWQofdkcy
      15USxYyzqVplMGAyo7uJJOOsb2/lF2+8z6lhEynGeGZnE68ePMMvPh7Frn+Mzell19b1CEVl
      0igi2B/ngftKQIK0TB7bXMUvjw0j9auMcVLRmQpklj4tVJMhhMDpdObSrLMCUOibF3rP+SkU
      2WO8Xu+C+uJbgbvHBrgNEFdGrNzfqk7Q0PjbX36csRW0OTsJmU7+5pfH+crDQXZs2ZjZPO+F
      m6bJn//DK4zGnaBd205YonWMx3X+8uenkKoOqk7cUYNU8vg20ZBZ/k0AzUnXDFz62QkEsKPJ
      TbUrhapJast96Gic7hpiZ0cd7a1rKS0tRtd1Htq9hUv9vwZZTrHfS1r1gOrg7YMfE1ZL6Whp
      YDYUA0BLzhAMhVnb3ITL5SISi9Ne0suloIapZNQhzYyza/OWXHF6oU6ZNVoLjf7XyvvJFxS7
      3Y7D4bht6S93lQ1wO5H/0q0r3pJCUHUbJy+OYESnWNNQs2DUyVSpxeifjOeMxOtuSzoGioai
      2TPtEAog5gS8loSig5Tsai3hN77wGB1rqin1u7BpCpeGZugLCDCSrKmtIByJMD4xybGeMH4t
      SefgLLNpBwhBQrjx2iQyPsWxS5MYqhOPXfDlpx/EZrMRi8X4+198iE6aIpvJbCpjY1mKjXO9
      4+hGkPKSojlVevnvKRqN5riE5scGsrr6fNdxNpXC4XDgdrtvGQnuYljRbNCRqTB/9v2Dt+Ra
      1xpFbhQOm0oiZSKlxa5GO7/x/L5cACb/Xu9/dIKffjSAFNcfibaik0jVgerwLvucTCeCnMEh
      JcKIoAuTtNRRVI1Wf4wLMw7QnZn8GTOWYfqUgM1DOeNMpj1zFsJWjBi7m+x8NEDGkLbS/Paj
      a9m1bROjY+P85++9zZceXk9tZSl/9cpRkkoeea60WOM3+N2XHqG4qGhBoCsQCCxaEZa/LR+3
      MtNzObhrAmF3FaRECIXO3lH+7C+/x9/+8HUSicSc/JRtG1vZ1+ZCT05d56VvIJAjLRwiRXup
      gZbOcPkgBFL3ktKKkLobU7HTM5kGrnpdLM2N1NxI3Y2UkgmzBKnOVdss1clHA1bGTpGSIruk
      obYKgKrKCv7j7z/PA7u2MhuKYal5o/EV7qDeoMZf//Btunr651w3f4TP7/BLjeZZ22Ep+yv/
      /eXHGG4Un1kBuF5313Khp4OIVMZVGsfJdExyblzw3VfeJR6PE4vF+dU7B/lP3/k5DdXlFNmv
      j57jettsS05QpYyxs15l14YmdrSUoyUmc/vzO1TKXg76wpUfc8fk1K0ruLISpGIm2VKRotEV
      4o+/8iCVFeW5tpYUFxMIBPnZwU4Mrs6ERczi1EyEUJiKFGZqXqzD53+7/MQ5t9u9qK5vmiaR
      SIR0Ok0ymSQejxOJRIjFYtd4g0vjM2ME3zZ36TzUFNuZCqQxlARB6US6XTjiw3ht1SiKwnd+
      8BqXZjWkKOZ/vNeDUMqWFaq4UaQ0P+Npkw6bnUAgxEwghGHz5/bnR04XQyEjVAiBko7gUE1c
      HidDg4Ps27ODqrykt0xtQYRINEYybQImppQgLXasb6K8xMcPD/axs62cda3NC+6bDV4thewq
      71ldf7FvnEqlMAwD0zRzC3Bnn0PTtIJ2yHJw1wnAYrr9bev8UiITARQBwuairamOb+3YQCKZ
      5P/9hzeIK14e2t7G808+DMDjezbR99rJnCdFl0nScm7qwDJvvLzDVDtaOsDwxCyDkwMkHdWg
      q5lsWgrr0QsfsfBCc5bNRzwZoKNY4VSwmIPnx1nTPEJDXQ0Ar+0/yuHOMUBgKC68qWEMWwkx
      nJzonuQbT9fzSLufR/ZsK/i9lhKArOAuNernw2azYZomyWRywex/MyRZd0wFulYRxIrCMvAq
      Mb58fy2PP7gTt9tNaUkJ/9s3n6DNG6G5riK3TM+6tla+sq+dJzcV8ViHjwfX+VlsUemlsfxn
      TOtFXAp5iNtrsFAW6MH5akQhLLbIBJaJzWajY20DhupiKmHn2z89xPDwCAA2XaO+1MWedWXU
      F0FM8ZMwM9eZTTv4H68f5fkn9lKyBHtEoThBVm/PLnW6HCiKkosCz3eT3swyqXdMAK7lA17B
      hiDc5QT1aoYmgnPuX1VZwb/5va/hdLn44PAxIpEoQgj27NrK8489wAPbO/B6XDcoANfbzquz
      jLhisOajUMpx9thCq7co0TF2Nzv5k6/uJRiJ49QF6ypUtqwt55U3PySdTrOptY5vvrCHr77w
      GH/w8sPUljqRmgvdiKDLJCHTybkL3YsOZkKIXPR2ftrztQziQtfKlkNmybi8Xu9NFcjMzgbu
      PhXotsDK5Lgs7WcXnLs8SzQaw+O5akiqqkpZaSmBcIyTZ87z0J5dWJbFT371Pn2jAUZCXF1Q
      YgUhIiNIby0AMhlCSYWxXBUg5uYE5evKuY4qJQ6ng6f2bqO8vIz62mqKis5QXVHO4PAoX3h8
      D5qmEQqFqSgvR0qJ3+dl37ZmfvD2aaTupLnIYiJqXlP4bTZbLi8oX0AVRVnS41MIWSa67CqR
      NzNYRqNRfvrKz+4OAbjlBq6UZHTszDVbfRF6ZyxMW4GpWpqUO012d9QwNa2iKAvb4ff72L45
      w7QshKB/YIgjXbOZNXfvQH2+tCw03UaVK8Z4VOCTk8xYOgIxx7JYzEXoUaL8u998krKyUiDz
      TLu2bebQkeNE4mkkkuMnP2VwIszhM/3UVxahCIXH9m6nxOfmw9N9dPZN8NK+dtZfoz47mxod
      i8XmCOP1qD/zcbN9ZWZmhu//4MdcGk/fHQJwKyHMJPe3+vG77ew/3ovb5cTjUDF03wKtW7di
      PLqpkn17tuP1eJYUxPz03Y9OnMcQyxj1rfQNBcqufV2DIq+Tlx/fwYXuyxzoVOHKqCjn5dFk
      kRMEM8nXn91KZYGM1D27tiJEZo0BAQTCMTonBZ0TAUASTx7l5WcfZs2aJmYDQcKhEOEr7BFL
      weFw5Lw4WdzO6O610NXTy6XxJMLfeHfEAW5dB5F0VNv52vOP8MRD91HuNPjmM7UWkhIAACAA
      SURBVDsIpGyZzi8lwkyAmcJBgq/tW8fzTzyE1+NZtB2JRGKBl+G+LetQUuElW6JbccrEFIqV
      wB3txRYfWaC332gAR6QjVPp0DnxygbfOzJLClsuYLHh83nOVOkzaWwvzK2VHZY/HzY7tW/G6
      smuFZdTHDy9O8/c//jXxeJwiv4+GhnqKi4oWXGc+st4ep9OZ8/isFLGxlJLu7u45LBWmYYCZ
      hnTs7hCAQlhehE8irauF0vVeg29+8RFUVcVms/FHv/0yP33vFIMzScq0EC3eEP/u5Z082u7l
      W89u4b7tm64pfFJKZvNoAi9c6mb/h5+wrs6PwwojzNT8M8BMsrFGJ2h50WUSj5rkpX0beajV
      TZUziceuYAUuY0UyhFSWaXA9sOxFnJuy8emIBZo9t32+l6dQ9mVbffGyOp8QgvISH8ir79cQ
      ds4OBBkbnyCRSDA1Pc2hoyeWJci6ruN2u/H5fDgcjhv2218vpJS89957c565saEeYcRAd969
      KlChl+NWktSVOEilkpiWBDPBrk2tHD5xnvGEA2Jh9CsPmkql+KfXPmAkovHMlhJ2bFmP/8rL
      b2qoW3Yk2el0zqkqa21ppqqiHKfTQSgU5i9+dICQcSXCKi0c8SFqS5zs2rSbZPIMX3rmSbye
      zBJFkGG8SySSdF7s5qfvHCUcGoFkEOlvQLV7rucF5al0klpHhMDsLFHpAFc5cNXozZ8ZHHrm
      /VzL7pJSMjoVAqHMOdZCwevx4HK5eP/Ipxz4dICtG9bh9/uW9T5VVc29i9uJrHv4gw8O8dWv
      fnWOAOi6js3lJ6Xod68AzIdHS/EHL95HU33tnA+qKAoVpX6cDidlpcXYbBl14MDhE1ycsCh3
      GthV0DU95z24mdRaTVUpLs5M+0II9nZU4nA46ewZoG8iQcJZj+I0iMXj/P43voymzb2Xruvo
      us6uHVtoaqzj29/9F2aSCVKxSaTmQKjLG53zf6vxSaYtBwl7DfJK+Wh+XW0+jl6cwOs+xuMP
      3bfkPZLJJH1jIUAnP2gnNTff/skBntjVysGzI8SFh/c+OsmXntl3zXYXav/tQCQSYXR0jJNn
      zhMKzPLwww/N2e/1evH5/Uxb1mcjHVqxUnz1oRY2rGvJ+YOz/4QQlJeVUlTkx2azkUql+Psf
      vc7hnghSaLiVFI/u2UJVZcUtf/GaptGypoGmhhpqK4r58NwQjcWgpYIEZmfZvnXzkka12+2i
      uaGGY8c/hVQE0wLF4S94fD7mR8st1ZUxyhUV5UpppACKjDESOBB55ZJpbExOTvLg9nVLFu5r
      mkZDhY8TnZcxRZ5QCkHU0Dh7OUBaZNSYiekA929szA0wdxKJRIKDBw/y6muvc2kkzOb1bRQX
      +fC4r7q2dV2no7mWWq+8e22ALBQrzUv317Nr28ZldeCzF7o5N25hCR2EYCoGgpt3s2YJXwsh
      HI7wyttHaSy18/VnHyCetnjiseWNiHW1NWzqaMHj0FASk1jGfJtiIRaob0IsSMWwUlGkmczU
      HczzuMwkdf7LP/6Sv/vxG1xehALGsizqa6uo8BZOZsuvQY5JBwODw9ds90ogu3pMNBoFXyPv
      nQ/OMYCzqKwop62l+e4QgEUNXmmxa62Xh/fsWHYHfuujTqRyNfpY4tGYmJ696bRZj8ezQAAs
      y+J8Zyd/+b1fomHyey8/CgJ+92svUldbs6w2CyH4wnNP4XE70YWFDPRjJSM33M7cM1oGASWT
      1bmAUU21MRh18OmIyX/96VFOnj4/J7XYsizeejtDVWkY5jJcloK+4Ymber+3Ert27cKma8jE
      JI5of44oeD4uD43cHSpQIYNUSIst1Qo7OuqpKC+fE8lcrGNZlsXr75/MrXYugMc3ZVZRTCaT
      XB4YoLi4+IZmg/y8FiklgUCQt97Zz0fHz1Lmgm/91pczYXpFoajIf133cDqdlJWUcOLMBRQz
      hqW7EbaFac1ZXIv3RlEUpGrLVI5d45ksoXGqd5ILFy4yOTGBwKKstJj6ujreOHCM0yMpJNdI
      WxCCntEQNV5J2RWmiBVPaeEqNfurv/o1pilJSDsJVwNWbIb2lsYFbYrHIneWFQKudv78nBUA
      YaWZnokwOKiTShtsXN/OwOAQjQ31ixJWKYqCw6YQtzLXby2FiisLPdjtdhx2O5OTk1RUVNxw
      my3L4vLlAc5e6KaiopznnnmSdN66tTfq4Whra+XFp/ah6Tr/8uFA5v0sYT8sNdrOiQekYxkP
      lWWAzVP4XEWnPwT9oQiXJ87S1rKGX7x1iA974iiqPiePJ1vrm21H9m+p2vmHN8+xt6ePr3zx
      udz+lcT09DRvvL2fDzu78et2XnpsE7883MuxSwab2wdYu6Yxd6yUEq/Hs/ICIKVExqaxUjGE
      ZkM4/AjNseBlWaqd4ZjJzPGLxPQZ7u8bJR6e4Qs+LxXl5Ytev6GqmNlhEyUd4YWHdtO8Zg2Q
      +Rh1dXUL2pLdt5x2T0/PcODgBzQ1NvLcU4/mZoRbQddhGAaHT/fw6K4OHNFe4p62OT7+G4PE
      Fh+hvMgFNh/DiUyl21LCMxuMEQgEaawp48OeAWCuwM0PtuWvAaalA3zUZeA5cIRnH91zk22/
      fkxOTXGsJ4DqX8/GRjulpSWUegcZjtvZf/gkjfW1qKrK+Pg4hz46yuDYzMrbADIRREqJVtyA
      4irFik5mRqdCx2ouYu5m0D2cvDDAxbEk4Uh0yetXFnuR0uKl++upqqxa8tjFIqdSZngoo7EY
      09MzhCMRunt6mJ2d5cUXnmPnjm23PJJpt9t5bt8uioqK+MPf/g2K9ZurdMrCtCAUSbC5pRqk
      dc3c+UBCcvzUp9RWlSPMJJZlLbr86Ry7SgjSrlpMm58TF++MQVzk92O3O1GEhs/v5/T5SwzH
      3Ujg3FCIn/w6U4/+5sHjvH8hQveMcgeMYCEQV0Y2oeoo7gpkYvaapxX5/ei6Tjq9dNS0ptxP
      hTPNfTu34XItXexfiDs0mUzy6enTvPvufkZHRpmensJus9Gydi2trS23hZwpiy2b1lNfV8fa
      tWvYtWHNdVV5FYbAdFYQjqfZf/jENdM3AEzNy7nBMN19Qxki3uyV8t6T2wwUzgKVmUX67DJ+
      W6jMr4VLl7pwqym+9kAtuza10NUzgEjMIoTA1Hz4HQoXLl7i9KUhzNgUit270iqQRKaiKN6r
      61kJzY4VSy0ZmZRIdq5v4FzfBL1Dk6xrXVvwWMMwmJ2d5g9ffviGdXFFUdi8aRPKli3XPvgW
      QwiRS8UOBwPYY4MY9jIs1XkDFWdXYPOiuxNIIdBkklReliyAkOZcehch6Jm26JkcmZPmnVWD
      pJRYqi0TGzOvcn5KBBtq7GxoaqKze+COLGP10EMP8uCDe1FVlVQqRVFxCTKSQtFmqG+opn9w
      lF8fPIHhKMMyw2iafYUFwDIQ9rmUF0IIUG1Y0UkUVwmIAozOUmLXNaS06B4cX1RYRkbHaGtp
      oeI6FnOYj7tlzeS9u7dzYTQGiQBRFJJyoT1wraq67P60rQSBhUSF4AD4GnIsEGXWCJNq/byT
      lQU1DvmGb1w6qfUaPH1fCwODw0zPhti0sYONHW389Q/ewEqlGRgcorqq8rbOmPOR76nq7+/n
      0Qe20dhQz4WLXaRMeH0ohPQ3QWgYjCTSTK88L9D/8733F3ReKSXSSGCFx1CLGzM2gZRXVSUr
      ze8/3c47Hx7nwe0ddLS34fEszJvJLiV6J1xwtwPTM7P88y/2Mzk2yExcQJbPZ87zZYVA5P3O
      /p09JDPqSyy05CyGsxxhL0KoGg3uBLrdTu+smFNMsyikRaUeRlVhJgaPbmukvNjDpvUdjIyO
      8l9+ehyp6KhGlP/p5ftY27zmjrlEDx85yvDYNJ39E8xavgwh2pV9MhXFCo+t8AxgprASAVTn
      3MIUIQRCd4KrFCs0mvl2loVaVA8yk+Lc2rKGU6fPsn3blgXTa3akKyQUn2WUlhTzwLY2vv/q
      BEJTEb5MsfrNFBBJWYNixBGJaTY2FrGuqZotmzfx2v6PONafnhPhLQQ1McVU3MJwVmBPjtDW
      VEvzFffi+a7LVHoV4skEiXSKT06eZm3zmhtq563A7GyAY+cuk3TWINSrM7sQAnQnlrXSBTFC
      IKNTSEdRwQ+oOHxg92KmYigykxJgF0leenwfSMnYdIgLFy+yYf363DnJZJLp6WnKyspWdLpd
      KdTXVCFsHtB9wI3XEOQgBEJz4nWGKSuvYP/Jyyg2NzZVoCSmsOzFmQDa/O9jmRAdx0jHsXQ3
      xGZIOiq41N2LoggmpmZ4+tEHePpR6O3rIxyJMTB6faRhtxJCCJ5/9mk61vXxNz87RJzSOfvN
      0DCau3SFBUDRUUuWXuzaMhLI+Az4axHS5LFtdVSUlzI9Pc0ju7dQV5vx5afTaS4PDBAKhdmy
      edPndu1gr9eDw65jcJU096YhBCG1gvcuhBEU8e6RM1T6dMq0CEUecBVXcWrYyKlE0kwjI+NI
      hx9pSVRXKWZ4DN3h4t1jnXxyrg+nmmbT+nZcLidtrZkyyR3bbr6pNwMhBM3Na9jd1smBbnPu
      7KY5seJ3oCheLDHFWmYaNXQZxV0NCLbW23nqoZ0IITBMk3c+7qKiqpJwOMzA4CB1tbVs27rl
      c6PzF0I6nca8DYXHuWIZI8629gqOXJjA0Cr5+hO7ePOD42hSYFgqMhVBGolM50nFUD0V6FaM
      7euqSaRNRoLlbGitYt99m67pdl4JFOJAstldIObmVym6A4HvzkSCF+2wUmIKHcXupcqd5stP
      78utOt55qZfRuI2/+PGHNHmifPVLz1NVWbmyjb8DCIUjpCzlthLYlJQUExFJHCR57d3D9Iad
      eAhR5dOIGiojieqcStRcbPHlJx6htrqK1989zFef30BpSWGV9k7gYlcP7398npJiP16XHQW4
      2DeKlF5A4hBpimwpZlJpHtnReHcUxEjLwm5FWONL8ODTjxGNp9mycR3uK778S13dfHT8LM1l
      1ayrr2b3tg5Kiq9di/p5QDgSw7rNn8ntdKBIk6RwMD41QWuVjfFpg65QcWbkz3Zuy2Dr2irq
      aqoRQvDCE3vvmo6fxbHjn3LmcgwxZmZWuQRkSkEmxpAyRevaKr71Gy8xOxvA7XbdARVICISR
      QCo6UijoZoxtjU461naweeP6gmvBlpaWoBoR/vXL+3A6nStWUH03oKy0CJV0zgaYDzU2iums
      vAbn0VXMn4Gl6uBH73djqQ4UaeArqWQoohLVqsgumielRI1PUlesEQ5oWJZ13StwrhSqq2uw
      us6hmMlcwFXYvQibizqv5JEHtmCz2aisrCAQuAM2gF9P8djOWn51pAePQ+PlpzZTW12J0+lc
      dCHkQCDEmFnO0Mg4HYusS/V5RSYDU839nv9+THsZ10OzOP86kkxBixACKXRGEvocPVpKC8WI
      8eV9Hdy3c9uKFLPfjJs3nrZAKAiHb871mktU/uDLjzA4NMzY2DhVVZWEwyucDu2yCX7/xd30
      9fbw9Se3sKG9lVgsRiKRQAhRkF9GSkkibWAJlWQyWeCqn29UlJdTX2KjZ2YRD5B6/ZHraxXD
      535bBiLQS3tzHXt271yxmTcej2O32xkeGSGVTNHSsnZZ50kpOdszCmZqbhoHsLbax+Rkpmin
      vDyTKeB2u1Y2GS6ZTDI6NoaBRnVFGYZhMD4+zl9+73X+6ZfvE5/HwROJRDl+/AQ/e/ckNUU6
      7ffY6J/Flx7dgpacviXXWlB4VIBKJbdNSmxWjL07N66o2pnl//T7/NTW1tDX379sBuhNaysR
      0sqLY0gcRNm+YS2NjY10tLflahiKiopWdgYwhc4P37vImjKd+upyqqoqSSZTBFMQnUgRj8Vx
      OhyEQiG8Xi+Hjp1i/4k+EmoRD9Z4sX8OA13LQUNdLZuaqzg5nF7R+wpVx+4tY01j3bUPvg3w
      +zNqTE11NYZhXDPQKYRgx8ZWmmrK+fmBU5QV+yjxe9izZRt2u51fvnWQsZko4WgSU0oi4dBK
      2wCC2mKdP/qtF3A4HEgpCQYDiFQInRSJRILOrj4Of3Ka4PQY4zEdqTqodsZoa2y5K42ulYAQ
      gi89uZv+f3ons1AdC4vgb8t9pUGRx04qde1C/duJ62GbqKmuorqqksMnL1JdVY6mqnxw7Byf
      9M5iatlUGdsV/jJt5Y3goYDF0Og4a5saACguLuHp3e1s2bKZV994l96+fnS7k5qqMva0NPLC
      Ew/myg3vZRQX+fnmU5s5e+kyR3rCxMyM7n+r3ku+7i+EwKmm+eL9zezZ+eJd+e6z5anzV5WJ
      RmO8efBjzk/AuakJpLSwgiOoRfmzmEAikcnwyguApdrZ/8ExGutq0HWd9vZ1rFvXxuDgIKNj
      4zS3b+Tx+zeztnnNHSVQvRvR2tpKZWUlXvcZfvb+WaSRRHGXIexeQFyprJOgFPamLYXc8VLi
      UVP87nPbWLe26VY/wi2DaZqMjI5Sn1fmKqXkn199nzOjmRiAlBKZCCHNRCYjdp6to7hK7gQt
      iqB7eIZgKARcoamz2Vi7di17dm5h77Z1tLasXe38i8Dn8/Hg/Tvw+ot5YFMjHiWBFRpFhkex
      IuOZDx4PLFiQoiCkvJJ6bmZ+X6GVf/a+pru688MV4q76+jmCPjE5SedwNNfRZTKIlYqiFjcX
      VBnvQEVYxiWlKgJZwKrftnULRUXXZka7l2GaJna7nUe2NjI8NsmG5mqODZpzOoKVCCDjs1ip
      GKqzCLKco1LitIL4PU6C0STJeJSvP7UdVdO5cHmcWMLg7EgCwzBvyhe/EsgX7FQqjc2mE48n
      kUJgJYLIdAKEQPUtzc+08iFVRUV3uJlfhDMxMYHNpt8V9Hp3MxKJJHa7jQe2d/BPPxvESBhU
      uZ2MR6+mLCiOIqxECNVXhRWbRtEcCExaitL85otPU15WSigcZnp6horycjweNzu3bcIwDP7T
      3/2STy4Ms2/P9rtaAC5fHmByaoqammp6e/vw+4t45eB5UpEAwuZFcZdlAmLXeIYV1jMkSirE
      bz6zG3ceV2MymSQQCFC0DK75ex1utwtN03C5XHidNoaCFi/saaHcmZqz/oDi8CEUDcVVhhWb
      wm1M8ftf/wIV5WUIIfD7fDSvaZqzHJSiKJR6VManZpmcunO5/MtBcXER7e3rsNvthBMm3/7J
      +0xMTmNFJ5GWsazODystAFLSWq5SW1WeYw3IsnnV1CyPSnAVGWiaxm995QW+uG8zH5/p5qWH
      N6DLhZFyoagI3Y2CdU27SlEUnn/0Ppw2lVQqvSgdyt0Av9+P1+NhJhDmnTNToKogLYTdh1AU
      zMAAchnrLqyoAHgdKo/s3sRff/cnhMMRenp6iEajlJeXf+7KGVcCiqLQ3FBLNJ5CUxW+8eQG
      7GLhR1ccXhob6q+pXkopKS8r5Xde2ENVZcUdoTa5HhiGyaGTXaTJxEa04ka0kjUodi/STGJG
      xrAS4SWFeEVtAK/Xw/jYGE63D6/Xc90cmncrTNNccpXz24mSkmJ+/+vPc+DQMZ57ch9pw+IH
      B7qwxNxPW1pUeIDJ7xwXLvVwrvMCUtgxpKC2qhyv13tb238zOHexm08HopBOgJJP4a4gdBeq
      rxaZCGKGx1A9FQWLsVbcCH7ooQepr798xwhUbzWklAwMDqKpGgioralZcReu2+XiuSf3ZVIB
      NrVx6FQ3l4Nzj5maCS7w7PQPDNHVP0JpkYd1axsZGxunsrwUVDsHjpxmZnaWFx7bQ3tb84ot
      abRcGIbBr/d/SDqcWetLLZ5XfG+mM33MWYSwubDCYwhXKYqezwxxB8hxdV2npKSEWCyO1/vZ
      V3uEEKxpasI0Tc6d72RodILdO7auuBBkO6eiKOjqwo7aPWkwMDRCY31thinNNPnOzw4RNF08
      tNbBtk0dPPLwA7lr7b1vK2/sP8TP93/M2s5L7NjcTiptUFTkp66m+o7NeFkIIWiqq2IoEc/U
      Qihzu7LQ7DmBF6oNxVeNFR7DTDtQHEXIRGbdtxWlR4eM5L717nuUlRTh8/mufcJnBIqiUFxc
      xOTUDDVVt341muVCCEFVqY+hoWFC8auF7SYag8Oj+B2CoZExPjh6ip4ZgYxN8/KTOym5Qhuf
      3+5EPMYD29ppbW7k4Acf8vr7JznVNUZkdhyX087YxAQlxcW5+64kFEUhGk9wdiCIUBdGvq3Y
      DIrjqoothECxebDis8jIGMLhR3GucDYowMxsgA8vRigqGV7A1vxZh81mY9f2zXe6GTTWVfNv
      v/4knV19vHXsEqNBC6naGAoKvvPGOSRKJmpspqjwKDQ11BdkynY6HMTicdZUVfLsM09y330B
      KsrLcDrsBIKh3EJ0cBsWO18GbJqaYRm3e3LVaznM4y7NPp/qqcQMywwFD3fABjh77gIKBnVV
      N05fuIprw+l0sH1zBxvbW+gbGOKjT3uYDsdpKC/hZO80ASOJ0J0IK8qvDxwlkTRoaShnU0db
      rtyxtaU5d72K8vI5tPT53KuWZXHm7Fm2bF454ZdScrFnAMwkRiCA4izK8JwaqUxAMJviIa7k
      BFkGmClkOoZiu9r2FReAhroa5LuH+OijD7HpKo2NC1fuWMWtg82ms65lDW1rm3K1vDv6B/jH
      X8SZCScYj6q8cWIUKzbNB8c+5T/8ccl1s20oioLPu7LqbDQa4+LQLFL3oDqKsGYvg7cKxXXF
      rnQWg1AzaSHJaIaU2V2KYvNkUqDSCRTdsfLJcMXFfkp9OgODQ/z4X37C9PStqXRaxdIQQuTI
      w5qbGviPf/QV/tdvPM5j97XhjPajecpx+UopLioquKiclJLJySkMwyjoV29qalzRb+nxuCkS
      Aazx05hTXVdUHgFGEqFoCFXHDA0jjTSqvwa1uBErHsBKJ5DxaUhFMILDKzsDSCl599132dTR
      zqkz55kNBNl/4H2++uWXV2eBFYbDYWftmiaamxrZ3NHKd3/4CxzekgXEBFJKevv6OXepn5On
      TlJZWU3L2mYeeWAHiqIwNTWNw2EnHA5TU1Ozos/Q2tJM92gE016coY9MRzGTIdSiRqxEMLPy
      kO7Cis0iLSNTAxCbRvPXgOZEZYVVoOnpafz+IrZs2cLFrl4SiRh9vT0YhnHX0JLfaxBCsHZN
      I2sa6zg/FOL8hS461rUwMDhERXkZwWCIv/zxByTTBrX+YjpnHXR+MsKbx7qoLvUSjkSJhEO0
      13r517/7jRVt+9NPPkFHezvf+flhZoNBFLsfxebFmLyIUG2ZdQ9CI2hlrViBgYz7E+bkCa2o
      G9TpdNLQ0IDP5yMQDBGOpRiLaezd3lGQEWIVKwMhBNs2deC3S370s1c5drafcCjEm+9+wKlL
      w4SVYqSRIJ6WSN0DioapOAkkBHHLjqn7mIkY1BZplJeVrthsrigKxUVFKKkglybBCAxk1lWT
      FlrpWlRXMUgL1V2KQGImowgy3Ka5a6xIS/OgaRq9fX2MjY5gah5ULCLXWPdrFbcfQgh279rO
      //nv/2f2bGnhxaf3UV9bzVjKA0KgOItIpxIYoRGkkUKa6asLdAtBIhbk7147QefFLgzDyNkK
      K5FMt2v7Nh5o82HzlGR8/K7iDBM5GV6jzIqbChgxFGGBdbXGeUUXyAgGQxz+6AiB2WlefPGL
      TM/M0tXdzb6H9t5TbG+fFRw/dZbvvtOFzAs0ScvAis2AZaD6aq6uHhkaQfGUo4dHeVadJqBa
      tO3ZQPsDL2Cz2VdkVui81MP33zjO7MwMTn8ZdsUiHhhD99ewod7HlpZMwXzf0AQ/eL8bSyor
      awNomkp7exuNDQ0oioLb7QJpcfHiJdav7wBWPqK4isKQUmIaSaQ0ECKPZErRUJwlWLFJkBbm
      TG+mBllzIBNB2iJjtJLglBqlsvc0P+qZ4Le+9YcrMsB1tK3lf68o5XznJdrXtVBcVEQ0GkVK
      OSfroLSsjEQyhWWkVnYGSKczCUrZPBLTNOm8cIG62lp6+/rZvm3rqgDcBZBSMjs7y5//3Y+Y
      1erm8I5Ky8wsZxUaRS1dixkcQvFUoqg6VmwKxUiyfbabKV2hpDjBGf1+/ujFnaxru/tobdLp
      FV4hJhaPMzw8zJFPTuHzukmlkuzcupXDh48QDIdpX9eGpunYbPOWs1nFLUc6nV6UbiaVSvMv
      rx9gMgLCFUPRnblUYis8ijRToDsxA4OZaLKqX9G3JZbNzfHa+0GzMyAE0jJ57/BxWlua73gC
      3Xzour6yM4CUkl++/iYOu053VxfPPfcsjQ31/OCHP8Tn89Pd1YWvtJrisio2tmT0yzVrmua4
      SOf7qFddqDeGN996m9KSErZu3bJAPTl97hJ/9+Y5LCky+fTRSdSSZhTNjhWdAJsPRXcsK/9H
      Bi+jmnE2tTWyprGejeuaKSsrvaOsH/mMGf9/e2f6HMdxHfBfz7E7ewCLiwQgkCAA8aZ4iaRI
      SqJEUgfl+Cg5LkeO5ZKTlD+k4pSTb/kX4qp8y4d8UKXKcbkcO3I5smxZknUkiimLkmVSIkWJ
      h3jpIAHiIIC9ZufozoflLBcgbpB7EPOrYpHcmZ3t6unX773u1+9VVAAcx+GHz/6Ka4NX2L9z
      DRoSBHR2dKLrBic/Ooknohw7fZnH7uvj1JnzONHlrFvVztqednpWrSzVDHj7yBG2bd3KuXPn
      6ezsoLm5+Y4tk3Q7cBwHTdOmTHP+4mu/55WjV1B6BD83jB5NIvOjoJkov4BmNZWCyWZDKQXZ
      ATRNR1otWN41Du3qZfXdvaQaGojFY0QrfNYgOOqp63plTaC8baMKGVoaLYZGxnj6qa9z+Uo/
      b/3hHdKZcZpbmtm6fh1nz57hyPufkI104JHg8qlxXn/7A7pWrKS7xeDQgb3s2b0bIQRdXV38
      /vBhLCvKIwcPhqtJc2S6PJtKKeImSCeD9AroyXaEEUUz4yjPxu+/hN7QMeffEUJAsqNUnrug
      p3jh3ctoR6+i49Oesnjq0C66V3TeuP82U659Km4CPfujn7Pu7hW8+tprXXmSWwAAD7dJREFU
      /PV3n6Gvr7eU4i6dTjM4OEQmk2Z0LI3U4xw+cYnBvIk3+ilG8yqQPm1mli8/sB7TMLgyMMjp
      Ty6we8dWIqbO5s2ba7Z4Qz3g+z7/+h/Pc+bzEfR4G8IoCoqfH0N5ebRIEhG5tbWY45rD5u4k
      B/dupWP5soq+u4oaYkopHn14N6nGJP/wg7+ntbWlZItlMhl0XSeTydDS0sLVq/0ceOBenn5i
      B8LLoSge9lYohtwEv3zjfQqOg25GePIrh7hv1w5STU0cP3Gy9Fu1mtGgltE0jT1b15JoWl4a
      /EpJcDIYyXa0aHJ2u3+afp/u85yM8M5Fh7fe+3hxjV8AFbUXstksFy9eIGcXGBi4ilSSRCKJ
      pmm0tbYyNDyEJjS2bNnMkx1FNXv2k3OsTNh8lgWZG6LLytDV3cOHlyzQIhzYt410Oo3nefT1
      9pYOaXheUWBCbTA/hBDsvvcerqVzvHTsanEJVPogtGIczRwc3+muz/Y92509jcmtpqImUDab
      5Sc//Rnr162jt2cVL/z2Fb76pcfp7l4J3DhVVN5RjuOg6zoffXyGwdE096zrpa2tjRdf/T1v
      HTvLqmbB/bt3kEql6OnpKX1PSlla6gud4/mTyWb54Y9eYcwtnq1VuWGkayPMGFq8pVg+1R5H
      a+y8+TTWHNA0bYKWtjSXv3tyJz3dlT0lWFEBAMjnbbLZLANXB2hubqazo6M04E98eJKxsTGa
      m5u5u6+XTCZDa2sxuEpKyetvvsX+B/dgmia+7zM6Osb5Cxfo7Oigv7+fVau6WVZ2ailIoR0K
      wPxRSvHym+/e0AIUC2b7Y5+hpERPtCHdYt1gRFHLLvRYpCYL/NXjm9i6aW3FtXXFl0xiMYtY
      zKKt7UZEXjALXB4Y5vCJT8n4URqtk6REhn/822cQQpDOZHj96KesXNHF+jV96LpOa2sLra0t
      ACxb1nbTQC8/BBIyP4QQPLRrM++d+h2DdlEAhG5itPThjX5WPHAeSeCnBxC6iRZrmViJfa6/
      4xfYu7aJLRvXVMVUrWoOcqUUxz74kOd+8wb9/QO8+WE/YzTh63GuFSI0JiIl4chkctgqyttH
      P2Z8PH3Ts6LR6KxLoLWc6q8WSSTi3Ltm2YSco8X+K0aACt3ESHWhWU34mf55D2ClFHHd5auP
      7q3axljVBEApxdH3j/Pj353g8NkM//LjV8j418v/UPwrkmxlZGQEKWUxvBY4dlny2h+OLWgg
      +74/4/eklHMuxrZUOHj/Du65ywC/WJ9MK4wwWakKI4KWbEcW0jfCj68zl/ekLcCHuFVUZdfI
      931+/vwrHDvzOZ5VdKLc6KQsEULnvU9dzvzs/9iyMkYklkTqUYTQ+OjSMF+y7ZtSrM/GTBoi
      iGGfrRDbUiMWs/jeNx/n1NkL/PrwST53LJTK37QaJDQDv5BBc/NoyeU3Pp9BKwghSCUiGEb1
      zNSqiN7ItVFOfJGnYN018wqCEIz7FofPu7xxcqR072DaY+Dq4Ly1wGzpGE3TDCvTTIGmaWxc
      dzff/9YjdCUKSDn1wNYbOorpR+bB+lXLquqnVfRt27bNy2/8gWd/eZiMH517pUPNAO1GwJvS
      Yzz7wh858qcTcxKCkgk1U5bgcLl0VpKJBOvW9KHpxoSJQro2q794h/2fvVksUj1HhHRZ091e
      1X2aigrASMbhxQ9G6M/dCMNdkFMqBGnf4peHz3L5ysCszxBC4DgOruuGTvAiMXQNEPhu4frR
      SA89fZmvU2CXJkj5TnHneDaUYu1yk/Vr+ma/9zZSYX2/+IzQ5QO4oKL8+y9eZ2hoeMaBLYQg
      FouFM/wiUUoxMppGWI14g6dRhTH88S8wlCJDcfniodwV1nzxHkpOU1tAeiTkOG1mhq/u3171
      d1L10MlFCYQQDPmNPPfSYb77jceJx2MzbsNXu7PvBAZGsihAizUj4m0YCYEL/HgsyuPj59mg
      KTpUnuHBU1xr33Tji0rRGvPYtbqVgw8eIhqtzDnh2ag7j++mThMap4Z1fvLcC6F5UwGUEKjc
      CFpDx4R3kUut4L/bd/K/RGnTBG3OKMorlMId2iI5fvDUfv7s0X1YllUTgx/qUACmRGj45p2T
      ar1WsW2bjO2h1DTmjRBYvs1nUvJ5tBXl5kqX+joaaG6uvSKIVTeBZiJYtpzL5tTF/lEKhcK8
      9wZC5s7VoWHSOQdhJqYsN4QR5XDHDvzsMJrVgLCaijO9UljR2txfqWkNMJ+Y/kTcCm3820z/
      1RHcfHqG45DFZFSalUSLX88QJ306Ey6H9u+uZFPnTM0IgFKymG2sbPUg0ABzsRc7WxLh4fjb
      zNBophgXNKkckeGMlOKFZGYI5eSRbnG3OO4McHB7Nw01WgW04ibQhJBZJUkaLqmYzsZVrdy1
      vJnRdJ6T5wf4ZMgD3UT63oS8NFMifTb2dt3+xi9xohETxc0a2YsUI3JREmFaaNEEspAG+xoP
      7eph573bKtzSuVNxARDKx1AeCsHm7iR//tjDNCQTE8yXh/d4/NtPX+LcsEuDP8K4sXyGJ8LG
      zgi7t2+qmZWFO5Wc7RQno+uVVyajXBvNMEG66PEWeqKDHNz/UE2bphUVAMuAbz6wig2ru/E8
      j+bmJqJTBJ8ZhsETD9zDyTMXuXBhmHHbnRAKMQHf4aF7Ny/I/Png+Ak6OztY1tYWCs8sSCk5
      89lQMVZ3Go2saTp3NSqk2YBpwHe+9iSWNXNx7mpTUQFoaWpg3+65qcPVfT0IFHZ6GM02OTes
      powd6mzUWd3bvaD2tLe389zzL/OX3/gyzderJIZMzeeXr3B51CuesJvOJNUjZGScf/r2Y1iW
      VRc+Wc04wZMRQtDX28NT3/wGB3euAXU9ylCpksOlpEd7KrLgju5oX86qFct5/revkrdtcvn8
      LWr9nYVSijffOYHjFNDjLdPfKARZV2NsbLwuBj/UsAAApVySG9b28cT2DrqSPk1mnuXmOO1x
      l+/s7+PJx/Ys+PlKKTo7uzj+hcs/P/srzl/8/Ba2/s5iOONOf1H6KOkRkTkObu2kq6uypZIW
      Q01vhAUYhsGX9u/msQd9Ll66RGdHB9lslkgksqjdRSklR09dQuoWa1c0sKZvYabUUqA5GUU5
      A2iJZTddM/00Tz++jb6eFTQ2NNSVKVnTGqAcIQSmadDUlOL02fOMZ7J8dOr0gp/nOA5H/niM
      +zZ202A4HNi7jWi0th22alEoFLhweQRVGIfyA0PSJSIzNFqCbZs30JRK1d2BorrQAOUkEwl+
      8/ZpRmydAxuaF/ycE6fO8YvD59m2IsK3Du3kro6Zl1qXMvm8jRr7FHwfwY3ZXZMOf7F/NWvX
      1F7u/7lSX+IKWJbF+hXNqEKanq75V5tXSjE0PMJLR86QjJl87YkDbN5Q+Xw09cTo2BjRiA6R
      5ISVOKlF+dOx4yTi8brtv7rTAEIIvvbY/WzfeJnVfb3z+q5SinePneSFt87iKnhkUxtNqTCK
      dDZGro1ha00gnAk7+VGV42+e+XbdrPhMRd1pACiWW127+u552ZtKKY6fPM1//s/HjHsG+za2
      c+iRfXU7c1UKpRQfnrvCmNkJfgGkB24WU9kc3L6q7rNo1J0GWAxnz10kInxiUY89W9dWuzl1
      ged5XB3NIX0NIbRiGLTSObC5nScO7K128xbNkhEAIQRfeeIAy979I1u3bKYplap2k+qCvG0T
      lePgGIAEBBgWb308SEvqOHt3bql2ExfFkhEAACsa5eF9D1a7GXWF7/l8kY2BciHaVHKCbU+b
      c1abWqYufYCQymEXCjjKwM8NoZkWUDy78cg9rezZsaXufahQAEJmxDRNNCERhoWIJABoi+TY
      vX1D3Q9+CAUgZBYS8RgpSy+mQs8W8y/t29pDW+vEoDilFLZt4/vTHJivUUIBCJmRSCRCKhFB
      s5rAs/GvXeKjU59MmaggKE9VT4QCEDIjuq6zdmULmibQm1ZitvbSfy2P606MDhVCEI/H6y4W
      qL5aG1IVHt69lRVJFyhm6RjNurx55P1Z6y3MFd/3cRynKonNKl4jLKQ+GR0d479efpuTVxz8
      9ACakNy/sZNNa/vYtGkTmrZw00cphed5GIZRcRMqFICQOeO6LkdPnObdE5+QuzbA97/3NInE
      rS2aXWlCAQiZN1JKxsbHaUql6nrwwxLbCQ65NWiaRnNT7eX5XAihExyypAkFIGRJEwpAyJIm
      FICQJU0oACG3jPmks68VQgEIuSUopfB9v+6C4cJl0JBbRpAFOtAC9bBHEApAyKIJBrzv+xQK
      BTRNIxKJ1HRa9IBQAEIWhZSyVIDctm0Mw6ipKpCzEQpAyKJwXRfHcfB9n4aGhjAcOmTpEDi9
      ruuSTCbRdX3ONd1qhapqgGDZLOg0z/NKqwlBaOx8CuWFVBbHcXAcByEErutiGPVnUFS0xeVr
      xJ7n4XkejuMQi8UwDIN0Oj3hHiklhmFgGAamaaLreqlmQCgQ1cP3faSUOI4DQCJRvxU6KyoA
      Ukry+Ty+7+N5XmkQZ7NZhBATNlKCQR6oWdu2EUKg63rJ1gyFoDoE79D3fRobG0umTz1ScQ1Q
      KBSm/HyuO4hKKTKZDPF4fMIJonpae653gtk+mJDquc8rXyZ1ls4qv14+uMv/7fs+uVyulJjV
      MAw0TcPzPCKRSF2/kFommGQikQhSSjzPK9n+9bb6E1A1r2WqGT8wg8r/H+D7fqmTA9Mof72o
      nVJqgklkmmboJ9wGbNtGSkk8Hi9NRJlMhobrZZHqsb+rUil+Icw0wwghSjlpAn/CMAzi8Xhd
      7EbWMoF5Gji9wURUbspms1kaGhrqsq+roreCDg2YnGRpOu0w+Z7yP+XXlVK4rkuhUKjLCMVa
      QkpJLpdD13UMwyhlcAiC3qbq/1pg8vgI2l0+HqSU1TGBytWlEKI0u5cP1Kk6dbLDW37vZCdY
      CEE+ny8Wdr7uqBmGUfdOW6UJ4nqklFiWheM4SCnRNG3C4HIcB8uyqt1c4MYEaJomhUKhVPww
      8BMDLZbP52vDCS5fAg0EYjpfQEo5YfNsJqEI1Ha5gMRiMeJ1XNOq0ti2jed5RKPR0qwfCEC5
      X+Z5XjWbWZrhodhmpRSmaU4YL47jTMhfqpSqrVigYONrphyT0wlQuSAEL6hckAIhCxznWCxW
      tysXlcSyLAqFAvl8MR1ire7MZ7NZfN8vtcv3fUZHR0vaQNf10sZdedtrSgDKV3ng5lm93LyZ
      TLnJNHlgT74/UIt3ugAUCoWSBtQ0DV3XFxSp6TgOuq5jmia2baNpGpZlkc1mganN1UoTj8cZ
      GxubMmlvYPZMZSUYk5Oc3k6klNOeGAo6carrc+3gud6naRqu696U4PVOJLDPg75ZyGA1TXPC
      snNgTpQPtlwuV9UJJdiXmInJ+0kA/w9TDOAv0ptZvAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Two Highest Segments' width='192'>
      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
      Qmv/D/w95S6MZyArAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Two Least Used Shipping Modes' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
