<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
        <calculation class='tableau' formula='0.00020000000000000001' />
        <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
      </column>
      <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='8.0'>
        <calculation class='tableau' formula='8.0' />
        <range granularity='0.5' max='12.0' min='6.0' />
      </column>
      <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range granularity='0.5' max='6.0' min='0.0' />
      </column>
      <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
        <calculation class='tableau' formula='2.0000000000000002e-05' />
        <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
      </column>
      <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
        <calculation class='tableau' formula='0.089999999999999997' />
        <range granularity='0.01' max='0.10000000000000001' min='0.0' />
      </column>
      <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
        <calculation class='tableau' formula='0.13' />
        <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
      </column>
    </datasource>
    <datasource caption='data.world connector' inline='true' name='federated.1arkmi71ov62uk16x1bno06a2zqz' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data.world connector' name='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;jlee/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmpsZWUiLCJpc3MiOiJhZ2VudDpqbGVlOjphYTAxYzZmMi1hMTBhLTRhYzQtOTU3Yi1lZmQwNDM4OTI0YzAiLCJpYXQiOjE0ODQ2OTcyMjcsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.gnpazqWHViw7QcLMWccGADp4i8rmzRFwx7tp3OknW0T4q9JhJFKP46h-mQJL1GKku9rnHN8dXJGQ_WbFPfJiLw&quot;}' connectionName='data.world connector' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[globalshipments].[v_10]' />
              <expression op='[census-pop-sex].[v_2]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt' name='globalshipments' table='[globalshipments]' type='table' />
          <relation connection='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt' name='census-pop-sex' table='[censuspopsex]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (census-pop-sex)]' value='[census-pop-sex].[v_0]' />
          <map key='[v_0]' value='[globalshipments].[v_0]' />
          <map key='[v_1 (census-pop-sex)]' value='[census-pop-sex].[v_1]' />
          <map key='[v_10]' value='[globalshipments].[v_10]' />
          <map key='[v_11]' value='[globalshipments].[v_11]' />
          <map key='[v_12]' value='[globalshipments].[v_12]' />
          <map key='[v_13]' value='[globalshipments].[v_13]' />
          <map key='[v_14]' value='[globalshipments].[v_14]' />
          <map key='[v_15]' value='[globalshipments].[v_15]' />
          <map key='[v_16]' value='[globalshipments].[v_16]' />
          <map key='[v_17]' value='[globalshipments].[v_17]' />
          <map key='[v_18]' value='[globalshipments].[v_18]' />
          <map key='[v_19]' value='[globalshipments].[v_19]' />
          <map key='[v_1]' value='[globalshipments].[v_1]' />
          <map key='[v_2 (census-pop-sex)]' value='[census-pop-sex].[v_2]' />
          <map key='[v_20]' value='[globalshipments].[v_20]' />
          <map key='[v_21]' value='[globalshipments].[v_21]' />
          <map key='[v_22]' value='[globalshipments].[v_22]' />
          <map key='[v_23]' value='[globalshipments].[v_23]' />
          <map key='[v_2]' value='[globalshipments].[v_2]' />
          <map key='[v_3 (census-pop-sex)]' value='[census-pop-sex].[v_3]' />
          <map key='[v_3]' value='[globalshipments].[v_3]' />
          <map key='[v_4 (census-pop-sex)]' value='[census-pop-sex].[v_4]' />
          <map key='[v_4]' value='[globalshipments].[v_4]' />
          <map key='[v_5 (census-pop-sex)]' value='[census-pop-sex].[v_5]' />
          <map key='[v_5]' value='[globalshipments].[v_5]' />
          <map key='[v_6]' value='[globalshipments].[v_6]' />
          <map key='[v_7]' value='[globalshipments].[v_7]' />
          <map key='[v_8]' value='[globalshipments].[v_8]' />
          <map key='[v_9]' value='[globalshipments].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <caption>Row ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <caption>Order ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <caption>Order Date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <caption>Ship Date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <caption>Ship Mode</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <caption>Customer ID</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <caption>Customer Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <caption>Segment</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <caption>Postal Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <caption>Country</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_13</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_13]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <caption>Market</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_14</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_14]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <caption>Product ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_15</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_15]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <caption>Category</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_16</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_16]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <caption>Sub-Category</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_17</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_17]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <caption>Product Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_18</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_18]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <caption>Sales</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_19</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_19]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <caption>Quantity</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_20</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_20]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <caption>Discount</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_21</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_21]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <caption>Profit</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_22</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_22]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <caption>Shipping Cost</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_23</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_23]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <caption>Order Priority</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <caption>Country</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>25</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>26</ordinal>
            <caption>AreaName</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>27</ordinal>
            <caption>population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>male</remote-alias>
            <ordinal>28</ordinal>
            <caption>male</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>female</remote-alias>
            <ordinal>29</ordinal>
            <caption>female</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
      </column>
      <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_46795279869964289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_21])/SUM([v_18])' />
      </column>
      <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
      </column>
      <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='Row ID' datatype='integer' name='[v_0]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[v_1 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
      <column caption='Market' datatype='string' name='[v_13]' role='dimension' type='nominal' />
      <column caption='Product ID' datatype='integer' name='[v_14]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[v_15]' role='dimension' type='nominal' />
      <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[v_17]' role='dimension' type='nominal' />
      <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
      <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
      <column caption='Order ID' datatype='integer' name='[v_1]' role='measure' type='quantitative' />
      <column caption='AreaName' datatype='string' name='[v_2 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[v_20]' role='measure' type='quantitative' />
      <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
      <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
      <column caption='Order Priority' datatype='string' name='[v_23]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[v_2]' role='dimension' type='ordinal' />
      <column caption='population' datatype='integer' name='[v_3 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Ship Date' datatype='date' name='[v_3]' role='dimension' type='ordinal' />
      <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Customer ID' datatype='real' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Customer Name' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
      <column caption='Postal Code' datatype='integer' name='[v_8]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[v_9]' role='dimension' type='nominal' />
      <group name='[Five Highest Sub-Categories]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_16]' member='&quot;Bookcases&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Chairs&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Copiers&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Phones&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Storage&quot;' />
        </groupfilter>
      </group>
      <group name='[Two Highest Shipping Segments]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_7]' member='&quot;Consumer&quot;' />
          <groupfilter function='member' level='[v_7]' member='&quot;Corporate&quot;' />
        </groupfilter>
      </group>
      <group name='[Two Least Used Shipping Mode]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_4]' member='&quot;First Class&quot;' />
          <groupfilter function='member' level='[v_4]' member='&quot;Same Day&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/Jackie/Documents/My Tableau Repository/Datasources/federated.1arkmi71ov62uk16x1bno06a2zqz_1ub4yfa1mb4hoj1gsdcn709srt76.tde' schema='Extract' tablename='Extract' update-time='04/15/2017 03:06:02 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (census-pop-sex)]' value='[Extract].[v_0]' />
            <map key='[v_0]' value='[Extract].[v_01]' />
            <map key='[v_1 (census-pop-sex)]' value='[Extract].[v_1]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_11]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_13]' value='[Extract].[v_13]' />
            <map key='[v_14]' value='[Extract].[v_14]' />
            <map key='[v_15]' value='[Extract].[v_15]' />
            <map key='[v_16]' value='[Extract].[v_16]' />
            <map key='[v_17]' value='[Extract].[v_17]' />
            <map key='[v_18]' value='[Extract].[v_18]' />
            <map key='[v_19]' value='[Extract].[v_19]' />
            <map key='[v_1]' value='[Extract].[v_110]' />
            <map key='[v_2 (census-pop-sex)]' value='[Extract].[v_2]' />
            <map key='[v_20]' value='[Extract].[v_20]' />
            <map key='[v_21]' value='[Extract].[v_21]' />
            <map key='[v_22]' value='[Extract].[v_22]' />
            <map key='[v_23]' value='[Extract].[v_23]' />
            <map key='[v_2]' value='[Extract].[v_24]' />
            <map key='[v_3 (census-pop-sex)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (census-pop-sex)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5 (census-pop-sex)]' value='[Extract].[v_5]' />
            <map key='[v_5]' value='[Extract].[v_51]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='51290' timestamp-start='2017-04-15 03:06:02.131' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33777</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1265260644.0</statistic>
                <statistic aggregation='Avg' datatype='real'>24668.758900370442</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>51288</statistic>
                <statistic aggregation='Stdev' datatype='real'>14819.236702394193</statistic>
                <statistic aggregation='StdevP' datatype='real'>14819.09223652428</statistic>
                <statistic aggregation='Var' datatype='real'>219609776.44158715</statistic>
                <statistic aggregation='VarP' datatype='real'>219605494.71461421</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>42475975596876.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>2</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>3</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1102</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;_iauliai&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zulia&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>165</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>5</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Canada&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>6</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USCA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_14</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_14</remote-alias>
              <ordinal>7</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2834</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>236756858.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4616.0432442971342</statistic>
                <statistic aggregation='Min' datatype='integer'>2000</statistic>
                <statistic aggregation='Max' datatype='integer'>6634</statistic>
                <statistic aggregation='Stdev' datatype='real'>1147.3996515016145</statistic>
                <statistic aggregation='StdevP' datatype='real'>1147.3884660342303</statistic>
                <statistic aggregation='Var' datatype='real'>1316525.9602660264</statistic>
                <statistic aggregation='VarP' datatype='real'>1316500.2919883842</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1160403194888.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_15</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_15</remote-alias>
              <ordinal>8</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_16</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_16]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_16</remote-alias>
              <ordinal>9</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_17</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_17]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_17</remote-alias>
              <ordinal>10</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3787</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#10 Gummed Flap White Envelopes, 100/Box&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_18</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_18]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_18</remote-alias>
              <ordinal>11</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16687</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>22638.48</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_19</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_19]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_19</remote-alias>
              <ordinal>12</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>169429.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.3033534802105673</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>14</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.1927757255287301</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1927543491745309</statistic>
                <statistic aggregation='Var' datatype='real'>4.8082653824680497</statistic>
                <statistic aggregation='VarP' datatype='real'>4.8081716358238209</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>806295.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_110</remote-name>
              <remote-type>20</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_110</remote-alias>
              <ordinal>13</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23269</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>201202103041133</statistic>
                <statistic aggregation='Max' datatype='integer'>2015021880140042240</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>14</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_20</remote-alias>
              <ordinal>15</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_21]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>16</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10320</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>8300.0799999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_22</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_22]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_22</remote-alias>
              <ordinal>17</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13472</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>878.38</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_23</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_23]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_23</remote-alias>
              <ordinal>18</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_24</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_24</remote-alias>
              <ordinal>19</ordinal>
              <family>globalshipments</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1430</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-07-08#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_3 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>20</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>579679</statistic>
                <statistic aggregation='Max' datatype='integer'>38421464</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>21</ordinal>
              <family>globalshipments</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1464</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-03#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-07#</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_4 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>22</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>295561</statistic>
                <statistic aggregation='Max' datatype='integer'>19087135</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>23</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>24</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>284118</statistic>
                <statistic aggregation='Max' datatype='integer'>19334329</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_51</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_51</remote-alias>
              <ordinal>25</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15089</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>218801408.0</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>26</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>796</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>27</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>28</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>632</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1040</statistic>
                <statistic aggregation='Max' datatype='integer'>99301</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>29</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3649</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aachen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwolle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>51290</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.378676' group-percentage='0.110294' measure-ordering='alphabetic' measure-percentage='0.334559' parameter-percentage='0.176471' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
          <calculation class='tableau' formula='0.00020000000000000001' />
          <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
        </column>
        <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='8.0'>
          <calculation class='tableau' formula='8.0' />
          <range granularity='0.5' max='12.0' min='6.0' />
        </column>
        <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range granularity='0.5' max='6.0' min='0.0' />
        </column>
        <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
          <calculation class='tableau' formula='2.0000000000000002e-05' />
          <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
        </column>
        <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
          <calculation class='tableau' formula='0.089999999999999997' />
          <range granularity='0.01' max='0.10000000000000001' min='0.0' />
        </column>
        <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
          <calculation class='tableau' formula='0.13' />
          <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Crosstab + KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279863955456]' derivation='User' name='[usr:Calculation_46795279863955456:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
              <calculation class='tableau' formula='0.00020000000000000001' />
              <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
            </column>
            <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
              <calculation class='tableau' formula='2.0000000000000002e-05' />
              <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Least Used Shipping Mode]' derivation='InOut' name='[io:Two Least Used Shipping Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - Sales per person (copy)]' derivation='User' name='[usr:KPI - Sales per person (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]'>
            <groupfilter function='member' level='[io:Two Least Used Shipping Mode:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_46795279869964289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_21])/SUM([v_18])' />
            </column>
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279869964289]' derivation='User' name='[usr:Calculation_46795279869964289:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3 w/ Set and Parameters'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
              <calculation class='tableau' formula='0.089999999999999997' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
            <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
              <calculation class='tableau' formula='0.13' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Five Highest Sub-Categories]' derivation='InOut' name='[io:Five Highest Sub-Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]'>
            <groupfilter function='member' level='[io:Five Highest Sub-Categories:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI w/ Two Highest Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='8.0'>
              <calculation class='tableau' formula='8.0' />
              <range granularity='0.5' max='12.0' min='6.0' />
            </column>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.5' max='6.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Highest Shipping Segments]' derivation='InOut' name='[io:Two Highest Shipping Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - AVG Shipping Cost (copy)]' derivation='User' name='[usr:KPI - AVG Shipping Cost (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]'>
            <groupfilter function='member' level='[io:Two Highest Shipping Segments:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab 3 Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
              <calculation class='tableau' formula='0.089999999999999997' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
            <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
              <calculation class='tableau' formula='0.13' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Five Highest Sub-Categories]' derivation='InOut' name='[io:Five Highest Sub-Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]'>
            <groupfilter function='member' level='[io:Five Highest Sub-Categories:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-22170906.555965275' min='-71639794.07609421' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='20516614.029882006' min='-11893614.795813307' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Sales Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
              <calculation class='tableau' formula='0.00020000000000000001' />
              <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
            </column>
            <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
              <calculation class='tableau' formula='2.0000000000000002e-05' />
              <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Sales per person (copy)]' derivation='User' name='[usr:KPI - Sales per person (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]' />
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-7576056.0056048259' min='-14871981.943447307' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='6544013.2543693203' min='2491489.4633023124' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Shipping Costs Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]' />
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Central US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Eastern US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Southern US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Western US&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-6276191.6467133826' min='-14964330.029719662' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='7107994.7567524761' min='2279878.0261297375' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Shipping Costs Map w/ Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='8.0'>
              <calculation class='tableau' formula='8.0' />
              <range granularity='0.5' max='12.0' min='6.0' />
            </column>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range granularity='0.5' max='6.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Highest Shipping Segments]' derivation='InOut' name='[io:Two Highest Shipping Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - AVG Shipping Cost (copy)]' derivation='User' name='[usr:KPI - AVG Shipping Cost (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]'>
            <groupfilter function='level-members' level='[io:Two Highest Shipping Segments:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-6276191.6467133826' min='-14964330.029719662' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='7107994.7567524761' min='2279878.0261297375' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Two Highest Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Two Least Used Shipping Modes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Crosstab + KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Two Highest Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Corporate&quot;</value>
                <value>70386.390000000014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Consumer&quot;</value>
                <value>114143.09390000007</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI w/ Two Highest Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' type='color' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI Low (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_1 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_13:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_23:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Region Shipping Costs Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Region Shipping Costs Map w/ Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI Low (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Two Least Used Shipping Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Same Day&quot;</value>
                <value>619054.5700000003</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;First Class&quot;</value>
                <value>1704045.5900000429</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' type='color' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI - Sales per person Low to High (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Region Sales Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI - Sales per person Low to High (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[attr:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Five Highest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Storage&quot;</value>
                <value>1056414.5200000007</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Phones&quot;</value>
                <value>1599679.5600000042</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Copiers&quot;</value>
                <value>1393871.2000000014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chairs&quot;</value>
                <value>1392548.9700000007</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bookcases&quot;</value>
                <value>1375712.3300000022</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 3 w/ Set and Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Crosstab 3 Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crosstab + KPI' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3 w/ Set and Parameters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI w/ Two Highest Segments' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Crosstab 3 Map' width='192'>
      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
      CEMxF6trikmlUtRUVfDonh2oqkIymURVVb79jVfw+bw5VkRKSTye4Ls/fY+THb3YUlJfV8Mr
      z+zlz3/8PjG8JBUPKb0YW9GZMZqI2zrTU1OzJquqqiSTSdLp9Dz35+yqn8/LF1KDSilnOdDN
      JZpCq38hg9edUIHCF3wHsCzrrqXMu58gpWRoeIS3jveimHGw0ghRytT0NFWVlUgpee/gMZwO
      ncf37gQkHx46zmN7tnPi8/NMTs+wfk0zsTR8fDlK79C7FPucTPR1MKQ0gaKAlCh2EpDYQieG
      h57BCbZuvj4OVVXx+/1Eo9Gc+3O+6hPmT9bsyp//rW72m2WJQVEUvF7vHf3m9zUBSCkJRyJM
      Tweprsp86PxsZFlT/Jcd8Xic//SjD4jaHtZUOFnTWE/vaIgPTn7I8w+tYfe2TXT0jOB2OXlk
      t4mU8NHRk1y4dIWZaIpxKhgLnud3v7KX9458ztiUyZlhSaO/kj9+bAMIweXeEVobW/H7PBw4
      dpbSYj/P7ds9j83In+CqqqKqKpqmkUqlcrtNIRSy5hZyeV4I2XHE43EMw+BOFXe/bxNjWZbF
      1NQUP3zrIGNhm5ZyjVgKdm5sYcvG9ruSJu9+hZSSU2c76Lh0hZKSEkLTExzptZGaE8VO8kcv
      buRS9wAfXwxS6Yzx3KPbcOoqR05f5sxgCqk4aCk2+ae/9wrJZJLxiUn+vx8epr3Gxe9//VkM
      w8C2bfoGBgnOhGisr8PrWTjIJLuiZwXcrL4+EonMS3tSyN+/kMankCCdr03KHgMwDAO3231H
      vr/6r//1v/4/7hQ13UnE43Heefd9zvRFiSt+hifDpCLTfNobx02UoaEhFEXg8biXrEL7okII
      QXVlOZvWt9E/MEgiLbk6oyDtNFLo9PQNIqTJeMQmZLup8tisbqpjZGyCEqfNSMiktsTAqUp+
      dfAka5uqOXruKiMxja6OMwyPT/HxZxf55fFeTnZPc/LsZZqqApSVFC84nvzJnz2maRrJZHIW
      /56/K8xtf6NnXuy7ZoXgL603qMvl4onH92EYOgIbHD5iKQvDmqGmspSDp7v5Dz86wF/83VvM
      zMzc6+EuG5587GFaV9VT7ojS6ApTY4QIh0N0jIEiJC7iOHWFz06f5xsvP82a5nocIk1rfRn7
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Five Highest' width='192'>
      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
      /h/3E20nCfyXJwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Region Sales Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region Shipping Costs Map' width='192'>
      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
      W99pgsNw5H0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Region Shipping Costs Map w/ Parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Two Highest Segments' width='192'>
      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
      Qmv/D/w95S6MZyArAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Two Least Used Shipping Modes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAQtklEQVR4nO3daWyU953A8e9zzDNje2Y8NtjGmNMUEhqTEGiCcrXiWEqSkmZJoK02WrW7
      rHa3qpqVqq22K1XaF632zTaq1H3ToiXdHuk2TQubJjFHuQ0EB3ME2xzGYBvbnD7GY8/1HP99
      4YQkWrXFCWOD/7+PhGTLZub/jJ/vc848j6GUUgihKXOiByDERJIAhNYkAKE1CUBoTQIQWpMA
      hNYkgLuBUgRBgHrv63wuhx+8f/R69GdBcBuPZquAXC5HoMERcgngjpdn3+u/4KWXXuLl32wn
      kxvif3/zCu0D7uiPVcDhhnpeO9LxRx+h7/w77DpxiQAIMlf58Q9/SGNb7x9/Sq+Pl3/xGgOZ
      4LZOyZ1IArjDXTv5Or/Z08XKz68iik/Oz9PReoqzZ5vZ3/A2N4bzzKqsYdGsMvIjNzh9upV9
      +xpo7+m/+RjJjhO8tWUbI/mAzkNvsWXbXpo7r+Jnhzi8dwcH3mkh7QYoP8eF1uMcbDxCS3Mr
      Od+nr/scf9i5l3NdfRP4KhSOPdEDEH9aKBJjOHWVi1fTLF/1WUrDHlY6xd5tbxAa6qIzu5H7
      r5+md2EZU4fP8r2XdvLA7GL+5+f7+fcff4eEZWBbaYqsAa7euM6Bwx08tXoZIT/NGz/9MQ19
      JkVDb9Fx7QWWFHfyk1/to/bT0xgKAkb6u9j8H/9JZd0Cdu1q4MV/+1emRSbXMnNyTc0kVHbP
      Kr75tadpO/A6//zi97kykoNoKV/5+rd57pkVXL7aj+unyfs+ga9Yev/zfOvbLzKv6jLtfaOb
      SZZt8cD0BGdON9GppjFvepR08hoNzdf5zr98i3/42gZOnzjG8XePs3rjN3nxG1+lwrIY6r/E
      ucEsmbxLX895Tl0amuBX4/aTAO5oAb2tpwlPv4+//fuNzIz1cz3t4gGgQKmP/gENRY40fT09
      XL6uSBS/91PD5OEltfz+t/VUzpmLHXiYoTAhfHr7k/Td6MUqCmOHbPqS/QzcuIGrFIYRwnRK
      eeSJFWz8+t9RV1Uy7q9Aockm0B0uP9DNT17ZhFMUIlL9GWbFi5mSSFDsWPjhYkqLi4ioKEWO
      DcrnyP5XuN4WZfriJ5kdHf3zWk4Z5fcspSJyiHsW1RHuuER11Uw+89zD/Oj73yMe8njyhW8w
      26/mRz//Fad2glFaxbSaBXxuXoTfvfprwnYFf/PpZRP7YhSAIe8GvfOpIMALAkL2n15eXW15
      g58dmMI/bXyYkG3d0mO72Qy+5RAJjf6+l8uDZWPb769bAvI5DzsUwjSNTzIZdyQJYBLJpa5x
      JRli1owyJt+sWhiTIoD3J8Ew5M8uxmZS7AR7nsck6FhMgEkRgBAflwQgtCYBCK1JAEJrEoDQ
      mgQgtCYBCK1JAEJrEoDQmgQgtCYBCK1JAEJrEoDQmgQgtCYfiRR3jNYLf+JaRbdZbU0FkXBI
      1gBCbxKA0JoEILQmAQitSQBCawUPwHdztJ9u4fJgDlBkUzd4+2ADBw8f5fLACOBz6exJ9uzZ
      x4UrSRSQG7rGwf17aTzWSs6Hwb7rDA5lAMWl9nMMZb1CD1toosABeBzbXc+2LVtpvDgIQZ5T
      R05iRssoMUfYfaCR5KVWGk50MK2mnEM7dnKtf4A9u3ZAvIpMTzON73Zx6fw5ei4PcL29kYNN
      HRiT8AJNYmIU+DyAxeLlTzGt1OUdT4EZ5qFVKwFoP7YbwzbpuNjD3MVLWLhgJkPd3Vzt6iUX
      rmTlonsZmV7MoaZO4mUG2YEr1Le0smr9V4g5t3bVMyH+nAIHYBByHD588xLlZ9n/5lZ681Ge
      fHoN7Ud2E3McAEKhIlDghB0MA0wssrkMQaA4fOgYiRkLqSgZ/V3P8/B9f/QxlcLzPLkwlrhl
      uXwOlD8+Z4JNFEoByudMww4uhT7Fs6sfoCRsURoxuTSQ5NNzKxgcvEHV1BqSySSur8hlBnGK
      ophmwPI1T9N75jBHz19l2YJqbNvGfu9ama7rYlkWpin79OLWhJ0wkXCowAEEaQ7+YT9t59ro
      JcMev47O0xexp3psf6OTkuoFLK+7l6bX6vld5zGGcuU8NHcm2cvv8uvfbcEY7GPpmg1wtQXT
      KWHVU5/n1VffpLpsPXMqJ9+lusX4K+y1QVVAJpO5eUM30w5hKh/PH733lGGFKClyyKZTDKVy
      xMvKCDs2yncZ7B/EjBQTj5YQ+C4YFrZlks9lMW0H2/pgaS9rgMlhIt4LVNg1gGFSVPznl9SR
      4jiR4g/9NytEeUXFze9NO3Tzayccua1DFHqTRabQmgQgtCYBCK1JAEJrEoDQmgQgtCYBCK1J
      AEJrEoDQmgQgtCYBCK1JAEJrEoDQmgQgtCYBCK1JAEJrEoDQmgQgtCYBCK1JAEJrEoDQmgQg
      tCYBCK1JAEJrEoDQmgQgtCYBCK1JAEJrEoDQmgQgtCYBCK1JAEJrEoDQmgQgtCYBCK1JAEJr
      EoDQmgQgtCYBCK1JAEJrBQ9AKUU+l7t5d3ilfFLJQQaH0wSBAhT5bJq+vgHyno8CAt8jOdDP
      0EiGQIHve/h+ACjcfP7mneeF+KQKe6d4fM4c2c+2HQdY8MV/5OkHptB1bD/1J3spsdPM/cxq
      Hqox2fLbesx4lExQybpnHufc4XpOXXYxU0MseXI9XGnGSMxjfqXLa1saWPn8c1TFnMIOXWih
      wAEYVM6+h9WPdnM27xNkkxx6d5C/euHL0N/J641nqRyymLZkBZ9bXMveN7bS2d7JhUGTDeuf
      Z+TyGRpbW5mRANJJtm8/RN2KtVTKzC9ukwIHYDKlejrDHREAVOBiVJQTcyz8eBxD2SSzHhVV
      MQxMEokpqLxHNF6KYxl4kTjZTDdBPGDP9iNU1i5m4cwpGIDnefi+P/q4SuF5HoZhFHZyxKSR
      y+dA+YUOYNT7s6VhWPjDw7iAl83iezkiJiSzGQAy2WGisUoy2RxKQaBciouLME2DlavXcOro
      Ybr6ljGvogTbtrHt0eG7rotlWZim7NOLWxN2wkTCoQLvBCuX3q5Ouq/103e5g96hgAXFWXYe
      PsXJd49RNq2a2XNn0nnyJOfam2nvTlM1q5qi/HWOtrZx8p23KamYhWkYhEoSrH1qGYd27aBv
      xC3osIU+DKVU4Q6pBFlaTzQzmM0DEK2YzX2zYrx96B38olIWL15MPGLQefo4bd1J5tQtZV51
      glzyCkeaWnBiVTy4pI7MwDUMJ0YiXkRP+1mKKmZTHo/cfBpZA0wOrRd6x+25amsqiIRDBQ5g
      nEgAk8NEBCBzjNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsS
      gNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEI
      rUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsSgNCaBCC0JgEIrUkAQmsTEIAi
      8H384IP7c6sgIJ93+fA9uz03jxcE4z88oRV7XJ9NBfS0HWPbwRZCTpgHHllO3cxiDm57k/M3
      0tTc+ygrHp7PjfbjbD/YTMhJsOqZpxnpPosRm87syjD7d+1j4WMrqYqHx3XoYnIa1wCUl2LX
      vha++NcvYF87z1tNzUwddhiMLeCra+v4/SuvcrGqiKajZ1j7pRcYvvg27xxpZlY0jW2Ucvzc
      drKlS5gqM7+4TcZ3DWDHePy+OC+//EtK/UFmPfQFevvPMWvmpzBxmDmzhlxymETlDEojFqGK
      OQQX2ghKAo4f2Y9rlfLlL83HAoIgIHhvEykIApRSGIYxrpMj7l6e7+G6470GcFO09nisWv4I
      1tA13u3toqpU4b83I/uBj21AoN7f9leYpgGYJErLuNo/TNb1iYRGd10+PMMbhiEBiFtmMDq/
      jO8awHfpz/g8PqeWUNLi7fOnqZ6X4OCFSyyeP4XOiz08uHIhgy1N9Gd8hnvOQKQS00gxZ+F8
      7h1uoX7/Udb9xSOErQ/234MgwLIsTFMOaolbY1kWtm2PbwBGpJzVy+az5ZWfYYSKWPbocqpm
      x5nR8yb//V8t1C5ZwZyaasoeX8zrr/6ccHEVa56pI9XdhhmNUjN/JQMH9nL1RopZVbHxHLqY
      pAz14WOP40EpgsAnwMR+bymuVIDn+tgh++ZmjOe6GJaFdQtLddd1ZQ0wCbRe6B2356qtqSAS
      Do3zJhCAYWBa9kdOQBiGScj56Mxrh0LjOy6hJVlkCq1JAEJrEoDQmgQgtCYBCK1JAEJrEoDQ
      mgQgtCYBCK1JAEJrEoDQmgQgtCYBCK1JAEJrEoDQmgQgtCYBCK1JAEJrEoDQmgQgtCYBCK2N
      OQDP89ixYwdDQ0P84Ac/YPPmzTcvUSjE3WbMASSTSdra2mhpaWHGjBkMDg4yMDBQiLEJUXBj
      DiAajaKUor6+nmXLlhEOhykpKSnE2IQouDFfGCscDrN+/Xq6urqIx+OsXr2aSCRSiLEJUXBj
      DsB1XXbv3k1zczNPPPEEnZ2dzJkzh5BcyU3chca8CTQ4OEgqlWLDhg2Ew2HS6TTpdLoQYxOi
      4Ma8BigtLcW2bbZu3Uo6nWbatGlEo9FCjE2IgvtYV4f2PI+2tjaUUtTW1k74PoBcHXpyuOOv
      Dt3Y2EhDQ8NH7uZYXFzMxo0bZR9A3JXGFMDChQuZPn06yWSSfD6PZVk3/wlxNxpTALFYDMMw
      2LRpE77vs2DBAtrb2/nud78rmx/irvSxDoOWl5ezaNEiHMfh+vXrpFIpysrKCjE+IQpqzIvt
      eDzOgw8+SF1dHSdOnCAUCsmZYHHXGtMawPd9Ojo6eOyxx+jv72f+/Pncd999OI5TqPEJUVBj
      WgO0tbVx4MABcrkcmzZtor+/n82bN+N5XqHGJ0RBjSmAVCpFOBymt7cX3/d59tlnMU2T4eHh
      Qo1PiIIa82HQbdu20dzczLp16xgZGcGyLGIxuWevuDuN+UxwKpXCdV0SiQS+75NOpyktLS3U
      +G6JnAmeHO74M8HAR5b2pmmOeeZXSpEdGSbrKUqiJTi2ST6bITWSI1YaJ2RbKN8jNTSE4RQR
      LS5CBR5gYlkGbt7FtENYpjHWoQvx/4zzjbIV/R1NvLbzBFMTCWYtWsr90222/LYeMx4lE1Sy
      7pnHOXe4nlOXXczUEEueXA9XmjES85hf6fLalgZWPv8cVTE58iQ+uXENQHkj7N9/js+uWUOp
      E6Z8SjmdTXuZtmQFn1tcy943ttLZ3smFQZMN659n5PIZGltbmZEA0km2bz9E3Yq1VMrML26T
      cQ0gcLP0py5zvOkYdi5JZMb9VHs+FVUxDEwSiSmovEc0XopjGXiRONlMN0E8YM/2I1TWLmbh
      zCkYjL4j1fd9YHSzyrIsPsYbW4WmFAql1PgGYJgmTtEs1v3lM9ipq/xyx3HmViiS2QwAmeww
      0VglmWwOpSBQLsXFRZimwcrVazh19DBdfcuYV1GCbdvY9ujwXdcln8+P56SIu5ybdzFUML4B
      mE6cB2aE2Ln3GHNiWZRhM3vuNN48eJKpzjDt3WlWL62m50ITR1vbyHc2UTL9UUy3G6skwdqn
      lvH6rh0k1n6BKSUfffu14zhyFEjcMsdxiIRDH+8DMZ+EckdoOtRIUjncu+h+aqYU03n6OG3d
      SebULWVedYJc8gpHmlpwYlU8uKSOzMA1DCdGIl5ET/tZiipmUx7/4EM4chh0cpiIw6DjHkAh
      SACTw0QEIHOM0JoEILT2fw2LTMVsWDkBAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
